"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.tsx
var src_exports = {};
__export(src_exports, {
  SummaryDetail: () => SummaryDetail,
  SummaryDetailContent: () => SummaryDetailContent,
  SummaryDetailHeading: () => SummaryDetailHeading,
  SummaryDetailHeadingContent: () => SummaryDetailHeadingContent,
  SummaryDetailToggleButton: () => SummaryDetailToggleButton,
  useSummaryDetailState: () => import_disclosure_primitive.useDisclosurePrimitiveState
});
module.exports = __toCommonJS(src_exports);

// src/SummaryDetail.tsx
var import_box = require("@twilio-paste/box");
var import_disclosure_primitive = require("@twilio-paste/disclosure-primitive");
var import_uid_library = require("@twilio-paste/uid-library");
var React2 = __toESM(require("react"));

// src/SummaryDetailContext.tsx
var React = __toESM(require("react"));
var SummaryDetailContext = React.createContext(void 0);

// src/SummaryDetail.tsx
var SummaryDetail = React2.forwardRef(
  ({ children, element = "SUMMARY_DETAIL", state, ...props }, ref) => {
    const headerId = (0, import_uid_library.useUID)();
    const stateForContext = state || (0, import_disclosure_primitive.useDisclosurePrimitiveState)(props);
    return /* @__PURE__ */ React2.createElement(SummaryDetailContext.Provider, { value: { ...stateForContext, headerId } }, /* @__PURE__ */ React2.createElement(
      import_box.Box,
      {
        ...(0, import_box.safelySpreadBoxProps)(props),
        ref,
        element,
        display: "flex",
        flexDirection: "column",
        rowGap: "space40"
      },
      children
    ));
  }
);
SummaryDetail.displayName = "SummaryDetail";

// src/SummaryDetailHeading.tsx
var import_box2 = require("@twilio-paste/box");
var React3 = __toESM(require("react"));
var SummaryDetailHeading = React3.forwardRef(
  ({ children, element = "SUMMARY_DETAIL_HEADING", ...props }, ref) => {
    return /* @__PURE__ */ React3.createElement(
      import_box2.Box,
      {
        ...(0, import_box2.safelySpreadBoxProps)(props),
        ref,
        display: "flex",
        alignItems: "center",
        columnGap: "space40",
        element
      },
      children
    );
  }
);
SummaryDetailHeading.displayName = "SummaryDetailHeading";

// src/SummaryDetailHeadingContent.tsx
var import_box3 = require("@twilio-paste/box");
var React4 = __toESM(require("react"));
var SummaryDetailHeadingContent = React4.forwardRef(
  ({ children, element = "SUMMARY_DETAIL_HEADING_CONTENT", ...props }, ref) => {
    const context = React4.useContext(SummaryDetailContext);
    return /* @__PURE__ */ React4.createElement(import_box3.Box, { ref, ...(0, import_box3.safelySpreadBoxProps)(props), width: "100%", element, id: context?.headerId }, children);
  }
);
SummaryDetailHeadingContent.displayName = "SummaryDetailHeadingContent";

// src/SummaryDetailToggleButton.tsx
var import_box4 = require("@twilio-paste/box");
var import_button = require("@twilio-paste/button");
var import_disclosure_primitive2 = require("@twilio-paste/disclosure-primitive");
var import_ChevronDisclosureIcon = require("@twilio-paste/icons/cjs/ChevronDisclosureIcon");
var React5 = __toESM(require("react"));
var ToggleButton = React5.forwardRef((props, ref) => {
  const rotation = props["aria-expanded"] ? "90" : "0";
  const ariaLabelledBy = props["aria-label"] ? void 0 : props["aria-labelledby"];
  return /* @__PURE__ */ React5.createElement(
    import_button.Button,
    {
      ref,
      variant: "reset",
      size: "reset",
      width: "sizeIcon30",
      height: "sizeIcon30",
      borderRadius: "borderRadius20",
      _hover: { backgroundColor: "colorBackground" },
      ...props,
      "aria-labelledby": ariaLabelledBy
    },
    /* @__PURE__ */ React5.createElement(import_box4.Box, { as: "span", element: `${props.element}_ICON_WRAPPER`, transform: `translateX(0) rotate(${rotation}deg)` }, /* @__PURE__ */ React5.createElement(import_ChevronDisclosureIcon.ChevronDisclosureIcon, { decorative: true, size: "sizeIcon30", element: `${props.element}_ICON}` }))
  );
});
ToggleButton.displayName = "ToggleButton";
var SummaryDetailToggleButton = React5.forwardRef(
  ({ element = "SUMMARY_DETAIL_TOGGLE_BUTTON", ...props }, ref) => {
    const context = React5.useContext(SummaryDetailContext);
    return /* @__PURE__ */ React5.createElement(
      import_disclosure_primitive2.DisclosurePrimitive,
      {
        ...props,
        as: ToggleButton,
        ...context,
        ref,
        element,
        "aria-labelledby": context?.headerId
      }
    );
  }
);
SummaryDetailToggleButton.displayName = "SummaryDetailToggleButton";

// src/SummaryDetailContent.tsx
var import_box5 = require("@twilio-paste/box");
var import_disclosure_primitive3 = require("@twilio-paste/disclosure-primitive");
var React6 = __toESM(require("react"));
var SummaryDetailContent = React6.forwardRef(
  ({ children, element = "SUMMARY_DETAIL_CONTENT", ...props }, ref) => {
    const context = React6.useContext(SummaryDetailContext);
    return /* @__PURE__ */ React6.createElement(import_disclosure_primitive3.DisclosurePrimitiveContent, { ...(0, import_box5.safelySpreadBoxProps)(props), as: import_box5.Box, ...context, element, ref }, children);
  }
);
SummaryDetailContent.displayName = "SummaryDetailContent";
