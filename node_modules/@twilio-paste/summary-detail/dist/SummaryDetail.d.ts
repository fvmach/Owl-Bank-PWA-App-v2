import type { BoxProps } from "@twilio-paste/box";
import { type DisclosurePrimitiveInitialState, type DisclosurePrimitveStateReturn, useDisclosurePrimitiveState } from "@twilio-paste/disclosure-primitive";
import * as React from "react";
export interface SummaryDetailStateReturn extends DisclosurePrimitveStateReturn {
    [key: string]: any;
}
export interface SummaryDetailProps extends DisclosurePrimitiveInitialState {
    children: NonNullable<React.ReactNode>;
    /**
     * Overrides the default element name to apply unique styles with the Customization Provider
     *
     * @default 'SUMMARY_DETAIL'
     * @type {BoxProps['element']}
     * @memberof SummaryDetailProps
     */
    element?: BoxProps["element"];
    /**
     * Provide the Disclosure state returned from `useDisclosureState` if you want to control the state of the Disclosure.
     *
     * @type {DisclosureStateReturn}
     * @memberof SummaryDetailProps
     */
    state?: SummaryDetailStateReturn;
}
export declare const SummaryDetail: React.ForwardRefExoticComponent<SummaryDetailProps & React.RefAttributes<HTMLDivElement>>;
export { useDisclosurePrimitiveState as useSummaryDetailState };
export type { DisclosurePrimitiveInitialState as SummaryDetailInitialState };
//# sourceMappingURL=SummaryDetail.d.ts.map