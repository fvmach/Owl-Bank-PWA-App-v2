// src/SummaryDetail.tsx
import { Box, safelySpreadBoxProps } from "@twilio-paste/box";
import {
  useDisclosurePrimitiveState
} from "@twilio-paste/disclosure-primitive";
import { useUID } from "@twilio-paste/uid-library";
import * as React2 from "react";

// src/SummaryDetailContext.tsx
import * as React from "react";
var SummaryDetailContext = React.createContext(void 0);

// src/SummaryDetail.tsx
var SummaryDetail = React2.forwardRef(
  ({ children, element = "SUMMARY_DETAIL", state, ...props }, ref) => {
    const headerId = useUID();
    const stateForContext = state || useDisclosurePrimitiveState(props);
    return /* @__PURE__ */ React2.createElement(SummaryDetailContext.Provider, { value: { ...stateForContext, headerId } }, /* @__PURE__ */ React2.createElement(
      Box,
      {
        ...safelySpreadBoxProps(props),
        ref,
        element,
        display: "flex",
        flexDirection: "column",
        rowGap: "space40"
      },
      children
    ));
  }
);
SummaryDetail.displayName = "SummaryDetail";

// src/SummaryDetailHeading.tsx
import { Box as Box2, safelySpreadBoxProps as safelySpreadBoxProps2 } from "@twilio-paste/box";
import * as React3 from "react";
var SummaryDetailHeading = React3.forwardRef(
  ({ children, element = "SUMMARY_DETAIL_HEADING", ...props }, ref) => {
    return /* @__PURE__ */ React3.createElement(
      Box2,
      {
        ...safelySpreadBoxProps2(props),
        ref,
        display: "flex",
        alignItems: "center",
        columnGap: "space40",
        element
      },
      children
    );
  }
);
SummaryDetailHeading.displayName = "SummaryDetailHeading";

// src/SummaryDetailHeadingContent.tsx
import { Box as Box3, safelySpreadBoxProps as safelySpreadBoxProps3 } from "@twilio-paste/box";
import * as React4 from "react";
var SummaryDetailHeadingContent = React4.forwardRef(
  ({ children, element = "SUMMARY_DETAIL_HEADING_CONTENT", ...props }, ref) => {
    const context = React4.useContext(SummaryDetailContext);
    return /* @__PURE__ */ React4.createElement(Box3, { ref, ...safelySpreadBoxProps3(props), width: "100%", element, id: context?.headerId }, children);
  }
);
SummaryDetailHeadingContent.displayName = "SummaryDetailHeadingContent";

// src/SummaryDetailToggleButton.tsx
import { Box as Box4 } from "@twilio-paste/box";
import { Button } from "@twilio-paste/button";
import { DisclosurePrimitive } from "@twilio-paste/disclosure-primitive";
import { ChevronDisclosureIcon } from "@twilio-paste/icons/esm/ChevronDisclosureIcon";
import * as React5 from "react";
var ToggleButton = React5.forwardRef((props, ref) => {
  const rotation = props["aria-expanded"] ? "90" : "0";
  const ariaLabelledBy = props["aria-label"] ? void 0 : props["aria-labelledby"];
  return /* @__PURE__ */ React5.createElement(
    Button,
    {
      ref,
      variant: "reset",
      size: "reset",
      width: "sizeIcon30",
      height: "sizeIcon30",
      borderRadius: "borderRadius20",
      _hover: { backgroundColor: "colorBackground" },
      ...props,
      "aria-labelledby": ariaLabelledBy
    },
    /* @__PURE__ */ React5.createElement(Box4, { as: "span", element: `${props.element}_ICON_WRAPPER`, transform: `translateX(0) rotate(${rotation}deg)` }, /* @__PURE__ */ React5.createElement(ChevronDisclosureIcon, { decorative: true, size: "sizeIcon30", element: `${props.element}_ICON}` }))
  );
});
ToggleButton.displayName = "ToggleButton";
var SummaryDetailToggleButton = React5.forwardRef(
  ({ element = "SUMMARY_DETAIL_TOGGLE_BUTTON", ...props }, ref) => {
    const context = React5.useContext(SummaryDetailContext);
    return /* @__PURE__ */ React5.createElement(
      DisclosurePrimitive,
      {
        ...props,
        as: ToggleButton,
        ...context,
        ref,
        element,
        "aria-labelledby": context?.headerId
      }
    );
  }
);
SummaryDetailToggleButton.displayName = "SummaryDetailToggleButton";

// src/SummaryDetailContent.tsx
import { Box as Box5, safelySpreadBoxProps as safelySpreadBoxProps4 } from "@twilio-paste/box";
import { DisclosurePrimitiveContent } from "@twilio-paste/disclosure-primitive";
import * as React6 from "react";
var SummaryDetailContent = React6.forwardRef(
  ({ children, element = "SUMMARY_DETAIL_CONTENT", ...props }, ref) => {
    const context = React6.useContext(SummaryDetailContext);
    return /* @__PURE__ */ React6.createElement(DisclosurePrimitiveContent, { ...safelySpreadBoxProps4(props), as: Box5, ...context, element, ref }, children);
  }
);
SummaryDetailContent.displayName = "SummaryDetailContent";
export {
  SummaryDetail,
  SummaryDetailContent,
  SummaryDetailHeading,
  SummaryDetailHeadingContent,
  SummaryDetailToggleButton,
  useDisclosurePrimitiveState as useSummaryDetailState
};
