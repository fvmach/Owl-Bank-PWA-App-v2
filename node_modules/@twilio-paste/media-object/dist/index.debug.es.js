// src/MediaObject.tsx
import { Box, safelySpreadBoxProps } from "@twilio-paste/box";
import * as React from "react";
var MediaObject = React.forwardRef(
  ({ as = "span", children, element = "MEDIA_OBJECT", marginBottom, marginTop, verticalAlign = "top", ...props }, ref) => {
    return /* @__PURE__ */ React.createElement(
      Box,
      {
        ...safelySpreadBoxProps(props),
        alignItems: verticalAlign === "top" ? "flex-start" : "center",
        as,
        display: "flex",
        element,
        marginBottom,
        marginTop,
        ref
      },
      children
    );
  }
);
MediaObject.displayName = "MediaObject";

// src/MediaFigure.tsx
import { Box as Box2, safelySpreadBoxProps as safelySpreadBoxProps2 } from "@twilio-paste/box";
import * as React2 from "react";
var MediaFigure = React2.forwardRef(
  ({ align = "start", as = "span", children, element = "MEDIA_FIGURE", spacing = "space0", ...props }, ref) => {
    return /* @__PURE__ */ React2.createElement(
      Box2,
      {
        ...safelySpreadBoxProps2(props),
        as,
        display: "flex",
        element,
        flexShrink: 0,
        marginLeft: align === "end" ? spacing : void 0,
        marginRight: align === "start" ? spacing : void 0,
        ref
      },
      children
    );
  }
);
MediaFigure.displayName = "MediaFigure";

// src/MediaBody.tsx
import { Box as Box3, safelySpreadBoxProps as safelySpreadBoxProps3 } from "@twilio-paste/box";
import * as React3 from "react";
var MediaBody = React3.forwardRef(
  ({ as = "span", children, element = "MEDIA_BODY", ...props }, ref) => {
    return /* @__PURE__ */ React3.createElement(Box3, { ...safelySpreadBoxProps3(props), as, element, flex: 1, minWidth: "size0", ref }, children);
  }
);
MediaBody.displayName = "MediaBody";
export {
  MediaBody,
  MediaFigure,
  MediaObject
};
