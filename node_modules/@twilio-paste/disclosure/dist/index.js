"use strict";var __create=Object.create;var __defProp=Object.defineProperty;var __getOwnPropDesc=Object.getOwnPropertyDescriptor;var __getOwnPropNames=Object.getOwnPropertyNames;var __getProtoOf=Object.getPrototypeOf,__hasOwnProp=Object.prototype.hasOwnProperty;var __export=(target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:!0})},__copyProps=(to,from,except,desc)=>{if(from&&typeof from=="object"||typeof from=="function")for(let key of __getOwnPropNames(from))!__hasOwnProp.call(to,key)&&key!==except&&__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});return to};var __toESM=(mod,isNodeMode,target)=>(target=mod!=null?__create(__getProtoOf(mod)):{},__copyProps(isNodeMode||!mod||!mod.__esModule?__defProp(target,"default",{value:mod,enumerable:!0}):target,mod)),__toCommonJS=mod=>__copyProps(__defProp({},"__esModule",{value:!0}),mod);var src_exports={};__export(src_exports,{Disclosure:()=>Disclosure,DisclosureContent:()=>DisclosureContent,DisclosureHeading:()=>DisclosureHeading,useDisclosureState:()=>import_disclosure_primitive.useDisclosurePrimitiveState});module.exports=__toCommonJS(src_exports);var import_box=require("@twilio-paste/box"),import_disclosure_primitive=require("@twilio-paste/disclosure-primitive"),React2=__toESM(require("react"));var React=__toESM(require("react")),DisclosureContext=React.createContext({});var Disclosure=React2.forwardRef(({children,element="DISCLOSURE",variant="default",state,...props},ref)=>{let disclosure=state||(0,import_disclosure_primitive.useDisclosurePrimitiveState)({animated:!0,...props}),[isDisabled,setIsDisabled]=React2.useState(!1),[isHeadingHovered,setIsHeadingHovered]=React2.useState(!1),disclosureContext={disclosure,variant,isHeadingHovered,setIsHeadingHovered,isDisabled,setIsDisabled};return React2.createElement(DisclosureContext.Provider,{value:disclosureContext},React2.createElement(import_box.Box,{...(0,import_box.safelySpreadBoxProps)(props),variant,element,ref},children))});Disclosure.displayName="Disclosure";var import_box2=require("@twilio-paste/box"),import_disclosure_primitive2=require("@twilio-paste/disclosure-primitive"),import_heading=require("@twilio-paste/heading"),import_ChevronDisclosureIcon=require("@twilio-paste/icons/cjs/ChevronDisclosureIcon"),import_theme=require("@twilio-paste/theme"),React3=__toESM(require("react"));var IconSizeFromHeading={heading10:"sizeIcon90",heading20:"sizeIcon70",heading30:"sizeIcon60",heading40:"sizeIcon40",heading50:"sizeIcon30",heading60:"sizeIcon20"};var baseContainedStyles={borderWidth:"borderWidth10",borderStyle:"solid",borderRadius:"borderRadius20"},containedStyles={...baseContainedStyles,borderColor:"colorBorderWeaker"},containedHoverStyles={...baseContainedStyles,borderColor:"colorBorderWeak"},StyledDisclosureHeading=React3.forwardRef(({children,element,renderAs,disclosureVariant,variant,isHovered,isDisabled,setIsDisabled,setIsHovered,...props},ref)=>{let theme=(0,import_theme.useTheme)(),disabledProp=props["aria-disabled"],isExpanded=props["aria-expanded"],iconSize=IconSizeFromHeading[variant]||"sizeIcon20",shouldIconMove=isHovered&&!isDisabled,buttonRef=React3.useRef(null);React3.useEffect(()=>{setIsDisabled(!!disabledProp)},[disabledProp,setIsDisabled]),React3.useEffect(()=>{let handleMouseOver=()=>setIsHovered(!0),handleMouseOut=()=>setIsHovered(!1),node=buttonRef.current;if(node)return node.addEventListener("mouseover",handleMouseOver),node.addEventListener("mouseout",handleMouseOut),()=>{node.removeEventListener("mouseover",handleMouseOver),node.removeEventListener("mouseout",handleMouseOut)}},[buttonRef,setIsHovered]);let variantStyles={};return disclosureVariant==="contained"&&(variantStyles=containedStyles,isHovered&&!isDisabled&&(variantStyles=containedHoverStyles),isExpanded&&(variantStyles={...variantStyles,borderBottomLeftRadius:"borderRadius0",borderBottomRightRadius:"borderRadius0",borderBottom:"none"})),React3.createElement(import_heading.Heading,{as:renderAs,marginBottom:"space0",variant,ref},React3.createElement(import_box2.Box,{...(0,import_box2.safelySpreadBoxProps)(props),as:"div",backgroundColor:isExpanded?"colorBackgroundWeak":"colorBackgroundBody",borderRadius:"borderRadius20",cursor:"pointer",display:"flex",element,outline:"none",padding:"space30",position:"relative",ref:buttonRef,role:"button",zIndex:"zIndex10",transition:"background-color, border-color, border-radius 100ms ease",_hover:{backgroundColor:"colorBackground"},_focus:{boxShadow:"shadowFocus"},_disabled:{backgroundColor:"colorBackgroundStrong",color:"colorTextWeaker",cursor:"not-allowed"},...variantStyles},React3.createElement(import_box2.Box,{as:"span",element:`${element}_ICON`,display:"flex",color:isDisabled?"colorTextWeaker":"colorTextIcon",transition:"transform 170ms ease",height:iconSize,width:iconSize,transform:`
             ${shouldIconMove?`translateX(${theme.space.space10})`:"translateX(0)"}
             ${isExpanded?"rotate(90deg)":"rotate(0deg)"}`},React3.createElement(import_ChevronDisclosureIcon.ChevronDisclosureIcon,{color:"inherit",decorative:!0,size:iconSize})),children))});StyledDisclosureHeading.displayName="StyledDisclosureHeading";var DisclosureHeading=({children,as,element="DISCLOSURE_HEADING",disabled,focusable,...props})=>{let{disclosure,variant,setIsDisabled,setIsHeadingHovered,isHeadingHovered,isDisabled}=React3.useContext(DisclosureContext);return React3.createElement(import_disclosure_primitive2.DisclosurePrimitive,{...disclosure,...props,as:StyledDisclosureHeading,disabled,disclosureVariant:variant,element,focusable,renderAs:as,isHovered:isHeadingHovered,setIsDisabled,setIsHovered:setIsHeadingHovered,isDisabled},children)};DisclosureHeading.displayName="DisclosureHeading";var import_animation_library=require("@twilio-paste/animation-library"),import_box3=require("@twilio-paste/box"),import_disclosure_primitive3=require("@twilio-paste/disclosure-primitive"),React4=__toESM(require("react"));var AnimatedDisclosureContent=(0,import_animation_library.animated)(import_box3.Box),baseContainedStyles2={borderWidth:"borderWidth10",borderStyle:"solid",borderBottomLeftRadius:"borderRadius20",borderBottomRightRadius:"borderRadius20",borderTop:"none",transition:"border-color 100ms ease-out"},containedStyles2={...baseContainedStyles2,borderColor:"colorBorderWeaker"},containedHoverStyles2={...baseContainedStyles2,borderColor:"colorBorderWeak"},DisclosureContent=React4.forwardRef(({children,element="DISCLOSURE_CONTENT",visible,...props},ref)=>{let{disclosure,variant,isHeadingHovered,isDisabled}=React4.useContext(DisclosureContext),{opacity}=(0,import_animation_library.useSpring)({opacity:disclosure.visible?1:0,onRest:disclosure.stopAnimation,config:{mass:1,tension:150,friction:20,duration:100}}),variantStyles={};return variant==="contained"&&(variantStyles=containedStyles2,isHeadingHovered&&!isDisabled&&(variantStyles=containedHoverStyles2)),React4.createElement(import_disclosure_primitive3.DisclosurePrimitiveContent,{...disclosure,...(0,import_box3.safelySpreadBoxProps)(props),as:AnimatedDisclosureContent,element,backgroundColor:"colorBackgroundBody",padding:"space50",ref,style:{opacity},...variantStyles},children)});DisclosureContent.displayName="DisclosureContent";
