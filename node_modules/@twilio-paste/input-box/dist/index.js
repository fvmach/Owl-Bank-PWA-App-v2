"use strict";var __create=Object.create;var __defProp=Object.defineProperty;var __getOwnPropDesc=Object.getOwnPropertyDescriptor;var __getOwnPropNames=Object.getOwnPropertyNames;var __getProtoOf=Object.getPrototypeOf,__hasOwnProp=Object.prototype.hasOwnProperty;var __export=(target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:!0})},__copyProps=(to,from,except,desc)=>{if(from&&typeof from=="object"||typeof from=="function")for(let key of __getOwnPropNames(from))!__hasOwnProp.call(to,key)&&key!==except&&__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});return to};var __toESM=(mod,isNodeMode,target)=>(target=mod!=null?__create(__getProtoOf(mod)):{},__copyProps(isNodeMode||!mod||!mod.__esModule?__defProp(target,"default",{value:mod,enumerable:!0}):target,mod)),__toCommonJS=mod=>__copyProps(__defProp({},"__esModule",{value:!0}),mod);var src_exports={};__export(src_exports,{InputBox:()=>InputBox,InputChevronWrapper:()=>InputChevronWrapper,Prefix:()=>Prefix,Suffix:()=>Suffix,getInputChevronIconColor:()=>getInputChevronIconColor});module.exports=__toCommonJS(src_exports);var React7=__toESM(require("react"));var React3=__toESM(require("react"));var import_box=require("@twilio-paste/box"),React=__toESM(require("react")),DefaultFauxInput=React.forwardRef(({disabled,element,hasError,readOnly,children,type,variant},ref)=>{let backgroundColor="colorBackgroundBody",boxShadow="shadowBorder",boxShadowHover="shadowBorderPrimary",boxShadowActive="shadowBorderPrimaryStronger";return disabled&&type!=="hidden"?(boxShadow="shadowBorderWeak",boxShadowHover="shadowBorderWeak",backgroundColor="colorBackground",boxShadowActive="shadowBorderWeak"):readOnly&&type!=="hidden"?(boxShadowHover="shadowBorder",backgroundColor="colorBackground"):hasError&&type!=="hidden"?(boxShadow="shadowBorderError",boxShadowHover="shadowBorderErrorStronger"):type==="hidden"&&(boxShadow=null,boxShadowHover=null,backgroundColor=null,boxShadowActive=null),React.createElement(import_box.Box,{element,ref,display:"flex",width:"100%",backgroundColor,boxShadow,borderRadius:"borderRadius20",transition:"box-shadow 100ms ease-in",cursor:disabled?"not-allowed":"text",variant,_hover:{boxShadow:boxShadowHover},_focusWithin:{boxShadow:disabled?boxShadow:"shadowFocusShadowBorder"},_active:{boxShadow:boxShadowActive}},children)});DefaultFauxInput.displayName="DefaultFauxInput";var import_box2=require("@twilio-paste/box"),React2=__toESM(require("react")),InverseFauxInput=React2.forwardRef(({disabled,element,hasError,readOnly,children,type,variant},ref)=>{let backgroundColor="colorBackgroundInverse",boxShadow="shadowBorderInverse",boxShadowHover="shadowBorderInverseStrongest";return disabled&&type!=="hidden"?(backgroundColor="colorBackgroundInverse",boxShadow="shadowBorderInverseWeaker",boxShadowHover="shadowBorderInverseWeaker"):readOnly&&type!=="hidden"?(backgroundColor="colorBackgroundInverseStrong",boxShadowHover="shadowBorderInverse"):hasError&&type!=="hidden"?boxShadow="shadowBorderErrorWeak":type==="hidden"&&(backgroundColor=null,boxShadow=null,boxShadowHover=null),React2.createElement(import_box2.Box,{element,ref,display:"flex",width:"100%",backgroundColor,boxShadow,borderRadius:"borderRadius20",color:"colorTextInverse",transition:"box-shadow 100ms ease-in",cursor:disabled?"not-allowed":"text",variant,_hover:{boxShadow:boxShadowHover},_focusWithin:{backgroundColor:"colorBackgroundInverse",boxShadow:disabled?boxShadow:"shadowFocusInverse"},_active:{boxShadow:boxShadowHover}},children)});InverseFauxInput.displayName="InverseFauxInput";var FauxInputVariants={default:DefaultFauxInput,inverse:InverseFauxInput},FieldWrapper=React3.forwardRef(({children,disabled,element,hasError,readOnly,type,variant="default"},ref)=>{let FieldWrapperComponent=FauxInputVariants[variant];return React3.createElement(FieldWrapperComponent,{disabled,element,hasError,readOnly,type,variant,ref},children)});FieldWrapper.displayName="FieldWrapper";var React4=__toESM(require("react")),InputBoxContext=React4.createContext(null),useInputBoxContext=()=>{let context=React4.useContext(InputBoxContext);if(!context)throw new Error("useInputBoxContext must be used within a <InputBox> component.");return context};var import_box3=require("@twilio-paste/box"),React5=__toESM(require("react")),Prefix=React5.forwardRef(({children,disabled,element="PREFIX",variant},ref)=>{let backgroundColor="colorBackgroundWeak",borderColor="colorBorderWeaker";return disabled&&variant==="inverse"?(backgroundColor="none",borderColor="colorBorderInverseWeaker"):variant==="inverse"?(backgroundColor="colorBackgroundInverse",borderColor="colorBorderInverse"):disabled&&(backgroundColor="none",borderColor="colorBorderWeaker"),children==null?null:React5.createElement(import_box3.Box,{alignItems:"flex-start",backgroundColor,borderBottomLeftRadius:"borderRadius20",borderRightColor:borderColor,borderRightStyle:"solid",borderRightWidth:"borderWidth10",borderTopLeftRadius:"borderRadius20",display:"flex",element:`${element}_PREFIX`,lineHeight:"lineHeight20",padding:"space30",variant,ref},children)});Prefix.displayName="Prefix";var import_box4=require("@twilio-paste/box"),React6=__toESM(require("react")),Suffix=React6.forwardRef(({children,disabled,element="SUFFIX",variant},ref)=>{let backgroundColor="colorBackgroundWeak",borderColor="colorBorderWeaker";return disabled&&variant==="inverse"?(backgroundColor="none",borderColor="colorBorderInverseWeaker"):variant==="inverse"?(backgroundColor="colorBackgroundInverse",borderColor="colorBorderInverse"):disabled&&(backgroundColor="none",borderColor="colorBorderWeaker"),children==null?null:React6.createElement(import_box4.Box,{alignItems:"flex-start",backgroundColor,borderBottomRightRadius:"borderRadius20",borderLeftColor:borderColor,borderLeftStyle:"solid",borderLeftWidth:"borderWidth10",borderTopRightRadius:"borderRadius20",display:"flex",element:`${element}_SUFFIX`,lineHeight:"lineHeight20",padding:"space30",variant,ref},children)});Suffix.displayName="Suffix";var InputBox=React7.forwardRef(({children,disabled=!1,readOnly=!1,element="INPUT_BOX",hasError,insertAfter,insertBefore,type,variant="default",...props},ref)=>React7.createElement(InputBoxContext.Provider,{value:{disabled,readOnly,variant}},React7.createElement(FieldWrapper,{disabled,element,hasError,readOnly,type,variant,ref,...props},insertBefore&&React7.createElement(Prefix,{disabled,element,variant},insertBefore),children,insertAfter&&React7.createElement(Suffix,{disabled,element,variant},insertAfter))));InputBox.displayName="InputBox";var import_box5=require("@twilio-paste/box"),React8=__toESM(require("react"));var getChevronWrapperState=(disabled,readOnly)=>disabled?"disabled":readOnly?"readOnly":"default",IconColors={default:{default:"colorTextIcon",disabled:"colorTextWeaker",readOnly:"colorTextWeaker"},inverse:{default:"colorTextIconInverse",disabled:"colorTextInverseWeakest",readOnly:"colorTextInverseWeakest"}},getInputChevronIconColor=(variant="default",disabled=!1,readOnly=!1)=>IconColors[variant][getChevronWrapperState(disabled,readOnly)],BackgroundColorStyles={default:{default:"colorBackground",disabled:"colorBackground",readOnly:"colorBackground"},inverse:{default:"colorBackgroundInverseStrong",disabled:"colorBackgroundInverse",readOnly:"colorBackgroundInverseStrong"}},InputChevronWrapper=React8.forwardRef(({children,element="CHEVRON_WRAPPER"},ref)=>{let{disabled,readOnly,variant}=useInputBoxContext();return React8.createElement(import_box5.Box,{backgroundColor:BackgroundColorStyles[variant][getChevronWrapperState(disabled,readOnly)],borderRadius:"borderRadius20",cursor:"pointer",alignItems:"center",display:"inline-flex",position:"absolute",pointerEvents:"none",right:"space30",top:"50%",transform:"translateY(-50%)",zIndex:"zIndex10",element,ref},children)});InputChevronWrapper.displayName="InputChevronWrapper";
