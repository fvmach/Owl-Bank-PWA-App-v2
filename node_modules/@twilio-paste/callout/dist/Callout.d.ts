import type { BoxProps, BoxStyleProps } from "@twilio-paste/box";
import type { HTMLPasteProps } from "@twilio-paste/types";
import * as React from "react";
type CalloutVariants = "neutral" | "warning" | "error" | "success" | "new";
export interface CalloutProps extends HTMLPasteProps<"div"> {
    children?: React.ReactNode;
    /**
     *
     * @default null
     * @type {CalloutVariants}
     * @memberof CalloutProps
     */
    variant: CalloutVariants;
    /**
     * Accessible label for the Callout icon.
     *
     * @default '(neutral)' | '(warning)' | '(error)' | '(success)' | '(new)'
     * @type {string}
     * @memberof CalloutProps
     */
    i18nLabel?: string;
    /**
     * Overrides the default element name to apply unique styles with the Customization Provider
     *
     * @default 'CALLOUT'
     * @type {BoxProps['element']}
     * @memberof CalloutProps
     */
    element?: BoxProps["element"];
    /**
     *
     * @default null
     * @type {BoxStyleProps['marginY']}
     * @memberof CalloutProps
     */
    marginY?: BoxStyleProps["marginY"];
    /**
     * Function to run on dismiss of the Callout. Adds a close button.
     *
     * @default null
     * @memberof CalloutProps
     */
    onDismiss?: () => void;
    /**
     * Title for dismiss label. Only necessary when using onDismiss.
     *
     * @default 'Dismiss callout'
     * @memberof CalloutProps
     * @type {string}
     */
    i18nDismissLabel?: string;
}
export declare const Callout: React.ForwardRefExoticComponent<CalloutProps & React.RefAttributes<HTMLDivElement>>;
export {};
//# sourceMappingURL=Callout.d.ts.map