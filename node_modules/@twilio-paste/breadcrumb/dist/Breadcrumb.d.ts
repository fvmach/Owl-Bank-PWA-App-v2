import type { AnchorProps } from "@twilio-paste/anchor";
import type { BoxElementProps, BoxProps } from "@twilio-paste/box";
import type { HTMLPasteProps } from "@twilio-paste/types";
import * as React from "react";
type BreadcrumbItemBaseProps = {
    children: NonNullable<React.ReactNode>;
    /**
     * Overrides the default element name to apply unique styles with the Customization Provider
     *
     * @default 'BREADCRUMB_ITEM'
     * @type {BoxProps['element']}
     * @memberof BreadcrumbItemBaseProps
     */
    element?: BoxProps["element"];
    /**
     * Overrides the default element name of the parent element to apply unique styles with the Customization Provider
     *
     * @default 'BREADCRUMB'
     * @type {BoxProps['element']}
     * @memberof BreadcrumbItemBaseProps
     */
    parentElement?: BoxProps["element"];
    /**
     * Last BreadcrumbItem of the Breadcrumb. Use to omit BreadcrumbSeparator
     *
     * @default false
     * @type {boolean}
     * @memberof BreadcrumbItemBaseProps
     */
    last?: boolean;
};
type BreadcrumbItemAsSpanProps = HTMLPasteProps<"span"> & BreadcrumbItemBaseProps & {
    href?: never;
};
type BreadcrumbItemAsAnchorProps = AnchorProps & BreadcrumbItemBaseProps;
export type BreadcrumbItemProps = BreadcrumbItemAsSpanProps | BreadcrumbItemAsAnchorProps;
declare const BreadcrumbItem: React.ForwardRefExoticComponent<BreadcrumbItemProps & React.RefAttributes<HTMLSpanElement | HTMLAnchorElement>>;
export interface BreadcrumbProps extends HTMLPasteProps<"nav"> {
    children: NonNullable<React.ReactNode>;
    /**
     * Overrides the default element name to apply unique styles with the Customization Provider
     *
     * @default 'BREADCRUMB'
     * @type {BoxProps['element']}
     * @memberof BreadcrumbProps
     */
    element?: BoxElementProps["element"];
}
declare const Breadcrumb: React.ForwardRefExoticComponent<BreadcrumbProps & React.RefAttributes<HTMLDivElement>>;
export { Breadcrumb, BreadcrumbItem };
//# sourceMappingURL=Breadcrumb.d.ts.map