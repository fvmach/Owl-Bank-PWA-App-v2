import type { BoxElementProps } from "@twilio-paste/box";
import type { CompositeProps } from "@twilio-paste/reakit-library";
import * as React from "react";
import type { FormPillGroupSizeVariant, FormPillGroupUsageVariants } from "./types";
export interface FormPillGroupProps extends Omit<CompositeProps, "unstable_virtual" | "unstable_moves" | "unstable_system" | "wrapElement" | "wrap"> {
    /**
     *
     *
     * @type {string}
     * @memberof FormPillGroupProps
     */
    "aria-label": string;
    /**
     * Overrides the default element name to apply unique styles with the Customization Provider
     *
     * @default 'FORM_PILL_GROUP'
     * @type {BoxElementProps['element']}
     * @memberof FormPillGroupProps
     */
    element?: BoxElementProps["element"];
    children: React.ReactNode;
    /**
     * Visually hidden string that has instructions for how to remove and select pills with a keyboard.
     *
     * @default 'Press Delete or Backspace to remove. Press Enter to toggle selection.'
     * @type {string}
     * @memberof FormPillGroupProps
     */
    i18nKeyboardControls?: string;
    /**
     * Determines if the FormPillGroup should be rendered as a flex or inline-flex container
     *
     * @type {('flex' | 'inline-flex')}
     * @memberof FormPillGroupProps
     */
    display?: "flex" | "inline-flex";
    /**
     * Size variant that affects the size and spacing of the pills within the FormPillGroup. 'large' and 'default' are the only supported values.
     *
     * @default 'default'
     * @memberof FormPillGroupProps
     */
    size?: FormPillGroupSizeVariant;
    /**
     * The variant of the FormPillGroup to use. The 'tree' option allows for more data to be displayed on select and still allows for select states.
     * It changes the aria roles from listbox/option to tree/treeitem and underlying DOM elements form button to div so that the FormPill can be used to trigger other DOM elements such as a dialog.
     * The existing keyboard functionality remains uneffected.
     *
     * @default 'listbox'
     * @memberof FormPillGroupProps
     */
    variant?: FormPillGroupUsageVariants;
}
/**
 * FormPillGroup should be used to wrap a collection of FormPills. It should be used in conjunction with
 * useFormPillGroupState hook
 *
 * @example
 * <FormPillGroup {...pillState} aria-label="Your favorite sports:">
 *   ...
 * </FormPillGroup>
 * @see http://paste.twilio.design/components/form-pill-group
 */
export declare const FormPillGroup: React.ForwardRefExoticComponent<Omit<FormPillGroupProps, "ref"> & React.RefAttributes<HTMLUListElement>>;
//# sourceMappingURL=FormPillGroup.d.ts.map