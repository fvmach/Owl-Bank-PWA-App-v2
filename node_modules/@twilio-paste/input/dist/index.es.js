import{Box}from"@twilio-paste/box";import{InputBox}from"@twilio-paste/input-box";import{useMergeRefs}from"@twilio-paste/utils";import*as React3 from"react";import{Button}from"@twilio-paste/button";import{ChevronDownIcon}from"@twilio-paste/icons/esm/ChevronDownIcon";import*as React from"react";var DecrementButton=React.forwardRef(({i18nStepDownLabel="step value down",element,variant,...props},ref)=>React.createElement(Button,{...props,ref,element:`${element}_DECREMENT_BUTTON`,variant:"reset",size:"reset",type:"button",borderRadius:"borderRadius20",backgroundColor:variant==="inverse"?"colorBackgroundInverseStrong":"colorBackground",marginRight:"space30",_focus:{boxShadow:variant==="inverse"?"shadowBorderInverseStrong":"shadowBorderPrimary"}},React.createElement(ChevronDownIcon,{decorative:!1,title:i18nStepDownLabel,size:"sizeIcon05",element:`${element}_DECREMENT_ICON`})));DecrementButton.displayName="Decrement";import{Button as Button2}from"@twilio-paste/button";import{ChevronUpIcon}from"@twilio-paste/icons/esm/ChevronUpIcon";import*as React2 from"react";var IncrementButton=React2.forwardRef(({i18nStepUpLabel="step value up",element,variant,...props},ref)=>React2.createElement(Button2,{...props,ref,element:`${element}_INCREMENT_BUTTON`,variant:"reset",size:"reset",type:"button",borderRadius:"borderRadius20",backgroundColor:variant==="inverse"?"colorBackgroundInverseStrong":"colorBackground",marginRight:"space30",_focus:{boxShadow:variant==="inverse"?"shadowBorderInverseStrong":"shadowBorderPrimary"}},React2.createElement(ChevronUpIcon,{decorative:!1,title:i18nStepUpLabel,size:"sizeIcon05",element:`${element}_INCREMENT_ICON`})));IncrementButton.displayName="Increment";var PROPS_TO_BLOCK=["className","style","size","height","width"],safelySpreadFormControlProps=props=>Object.keys(props).reduce((newProps,key)=>(PROPS_TO_BLOCK.includes(key)||(newProps[key]=props[key]),newProps),{});var InputElement=React3.forwardRef(({element,...props},ref)=>React3.createElement(Box,{appearance:"none",as:"input",backgroundColor:"transparent",border:"none",borderRadius:"borderRadius20",boxShadow:"none",color:"inherit",cursor:(props.type==="date"||props.type==="time")&&!props.readOnly&&!props.disabled?"text":"auto",display:"block",element,fontFamily:"inherit",fontSize:"fontSize30",fontWeight:"fontWeightMedium",lineHeight:"lineHeight20",margin:"space0",outline:"none",paddingBottom:"space30",paddingLeft:"space40",paddingRight:"space40",paddingTop:"space30",resize:"none",width:"100%",variant:props.variant,ref,_placeholder:{color:props.variant==="inverse"?"colorTextInverseWeaker":"colorTextWeak",fontStyle:"italic"},_focus_placeholder:{color:props.variant==="inverse"?"colorTextInverseWeaker":"colorTextWeak"},_disabled:{color:props.variant==="inverse"?"colorTextInverseWeakest":"colorTextWeaker",cursor:"not-allowed","-webkit-text-fill-color":props.variant==="inverse"?"colorTextInverseWeakest":"colorTextWeaker","-webkit-opacity":"1"},__webkit_datetime_edit:{display:"flex"},__webkit_calendar_picker_indicator_hover:{cursor:props.readOnly||props.disabled?"default":"pointer"},__webkit_inner_spin_button:{display:"none",margin:"space0"},__webkit_outer_spin_button:{display:"none",margin:"space0"},"-moz-appearance":"textfield",...props}));InputElement.displayName="InputElement";var Input=React3.forwardRef(({disabled,element="INPUT",hasError,id,insertAfter,insertBefore,max,min,name,placeholder,readOnly,required,step,type,value,variant,i18nStepUpLabel,i18nStepDownLabel,...props},ref)=>{let typeProps={type},internalRef=React3.useRef(),mergedRef=useMergeRefs(internalRef,ref),[showIncrement,setShowIncrement]=React3.useState(!0),[showDecrement,setShowDecrement]=React3.useState(!0),[internalValue,setInternalValue]=React3.useState(value??props.defaultValue??"0");return React3.useEffect(()=>{if(type!=="number")return;if(disabled){setShowDecrement(!1),setShowIncrement(!1);return}let numVal=Number(internalValue),numStep=step&&!isNaN(Number(step))?Number(step):1,numMax=Number(max);if(isNaN(numMax))return;let numMin=Number(min);isNaN(numMin)||((numMax-numMin)%numStep!==0&&console.error("[Paste Input]: when using min/max, and step values with a Number Input, please make sure that the min and max are multiples of the step value."),numVal<numMax&&numVal+numStep<=numMax?setShowIncrement(!0):setShowIncrement(!1),numVal>numMin&&numVal-numStep>=numMin?setShowDecrement(!0):setShowDecrement(!1))},[max,min,step,disabled,type,internalValue]),React3.createElement(InputBox,{disabled,element,hasError,insertAfter,insertBefore,readOnly,type,variant},React3.createElement(InputElement,{"aria-invalid":hasError,"aria-readonly":readOnly,...safelySpreadFormControlProps(props),...typeProps,disabled,element:`${element}_ELEMENT`,id,name,max,min,placeholder,readOnly,ref:mergedRef,required,step,value,variant,onChange:event=>{props.onChange!=null&&typeof props.onChange=="function"&&props.onChange(event),setInternalValue(event.target.value)}}),type==="number"?React3.createElement(Box,{display:"flex",flexDirection:"column",rowGap:"space10",justifyContent:"center",element:`${element}_STEP_WRAPPER`},showIncrement?React3.createElement(IncrementButton,{element,onClick:()=>{internalRef.current?.stepUp();let ev=new Event("change",{bubbles:!0});internalRef.current?.dispatchEvent(ev),internalRef.current?.focus()},i18nStepUpLabel,variant}):React3.createElement(Box,{height:"12px",width:"12px",element:`${element}_INCREMENT_PLACEHOLDER`}),showDecrement?React3.createElement(DecrementButton,{element,onClick:()=>{internalRef.current?.stepDown();let ev=new Event("change",{bubbles:!0});internalRef.current?.dispatchEvent(ev),internalRef.current?.focus()},i18nStepDownLabel,variant}):React3.createElement(Box,{height:"12px",width:"12px",element:`${element}_DECREMENT_PLACEHOLDER`})):React3.createElement(React3.Fragment,null))});Input.displayName="Input";export{Input,InputElement};
