import type { BoxProps } from "@twilio-paste/box";
import type { LabelProps } from "@twilio-paste/label";
import type { SiblingBoxProps } from "@twilio-paste/sibling-box";
import type { TextProps } from "@twilio-paste/text";
import * as React from "react";
export interface BaseRadioCheckboxControlProps extends SiblingBoxProps, Pick<BoxProps, "element"> {
    children: NonNullable<React.ReactNode>;
    disabled?: boolean;
    applyHoverStyles?: boolean;
}
declare const BaseRadioCheckboxControl: React.ForwardRefExoticComponent<BaseRadioCheckboxControlProps & React.RefAttributes<HTMLSpanElement>>;
export type BaseRadioCheckboxLabelProps = LabelProps & {
    children: NonNullable<React.ReactNode>;
};
declare const BaseRadioCheckboxLabel: React.ForwardRefExoticComponent<BaseRadioCheckboxLabelProps & React.RefAttributes<HTMLLabelElement>>;
export interface BaseRadioCheckboxLabelTextProps extends Omit<TextProps, "as">, Pick<BoxProps, "element"> {
    children: NonNullable<React.ReactNode>;
}
declare const BaseRadioCheckboxLabelText: React.ForwardRefExoticComponent<BaseRadioCheckboxLabelTextProps & React.RefAttributes<HTMLSpanElement>>;
export interface BaseRadioCheckboxHelpTextProps extends Pick<BoxProps, "element"> {
    children: NonNullable<React.ReactNode>;
    helpTextId: string;
}
declare const BaseRadioCheckboxHelpText: React.ForwardRefExoticComponent<BaseRadioCheckboxHelpTextProps & React.RefAttributes<HTMLSpanElement>>;
export { BaseRadioCheckboxHelpText, BaseRadioCheckboxControl, BaseRadioCheckboxLabel, BaseRadioCheckboxLabelText };
//# sourceMappingURL=BaseRadioCheckbox.d.ts.map