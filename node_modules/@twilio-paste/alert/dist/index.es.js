import{Box,safelySpreadBoxProps}from"@twilio-paste/box";import{Button}from"@twilio-paste/button";import{CloseIcon}from"@twilio-paste/icons/esm/CloseIcon";import{ErrorIcon}from"@twilio-paste/icons/esm/ErrorIcon";import{NeutralIcon}from"@twilio-paste/icons/esm/NeutralIcon";import{WarningIcon}from"@twilio-paste/icons/esm/WarningIcon";import{MediaBody,MediaFigure,MediaObject}from"@twilio-paste/media-object";import{ScreenReaderOnly}from"@twilio-paste/screen-reader-only";import*as React from"react";var AlertRoles={ERROR:"alert",NEUTRAL:"status",WARNING:"alert"},AlertVariants={ERROR:"error",NEUTRAL:"neutral",WARNING:"warning"},AlertBackgroundColors={ERROR:"colorBackgroundErrorWeakest",NEUTRAL:"colorBackgroundNeutralWeakest",WARNING:"colorBackgroundWarningWeakest"},AlertBorderColors={ERROR:"colorBorderErrorWeaker",NEUTRAL:"colorBorderNeutralWeaker",WARNING:"colorBorderWarningWeaker"},AlertTextColors={ERROR:"colorTextError",NEUTRAL:"colorTextNeutral",WARNING:"colorTextWarningStrong"},renderAlertIcon=(variant,element,title)=>{switch(variant){case AlertVariants.ERROR:return React.createElement(ErrorIcon,{element:`${element}_ICON`,color:"colorTextIconError",decorative:!1,title,size:"sizeIcon20"});case AlertVariants.WARNING:return React.createElement(WarningIcon,{element:`${element}_ICON`,color:"colorTextIconWarning",decorative:!1,title,size:"sizeIcon20"});case AlertVariants.NEUTRAL:default:return React.createElement(NeutralIcon,{element:`${element}_ICON`,color:"colorTextIconNeutral",decorative:!1,title,size:"sizeIcon20"})}},Alert=React.forwardRef(({children,onDismiss,variant,role,element="ALERT",i18nDismissLabel="Dismiss alert",i18nErrorLabel="(error)",i18nNeutralLabel="(information)",i18nWarningLabel="(warning)",...props},ref)=>{let i18nLabelVariantMap={error:i18nErrorLabel,neutral:i18nNeutralLabel,warning:i18nWarningLabel};return React.createElement(Box,{...safelySpreadBoxProps(props),backgroundColor:AlertBackgroundColors[variant.toUpperCase()],borderColor:AlertBorderColors[variant.toUpperCase()],borderStyle:"solid",borderWidth:"borderWidth10",borderRadius:"borderRadius30",padding:"space50",element,variant,ref,role:role??AlertRoles[variant.toUpperCase()]},React.createElement(MediaObject,{as:"div"},React.createElement(MediaFigure,{as:"div",spacing:"space30"},renderAlertIcon(variant,element,i18nLabelVariantMap[variant])),React.createElement(MediaBody,{as:"div"},React.createElement(Box,{color:AlertTextColors[variant.toUpperCase()]},children)),onDismiss&&typeof onDismiss=="function"&&React.createElement(MediaFigure,{align:"end",spacing:"space60"},React.createElement(Button,{onClick:onDismiss,variant:"secondary_icon",size:"reset",element:`${element}_DISMISS_BUTTON`},React.createElement(CloseIcon,{element:`${element}_DISMISS_ICON`,color:"colorTextIcon",decorative:!0,size:"sizeIcon20"}),React.createElement(ScreenReaderOnly,null,i18nDismissLabel)))))});Alert.displayName="Alert";export{Alert};
