import{Box,safelySpreadBoxProps}from"@twilio-paste/box";import*as React2 from"react";import React from"react";var CornerOrnamentContext=React.createContext(null),useCornerOrnamentContext=()=>{let context=React.useContext(CornerOrnamentContext);if(!context)throw new Error("Corner Ornaments components must be used within CornerOrnamentContainer");return context};var BadgeBottomEndPath="M1.05-.05h-1.1v1.1h.593A.375.375 0 0 1 .875.5h.1c.026 0 .05.003.075.007V-.05Z",BadgeTopEndPath="M.543-.05A.375.375 0 0 0 .875.5h.1c.026 0 .05-.003.075-.008v.558h-1.1v-1.1h.593Z",IconOrAvatarTopEndPath="M1.05.437A.35.35 0 0 1 .563-.05H-.05v1.1h1.1V.437Z",IconOrAvatarBottomEndPath="M1.05-.05h-1.1v1.1h.613A.35.35 0 0 1 1.05.563V-.05Z",iconAvatarSharedPaths={bottom_end:IconOrAvatarBottomEndPath,top_end:IconOrAvatarTopEndPath},ClipPathMappings={badge:{bottom_end:BadgeBottomEndPath,top_end:BadgeTopEndPath},icon:iconAvatarSharedPaths,avatar:iconAvatarSharedPaths},OrnamentPositionStyleMappings={badge:{bottom_end:{sizeIcon50:{left:"16px",top:"16px"},sizeIcon60:{left:"16px",top:"16px"},sizeIcon70:{left:"19px",top:"19px"},sizeIcon80:{left:"25px",top:"25px"},sizeIcon90:{left:"25px",top:"25px"},sizeIcon100:{left:"34px",top:"34px"},sizeIcon110:{left:"42px",top:"42px"}},top_end:{sizeIcon50:{left:"16px",bottom:"16px",top:"-8px"},sizeIcon60:{left:"16px",bottom:"16px",top:"-8px"},sizeIcon70:{left:"19px",bottom:"19px",top:"-7px"},sizeIcon80:{left:"25px",bottom:"25px",top:"-5px"},sizeIcon90:{left:"25px",bottom:"25px",top:"-5px"},sizeIcon100:{left:"34px",bottom:"34px",top:"-6px"},sizeIcon110:{left:"42px",bottom:"42px",top:"-2px"}}},avatar:{bottom_end:{sizeIcon20:{left:"10px",top:"10px"},sizeIcon30:{left:"10px",top:"10px"},sizeIcon40:{left:"13px",top:"13px"},sizeIcon50:{left:"16px",top:"16px"},sizeIcon60:{left:"16px",top:"16px"},sizeIcon70:{left:"19px",top:"19px"},sizeIcon80:{left:"24px",top:"24px"},sizeIcon90:{left:"24px",top:"24px"},sizeIcon100:{left:"30px",top:"30px"},sizeIcon110:{left:"38px",top:"38px"}},top_end:{sizeIcon20:{left:"10px",bottom:"10px",top:"-3px"},sizeIcon30:{left:"10px",bottom:"10px",top:"-3px"},sizeIcon40:{left:"13px",bottom:"13px",top:"-5px"},sizeIcon50:{left:"16px",bottom:"16px",top:"-4px"},sizeIcon60:{left:"16px",bottom:"16px",top:"-4px"},sizeIcon70:{left:"19px",bottom:"19px",top:"-3px"},sizeIcon80:{left:"24px",bottom:"24px",top:"-4px"},sizeIcon90:{left:"24px",bottom:"24px",top:"-4px"},sizeIcon100:{left:"30px",bottom:"30px",top:"-6px"},sizeIcon110:{left:"38px",bottom:"38px",top:"-6px"}}},icon:{bottom_end:{sizeIcon20:{left:"11px",top:"11px"},sizeIcon30:{left:"11px",top:"11px"},sizeIcon40:{left:"13px",top:"13px"},sizeIcon50:{left:"16px",top:"16px"},sizeIcon60:{left:"16px",top:"16px"},sizeIcon70:{left:"17px",top:"17px"},sizeIcon80:{left:"22px",top:"22px"},sizeIcon90:{left:"22px",top:"22px"},sizeIcon100:{left:"30px",top:"30px"},sizeIcon110:{left:"38px",top:"38px"}},top_end:{sizeIcon20:{left:"11px",bottom:"11px",top:"-3px"},sizeIcon30:{left:"11px",bottom:"11px",top:"-3px"},sizeIcon40:{left:"13px",bottom:"13px",top:"-5px"},sizeIcon50:{left:"16px",bottom:"16px",top:"-4px"},sizeIcon60:{left:"16px",bottom:"16px",top:"-4px"},sizeIcon70:{left:"17px",bottom:"17px",top:"-5px"},sizeIcon80:{left:"22px",bottom:"22px",top:"-6px"},sizeIcon90:{left:"22px",bottom:"22px",top:"-6px"},sizeIcon100:{left:"30px",bottom:"30px",top:"-6px"},sizeIcon110:{left:"38px",bottom:"38px",top:"-6px"}}}};var CornerOrnament=React2.forwardRef(({element="CORNER_ORNAMENT",...props},ref)=>{let{cornerOrnamentType,size,position}=useCornerOrnamentContext();if(!OrnamentPositionStyleMappings[cornerOrnamentType][position][size])throw new Error("[Paste: CornerOrnament] the size/position/type combination you have chosen is not currently supported. Please refer to the guidelines in our docs or raise a new discussion to get this supported at https://github.com/twilio-labs/paste/discussions.");return React2.createElement(Box,{...safelySpreadBoxProps(props),position:"absolute",element,ref,...OrnamentPositionStyleMappings[cornerOrnamentType][position][size]},props.children)});CornerOrnament.displayName="CornerOrnament";import{Box as Box2,safelySpreadBoxProps as safelySpreadBoxProps2}from"@twilio-paste/box";import*as React3 from"react";var CornerOrnamentContainer=React3.forwardRef(({size,cornerOrnamentType,position="bottom_end",element="CORNER_ORNAMENT_CONTAINER",...props},ref)=>React3.createElement(CornerOrnamentContext.Provider,{value:{size,cornerOrnamentType,position}},React3.createElement(Box2,{...safelySpreadBoxProps2(props),position:"relative",element,ref},props.children)));CornerOrnamentContainer.displayName="CornerOrnamentContainer";import{Box as Box3,safelySpreadBoxProps as safelySpreadBoxProps3}from"@twilio-paste/box";import{useUID}from"@twilio-paste/uid-library";import*as React4 from"react";var CornerOrnamentBase=React4.forwardRef(({padding,element="CORNER_ORNAMENT_BASE",...props},ref)=>{let id=useUID(),{cornerOrnamentType,position,size}=useCornerOrnamentContext();return React4.createElement(Box3,{...safelySpreadBoxProps3(props),style:{clipPath:`url("#${id}")`},element,ref,size},React4.createElement(Box3,{padding:padding||"space0"},props.children),React4.createElement(Box3,{as:"svg",size:0,position:"absolute",top:0,left:0},React4.createElement("defs",null,React4.createElement("clipPath",{id,clipPathUnits:"objectBoundingBox"},React4.createElement("path",{d:ClipPathMappings[cornerOrnamentType][position]})))))});CornerOrnamentBase.displayName="CornerOrnamentBase";export{CornerOrnament,CornerOrnamentBase,CornerOrnamentContainer};
