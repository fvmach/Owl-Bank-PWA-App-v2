import type { TextProps } from "@twilio-paste/text";
import type { HTMLPasteProps } from "@twilio-paste/types";
import * as React from "react";
type DisplayHeadingVariants = "displayHeading10" | "displayHeading20" | "displayHeading30";
type AsTags = "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "div" | "span" | "header";
export interface DisplayHeadingProps extends HTMLPasteProps<"h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "div" | "span" | "header"> {
    /**
     * Overrides the default element name to apply unique styles with the Customization Provider
     *
     * @default 'DISPLAY_HEADING'
     * @type {TextProps['element']}
     * @memberof DisplayHeadingProps
     */
    element?: TextProps["element"];
    /**
     * CSS display property
     *
     * @default 'block'
     * @type {TextProps['display']}
     * @memberof DisplayHeadingProps
     */
    display?: TextProps["display"];
    /**
     * HTML element to render, e.g., `h1`, `h2`, etc.
     *
     * @type {AsTags}
     * @memberof DisplayHeadingProps
     */
    as: AsTags;
    id?: string;
    /**
     * Currently we only allow space0 to remove bottom margin
     *
     * @type {'space0'}
     * @memberof DisplayHeadingProps
     */
    marginBottom?: "space0";
    /**
     * The variant of the display heading
     *
     * @type {DisplayHeadingVariants}
     * @memberof DisplayHeadingProps
     */
    variant: DisplayHeadingVariants;
}
declare const DisplayHeading: React.ForwardRefExoticComponent<DisplayHeadingProps & React.RefAttributes<HTMLHeadingElement>>;
export { DisplayHeading };
//# sourceMappingURL=DisplayHeading.d.ts.map