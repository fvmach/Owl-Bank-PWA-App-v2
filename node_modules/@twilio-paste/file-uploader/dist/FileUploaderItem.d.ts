import type { BoxProps } from "@twilio-paste/box";
import type { HTMLPasteProps } from "@twilio-paste/types";
import * as React from "react";
import type { FileUploaderItemContextProps } from "./FileUploaderItemContext";
export interface FileUploaderItemProps extends HTMLPasteProps<"li"> {
    children?: BoxProps["children"];
    /**
     * Overrides the default element name to apply unique styles with the Customization Provider
     *
     * @default 'FILE_UPLOADER_ITEM'
     * @type {BoxProps['element']}
     * @memberof FileUploaderItemProps
     */
    element?: BoxProps["element"];
    /**
     * The variant of FileUploaderItem
     *
     * @default 'default'
     * @type {FileUploaderItemContextProps['variant']}
     * @memberof FileUploaderItemProps
     */
    variant?: FileUploaderItemContextProps["variant"];
    /**
     * The icon displayed when it is not loading or error variant.
     *
     * @type {NonNullable<React.ReactNode>}
     * @memberof FileUploaderItemProps
     */
    fileIcon?: NonNullable<React.ReactNode>;
    onButtonClick?: () => void;
    /**
     * The hidden text for the error icon
     *
     * @default '(error)'
     * @type {string}
     * @memberof FileUploaderItemProps
     */
    i18nErrorText?: string;
    /**
     * The hidden text for the dismiss button
     *
     * @default 'Remove file'
     * @type {string}
     * @memberof FileUploaderItemProps
     */
    i18nButtonText?: string;
    /**
     * The hidden text for the loading spinner
     *
     * @default '(loading)'
     * @type {string}
     * @memberof FileUploaderItemProps
     */
    i18nLoadingText?: string;
}
export declare const FileUploaderItem: React.ForwardRefExoticComponent<FileUploaderItemProps & React.RefAttributes<HTMLLIElement>>;
//# sourceMappingURL=FileUploaderItem.d.ts.map