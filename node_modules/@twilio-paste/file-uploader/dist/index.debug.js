"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// ../../../../node_modules/lodash/_isPrototype.js
var require_isPrototype = __commonJS({
  "../../../../node_modules/lodash/_isPrototype.js"(exports, module2) {
    var objectProto = Object.prototype;
    function isPrototype(value) {
      var Ctor = value && value.constructor, proto = typeof Ctor == "function" && Ctor.prototype || objectProto;
      return value === proto;
    }
    module2.exports = isPrototype;
  }
});

// ../../../../node_modules/lodash/_overArg.js
var require_overArg = __commonJS({
  "../../../../node_modules/lodash/_overArg.js"(exports, module2) {
    function overArg(func, transform) {
      return function(arg) {
        return func(transform(arg));
      };
    }
    module2.exports = overArg;
  }
});

// ../../../../node_modules/lodash/_nativeKeys.js
var require_nativeKeys = __commonJS({
  "../../../../node_modules/lodash/_nativeKeys.js"(exports, module2) {
    var overArg = require_overArg();
    var nativeKeys = overArg(Object.keys, Object);
    module2.exports = nativeKeys;
  }
});

// ../../../../node_modules/lodash/_baseKeys.js
var require_baseKeys = __commonJS({
  "../../../../node_modules/lodash/_baseKeys.js"(exports, module2) {
    var isPrototype = require_isPrototype();
    var nativeKeys = require_nativeKeys();
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function baseKeys(object) {
      if (!isPrototype(object)) {
        return nativeKeys(object);
      }
      var result = [];
      for (var key in Object(object)) {
        if (hasOwnProperty.call(object, key) && key != "constructor") {
          result.push(key);
        }
      }
      return result;
    }
    module2.exports = baseKeys;
  }
});

// ../../../../node_modules/lodash/_freeGlobal.js
var require_freeGlobal = __commonJS({
  "../../../../node_modules/lodash/_freeGlobal.js"(exports, module2) {
    var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
    module2.exports = freeGlobal;
  }
});

// ../../../../node_modules/lodash/_root.js
var require_root = __commonJS({
  "../../../../node_modules/lodash/_root.js"(exports, module2) {
    var freeGlobal = require_freeGlobal();
    var freeSelf = typeof self == "object" && self && self.Object === Object && self;
    var root = freeGlobal || freeSelf || Function("return this")();
    module2.exports = root;
  }
});

// ../../../../node_modules/lodash/_Symbol.js
var require_Symbol = __commonJS({
  "../../../../node_modules/lodash/_Symbol.js"(exports, module2) {
    var root = require_root();
    var Symbol2 = root.Symbol;
    module2.exports = Symbol2;
  }
});

// ../../../../node_modules/lodash/_getRawTag.js
var require_getRawTag = __commonJS({
  "../../../../node_modules/lodash/_getRawTag.js"(exports, module2) {
    var Symbol2 = require_Symbol();
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    var nativeObjectToString = objectProto.toString;
    var symToStringTag = Symbol2 ? Symbol2.toStringTag : void 0;
    function getRawTag(value) {
      var isOwn = hasOwnProperty.call(value, symToStringTag), tag = value[symToStringTag];
      try {
        value[symToStringTag] = void 0;
        var unmasked = true;
      } catch (e) {
      }
      var result = nativeObjectToString.call(value);
      if (unmasked) {
        if (isOwn) {
          value[symToStringTag] = tag;
        } else {
          delete value[symToStringTag];
        }
      }
      return result;
    }
    module2.exports = getRawTag;
  }
});

// ../../../../node_modules/lodash/_objectToString.js
var require_objectToString = __commonJS({
  "../../../../node_modules/lodash/_objectToString.js"(exports, module2) {
    var objectProto = Object.prototype;
    var nativeObjectToString = objectProto.toString;
    function objectToString(value) {
      return nativeObjectToString.call(value);
    }
    module2.exports = objectToString;
  }
});

// ../../../../node_modules/lodash/_baseGetTag.js
var require_baseGetTag = __commonJS({
  "../../../../node_modules/lodash/_baseGetTag.js"(exports, module2) {
    var Symbol2 = require_Symbol();
    var getRawTag = require_getRawTag();
    var objectToString = require_objectToString();
    var nullTag = "[object Null]";
    var undefinedTag = "[object Undefined]";
    var symToStringTag = Symbol2 ? Symbol2.toStringTag : void 0;
    function baseGetTag(value) {
      if (value == null) {
        return value === void 0 ? undefinedTag : nullTag;
      }
      return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
    }
    module2.exports = baseGetTag;
  }
});

// ../../../../node_modules/lodash/isObject.js
var require_isObject = __commonJS({
  "../../../../node_modules/lodash/isObject.js"(exports, module2) {
    function isObject(value) {
      var type = typeof value;
      return value != null && (type == "object" || type == "function");
    }
    module2.exports = isObject;
  }
});

// ../../../../node_modules/lodash/isFunction.js
var require_isFunction = __commonJS({
  "../../../../node_modules/lodash/isFunction.js"(exports, module2) {
    var baseGetTag = require_baseGetTag();
    var isObject = require_isObject();
    var asyncTag = "[object AsyncFunction]";
    var funcTag = "[object Function]";
    var genTag = "[object GeneratorFunction]";
    var proxyTag = "[object Proxy]";
    function isFunction(value) {
      if (!isObject(value)) {
        return false;
      }
      var tag = baseGetTag(value);
      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
    }
    module2.exports = isFunction;
  }
});

// ../../../../node_modules/lodash/_coreJsData.js
var require_coreJsData = __commonJS({
  "../../../../node_modules/lodash/_coreJsData.js"(exports, module2) {
    var root = require_root();
    var coreJsData = root["__core-js_shared__"];
    module2.exports = coreJsData;
  }
});

// ../../../../node_modules/lodash/_isMasked.js
var require_isMasked = __commonJS({
  "../../../../node_modules/lodash/_isMasked.js"(exports, module2) {
    var coreJsData = require_coreJsData();
    var maskSrcKey = function() {
      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || "");
      return uid ? "Symbol(src)_1." + uid : "";
    }();
    function isMasked(func) {
      return !!maskSrcKey && maskSrcKey in func;
    }
    module2.exports = isMasked;
  }
});

// ../../../../node_modules/lodash/_toSource.js
var require_toSource = __commonJS({
  "../../../../node_modules/lodash/_toSource.js"(exports, module2) {
    var funcProto = Function.prototype;
    var funcToString = funcProto.toString;
    function toSource(func) {
      if (func != null) {
        try {
          return funcToString.call(func);
        } catch (e) {
        }
        try {
          return func + "";
        } catch (e) {
        }
      }
      return "";
    }
    module2.exports = toSource;
  }
});

// ../../../../node_modules/lodash/_baseIsNative.js
var require_baseIsNative = __commonJS({
  "../../../../node_modules/lodash/_baseIsNative.js"(exports, module2) {
    var isFunction = require_isFunction();
    var isMasked = require_isMasked();
    var isObject = require_isObject();
    var toSource = require_toSource();
    var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
    var reIsHostCtor = /^\[object .+?Constructor\]$/;
    var funcProto = Function.prototype;
    var objectProto = Object.prototype;
    var funcToString = funcProto.toString;
    var hasOwnProperty = objectProto.hasOwnProperty;
    var reIsNative = RegExp(
      "^" + funcToString.call(hasOwnProperty).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
    );
    function baseIsNative(value) {
      if (!isObject(value) || isMasked(value)) {
        return false;
      }
      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
      return pattern.test(toSource(value));
    }
    module2.exports = baseIsNative;
  }
});

// ../../../../node_modules/lodash/_getValue.js
var require_getValue = __commonJS({
  "../../../../node_modules/lodash/_getValue.js"(exports, module2) {
    function getValue(object, key) {
      return object == null ? void 0 : object[key];
    }
    module2.exports = getValue;
  }
});

// ../../../../node_modules/lodash/_getNative.js
var require_getNative = __commonJS({
  "../../../../node_modules/lodash/_getNative.js"(exports, module2) {
    var baseIsNative = require_baseIsNative();
    var getValue = require_getValue();
    function getNative(object, key) {
      var value = getValue(object, key);
      return baseIsNative(value) ? value : void 0;
    }
    module2.exports = getNative;
  }
});

// ../../../../node_modules/lodash/_DataView.js
var require_DataView = __commonJS({
  "../../../../node_modules/lodash/_DataView.js"(exports, module2) {
    var getNative = require_getNative();
    var root = require_root();
    var DataView = getNative(root, "DataView");
    module2.exports = DataView;
  }
});

// ../../../../node_modules/lodash/_Map.js
var require_Map = __commonJS({
  "../../../../node_modules/lodash/_Map.js"(exports, module2) {
    var getNative = require_getNative();
    var root = require_root();
    var Map = getNative(root, "Map");
    module2.exports = Map;
  }
});

// ../../../../node_modules/lodash/_Promise.js
var require_Promise = __commonJS({
  "../../../../node_modules/lodash/_Promise.js"(exports, module2) {
    var getNative = require_getNative();
    var root = require_root();
    var Promise2 = getNative(root, "Promise");
    module2.exports = Promise2;
  }
});

// ../../../../node_modules/lodash/_Set.js
var require_Set = __commonJS({
  "../../../../node_modules/lodash/_Set.js"(exports, module2) {
    var getNative = require_getNative();
    var root = require_root();
    var Set = getNative(root, "Set");
    module2.exports = Set;
  }
});

// ../../../../node_modules/lodash/_WeakMap.js
var require_WeakMap = __commonJS({
  "../../../../node_modules/lodash/_WeakMap.js"(exports, module2) {
    var getNative = require_getNative();
    var root = require_root();
    var WeakMap = getNative(root, "WeakMap");
    module2.exports = WeakMap;
  }
});

// ../../../../node_modules/lodash/_getTag.js
var require_getTag = __commonJS({
  "../../../../node_modules/lodash/_getTag.js"(exports, module2) {
    var DataView = require_DataView();
    var Map = require_Map();
    var Promise2 = require_Promise();
    var Set = require_Set();
    var WeakMap = require_WeakMap();
    var baseGetTag = require_baseGetTag();
    var toSource = require_toSource();
    var mapTag = "[object Map]";
    var objectTag = "[object Object]";
    var promiseTag = "[object Promise]";
    var setTag = "[object Set]";
    var weakMapTag = "[object WeakMap]";
    var dataViewTag = "[object DataView]";
    var dataViewCtorString = toSource(DataView);
    var mapCtorString = toSource(Map);
    var promiseCtorString = toSource(Promise2);
    var setCtorString = toSource(Set);
    var weakMapCtorString = toSource(WeakMap);
    var getTag = baseGetTag;
    if (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise2 && getTag(Promise2.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {
      getTag = function(value) {
        var result = baseGetTag(value), Ctor = result == objectTag ? value.constructor : void 0, ctorString = Ctor ? toSource(Ctor) : "";
        if (ctorString) {
          switch (ctorString) {
            case dataViewCtorString:
              return dataViewTag;
            case mapCtorString:
              return mapTag;
            case promiseCtorString:
              return promiseTag;
            case setCtorString:
              return setTag;
            case weakMapCtorString:
              return weakMapTag;
          }
        }
        return result;
      };
    }
    module2.exports = getTag;
  }
});

// ../../../../node_modules/lodash/isObjectLike.js
var require_isObjectLike = __commonJS({
  "../../../../node_modules/lodash/isObjectLike.js"(exports, module2) {
    function isObjectLike(value) {
      return value != null && typeof value == "object";
    }
    module2.exports = isObjectLike;
  }
});

// ../../../../node_modules/lodash/_baseIsArguments.js
var require_baseIsArguments = __commonJS({
  "../../../../node_modules/lodash/_baseIsArguments.js"(exports, module2) {
    var baseGetTag = require_baseGetTag();
    var isObjectLike = require_isObjectLike();
    var argsTag = "[object Arguments]";
    function baseIsArguments(value) {
      return isObjectLike(value) && baseGetTag(value) == argsTag;
    }
    module2.exports = baseIsArguments;
  }
});

// ../../../../node_modules/lodash/isArguments.js
var require_isArguments = __commonJS({
  "../../../../node_modules/lodash/isArguments.js"(exports, module2) {
    var baseIsArguments = require_baseIsArguments();
    var isObjectLike = require_isObjectLike();
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    var propertyIsEnumerable = objectProto.propertyIsEnumerable;
    var isArguments = baseIsArguments(function() {
      return arguments;
    }()) ? baseIsArguments : function(value) {
      return isObjectLike(value) && hasOwnProperty.call(value, "callee") && !propertyIsEnumerable.call(value, "callee");
    };
    module2.exports = isArguments;
  }
});

// ../../../../node_modules/lodash/isArray.js
var require_isArray = __commonJS({
  "../../../../node_modules/lodash/isArray.js"(exports, module2) {
    var isArray = Array.isArray;
    module2.exports = isArray;
  }
});

// ../../../../node_modules/lodash/isLength.js
var require_isLength = __commonJS({
  "../../../../node_modules/lodash/isLength.js"(exports, module2) {
    var MAX_SAFE_INTEGER = 9007199254740991;
    function isLength(value) {
      return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
    }
    module2.exports = isLength;
  }
});

// ../../../../node_modules/lodash/isArrayLike.js
var require_isArrayLike = __commonJS({
  "../../../../node_modules/lodash/isArrayLike.js"(exports, module2) {
    var isFunction = require_isFunction();
    var isLength = require_isLength();
    function isArrayLike(value) {
      return value != null && isLength(value.length) && !isFunction(value);
    }
    module2.exports = isArrayLike;
  }
});

// ../../../../node_modules/lodash/stubFalse.js
var require_stubFalse = __commonJS({
  "../../../../node_modules/lodash/stubFalse.js"(exports, module2) {
    function stubFalse() {
      return false;
    }
    module2.exports = stubFalse;
  }
});

// ../../../../node_modules/lodash/isBuffer.js
var require_isBuffer = __commonJS({
  "../../../../node_modules/lodash/isBuffer.js"(exports, module2) {
    var root = require_root();
    var stubFalse = require_stubFalse();
    var freeExports = typeof exports == "object" && exports && !exports.nodeType && exports;
    var freeModule = freeExports && typeof module2 == "object" && module2 && !module2.nodeType && module2;
    var moduleExports = freeModule && freeModule.exports === freeExports;
    var Buffer2 = moduleExports ? root.Buffer : void 0;
    var nativeIsBuffer = Buffer2 ? Buffer2.isBuffer : void 0;
    var isBuffer = nativeIsBuffer || stubFalse;
    module2.exports = isBuffer;
  }
});

// ../../../../node_modules/lodash/_baseIsTypedArray.js
var require_baseIsTypedArray = __commonJS({
  "../../../../node_modules/lodash/_baseIsTypedArray.js"(exports, module2) {
    var baseGetTag = require_baseGetTag();
    var isLength = require_isLength();
    var isObjectLike = require_isObjectLike();
    var argsTag = "[object Arguments]";
    var arrayTag = "[object Array]";
    var boolTag = "[object Boolean]";
    var dateTag = "[object Date]";
    var errorTag = "[object Error]";
    var funcTag = "[object Function]";
    var mapTag = "[object Map]";
    var numberTag = "[object Number]";
    var objectTag = "[object Object]";
    var regexpTag = "[object RegExp]";
    var setTag = "[object Set]";
    var stringTag = "[object String]";
    var weakMapTag = "[object WeakMap]";
    var arrayBufferTag = "[object ArrayBuffer]";
    var dataViewTag = "[object DataView]";
    var float32Tag = "[object Float32Array]";
    var float64Tag = "[object Float64Array]";
    var int8Tag = "[object Int8Array]";
    var int16Tag = "[object Int16Array]";
    var int32Tag = "[object Int32Array]";
    var uint8Tag = "[object Uint8Array]";
    var uint8ClampedTag = "[object Uint8ClampedArray]";
    var uint16Tag = "[object Uint16Array]";
    var uint32Tag = "[object Uint32Array]";
    var typedArrayTags = {};
    typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
    typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
    function baseIsTypedArray(value) {
      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
    }
    module2.exports = baseIsTypedArray;
  }
});

// ../../../../node_modules/lodash/_baseUnary.js
var require_baseUnary = __commonJS({
  "../../../../node_modules/lodash/_baseUnary.js"(exports, module2) {
    function baseUnary(func) {
      return function(value) {
        return func(value);
      };
    }
    module2.exports = baseUnary;
  }
});

// ../../../../node_modules/lodash/_nodeUtil.js
var require_nodeUtil = __commonJS({
  "../../../../node_modules/lodash/_nodeUtil.js"(exports, module2) {
    var freeGlobal = require_freeGlobal();
    var freeExports = typeof exports == "object" && exports && !exports.nodeType && exports;
    var freeModule = freeExports && typeof module2 == "object" && module2 && !module2.nodeType && module2;
    var moduleExports = freeModule && freeModule.exports === freeExports;
    var freeProcess = moduleExports && freeGlobal.process;
    var nodeUtil = function() {
      try {
        var types = freeModule && freeModule.require && freeModule.require("util").types;
        if (types) {
          return types;
        }
        return freeProcess && freeProcess.binding && freeProcess.binding("util");
      } catch (e) {
      }
    }();
    module2.exports = nodeUtil;
  }
});

// ../../../../node_modules/lodash/isTypedArray.js
var require_isTypedArray = __commonJS({
  "../../../../node_modules/lodash/isTypedArray.js"(exports, module2) {
    var baseIsTypedArray = require_baseIsTypedArray();
    var baseUnary = require_baseUnary();
    var nodeUtil = require_nodeUtil();
    var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
    module2.exports = isTypedArray;
  }
});

// ../../../../node_modules/lodash/isEmpty.js
var require_isEmpty = __commonJS({
  "../../../../node_modules/lodash/isEmpty.js"(exports, module2) {
    var baseKeys = require_baseKeys();
    var getTag = require_getTag();
    var isArguments = require_isArguments();
    var isArray = require_isArray();
    var isArrayLike = require_isArrayLike();
    var isBuffer = require_isBuffer();
    var isPrototype = require_isPrototype();
    var isTypedArray = require_isTypedArray();
    var mapTag = "[object Map]";
    var setTag = "[object Set]";
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function isEmpty2(value) {
      if (value == null) {
        return true;
      }
      if (isArrayLike(value) && (isArray(value) || typeof value == "string" || typeof value.splice == "function" || isBuffer(value) || isTypedArray(value) || isArguments(value))) {
        return !value.length;
      }
      var tag = getTag(value);
      if (tag == mapTag || tag == setTag) {
        return !value.size;
      }
      if (isPrototype(value)) {
        return !baseKeys(value).length;
      }
      for (var key in value) {
        if (hasOwnProperty.call(value, key)) {
          return false;
        }
      }
      return true;
    }
    module2.exports = isEmpty2;
  }
});

// src/index.tsx
var src_exports = {};
__export(src_exports, {
  FileUploader: () => FileUploader,
  FileUploaderDropzone: () => FileUploaderDropzone,
  FileUploaderDropzoneText: () => FileUploaderDropzoneText,
  FileUploaderErrorText: () => FileUploaderErrorText,
  FileUploaderHelpText: () => FileUploaderHelpText,
  FileUploaderItem: () => FileUploaderItem,
  FileUploaderItemDescription: () => FileUploaderItemDescription,
  FileUploaderItemTitle: () => FileUploaderItemTitle,
  FileUploaderItemsList: () => FileUploaderItemsList,
  FileUploaderLabel: () => FileUploaderLabel
});
module.exports = __toCommonJS(src_exports);

// src/FileUploader.tsx
var import_box = require("@twilio-paste/box");
var import_uid_library = require("@twilio-paste/uid-library");
var React2 = __toESM(require("react"));

// src/FileUploaderContext.tsx
var React = __toESM(require("react"));
var FileUploaderContext = React.createContext({});

// src/FileUploader.tsx
var FileUploader = React2.forwardRef(
  ({ element = "FILE_UPLOADER", disabled, id: idProp, name, required = false, ...props }, ref) => {
    const id = idProp ? idProp : (0, import_uid_library.useUID)();
    return /* @__PURE__ */ React2.createElement(FileUploaderContext.Provider, { value: { disabled, id, name, required } }, /* @__PURE__ */ React2.createElement(import_box.Box, { ref, element, ...(0, import_box.safelySpreadBoxProps)(props), maxWidth: "size60" }, props.children));
  }
);
FileUploader.displayName = "FileUploader";

// src/FileUploaderHelpText.tsx
var import_box2 = require("@twilio-paste/box");
var import_help_text = require("@twilio-paste/help-text");
var React3 = __toESM(require("react"));
var FileUploaderHelpText = React3.forwardRef(
  ({ children, element = "FILE_UPLOADER_HELP_TEXT", ...props }, ref) => {
    const { id } = React3.useContext(FileUploaderContext);
    return /* @__PURE__ */ React3.createElement(import_box2.Box, { ref, element, ...(0, import_box2.safelySpreadBoxProps)(props), id: `${id}-help-text` }, /* @__PURE__ */ React3.createElement(import_help_text.HelpText, { marginTop: "space0" }, children));
  }
);
FileUploaderHelpText.displayName = "FileUploaderHelpText";

// src/FileUploaderLabel.tsx
var import_label = require("@twilio-paste/label");
var React4 = __toESM(require("react"));
var FileUploaderLabel = React4.forwardRef(
  ({ children, element = "FILE_UPLOADER_LABEL", ...props }, ref) => {
    const { id, disabled, required } = React4.useContext(FileUploaderContext);
    return /* @__PURE__ */ React4.createElement(import_label.Label, { disabled, htmlFor: id, element, required, ref, ...props }, children);
  }
);
FileUploaderLabel.displayName = "FileUploaderLabel";

// src/FileUploaderItem.tsx
var import_box3 = require("@twilio-paste/box");
var import_button = require("@twilio-paste/button");
var import_CloseIcon = require("@twilio-paste/icons/cjs/CloseIcon");
var import_DeleteIcon = require("@twilio-paste/icons/cjs/DeleteIcon");
var import_ErrorIcon = require("@twilio-paste/icons/cjs/ErrorIcon");
var import_spinner = require("@twilio-paste/spinner");
var React6 = __toESM(require("react"));

// src/FileUploaderItemContext.tsx
var React5 = __toESM(require("react"));
var FileUploaderItemContext = React5.createContext({
  variant: "default"
});

// src/FileUploaderItem.tsx
var variantStyles = {
  default: {
    borderColor: "colorBorderWeaker",
    backgroundColor: "colorBackgroundBody"
  },
  loading: {
    borderColor: "colorBorderWeaker",
    backgroundColor: "colorBackgroundBody"
  },
  error: {
    borderColor: "colorBorderError",
    backgroundColor: "colorBackgroundErrorWeakest"
  }
};
var iconStyles = {
  default: {
    color: "colorTextIcon"
  },
  loading: {
    color: "colorTextIcon"
  },
  error: {
    color: "colorTextIconError"
  }
};
var FileUploaderItem = React6.forwardRef(
  ({
    children,
    fileIcon,
    element = "FILE_UPLOADER_ITEM",
    variant = "default",
    i18nErrorText = "(error)",
    i18nButtonText = "Remove file",
    i18nLoadingText = "(uploading file)",
    onButtonClick,
    ...props
  }, ref) => {
    let icon = fileIcon;
    if (variant === "error")
      icon = /* @__PURE__ */ React6.createElement(import_ErrorIcon.ErrorIcon, { title: i18nErrorText, decorative: false, element: `${element}_ERROR_ICON` });
    if (variant === "loading")
      icon = /* @__PURE__ */ React6.createElement(import_spinner.Spinner, { decorative: false, title: i18nLoadingText, element: `${element}_SPINNER` });
    let buttonIcon = /* @__PURE__ */ React6.createElement(import_DeleteIcon.DeleteIcon, { title: i18nButtonText, decorative: false, element: `${element}_DELETE_ICON` });
    if (variant === "loading" || variant === "error") {
      buttonIcon = /* @__PURE__ */ React6.createElement(import_CloseIcon.CloseIcon, { title: i18nButtonText, decorative: false, element: `${element}_DISMISS_ICON` });
    }
    return /* @__PURE__ */ React6.createElement(FileUploaderItemContext.Provider, { value: { variant } }, /* @__PURE__ */ React6.createElement(
      import_box3.Box,
      {
        as: "li",
        ref,
        ...(0, import_box3.safelySpreadBoxProps)(props),
        element,
        variant,
        listStyleType: "none",
        borderWidth: "borderWidth10",
        borderStyle: "solid",
        borderRadius: "borderRadius30",
        padding: "space40",
        display: "grid",
        gridTemplateColumns: "auto 1fr auto",
        columnGap: "space40",
        alignItems: "center",
        ...variantStyles[variant]
      },
      /* @__PURE__ */ React6.createElement(import_box3.Box, { ...iconStyles[variant] }, icon),
      /* @__PURE__ */ React6.createElement(import_box3.Box, { display: "flex", flexDirection: "column", rowGap: "space10", element: `${element}_CONTENT` }, children),
      /* @__PURE__ */ React6.createElement(import_box3.Box, { display: "flex", paddingRight: "space30" }, /* @__PURE__ */ React6.createElement(import_button.Button, { variant: "secondary_icon", size: "reset", onClick: onButtonClick, element: `${element}_BUTTON` }, buttonIcon))
    ));
  }
);
FileUploaderItem.displayName = "FileUploaderItem";

// src/FileUploaderItemsList.tsx
var import_box4 = require("@twilio-paste/box");
var React7 = __toESM(require("react"));
var FileUploaderItemsList = React7.forwardRef(
  ({ children, element = "FILE_UPLOADER_ITEMS_LIST", ...props }, ref) => {
    return /* @__PURE__ */ React7.createElement(
      import_box4.Box,
      {
        ref,
        element,
        as: "ul",
        margin: "space0",
        padding: "space0",
        rowGap: "space30",
        display: "flex",
        flexDirection: "column",
        marginTop: "space40",
        ...(0, import_box4.safelySpreadBoxProps)(props)
      },
      children
    );
  }
);
FileUploaderItemsList.displayName = "FileUploaderItemsList";

// src/FileUploaderItemDescription.tsx
var import_text = require("@twilio-paste/text");
var React8 = __toESM(require("react"));
var variantStyles2 = {
  default: {
    color: "colorTextWeak"
  },
  loading: {
    color: "colorTextWeak"
  },
  error: {
    color: "colorTextError"
  }
};
var FileUploaderItemDescription = React8.forwardRef(
  ({ children, element = "FILE_UPLOADER_ITEM_DESCRIPTION", ...props }, ref) => {
    const { variant } = React8.useContext(FileUploaderItemContext);
    return /* @__PURE__ */ React8.createElement(
      import_text.Text,
      {
        ...(0, import_text.safelySpreadTextProps)(props),
        element,
        variant,
        ref,
        as: "div",
        fontSize: "fontSize20",
        lineHeight: "lineHeight20",
        ...variantStyles2[variant]
      },
      children
    );
  }
);
FileUploaderItemDescription.displayName = "FileUploaderItemDescription";

// src/FileUploaderItemTitle.tsx
var import_text2 = require("@twilio-paste/text");
var React9 = __toESM(require("react"));
var FileUploaderItemTitle = React9.forwardRef(
  ({ children, element = "FILE_UPLOADER_ITEM_TITLE", ...props }, ref) => {
    return /* @__PURE__ */ React9.createElement(
      import_text2.Text,
      {
        ...(0, import_text2.safelySpreadTextProps)(props),
        element,
        ref,
        as: "div",
        fontSize: "fontSize30",
        lineHeight: "lineHeight30",
        color: "colorText",
        wordBreak: "break-word"
      },
      children
    );
  }
);
FileUploaderItemTitle.displayName = "FileUploaderItemTitle";

// src/FileUploaderDropzone.tsx
var import_box5 = require("@twilio-paste/box");
var import_UploadToCloudIcon = require("@twilio-paste/icons/cjs/UploadToCloudIcon");
var React10 = __toESM(require("react"));

// src/utils.ts
var import_isEmpty = __toESM(require_isEmpty());
var arrayToCsv = (value) => {
  if (!Array.isArray(value) || (0, import_isEmpty.default)(value)) {
    return "";
  }
  return value.join(",");
};

// src/FileUploaderDropzone.tsx
var hoverDragStyles = {
  borderColor: "colorBorderPrimaryStrong",
  backgroundColor: "colorBackgroundPrimaryWeakest"
};
var baseStyles = {
  borderColor: "colorBorderWeak",
  borderStyle: "dashed",
  backgroundColor: "colorBackgroundWeak",
  cursor: "pointer",
  color: "colorText",
  _hover: hoverDragStyles
};
var disabledStyles = {
  backgroundColor: "colorBackgroundStrong",
  borderStyle: "solid",
  borderColor: "colorBorderWeaker",
  cursor: "not-allowed",
  color: "colorTextWeaker"
};
var FileUploaderDropzone = React10.forwardRef(
  ({
    element = "FILE_UPLOADER_DROPZONE",
    children,
    acceptedMimeTypes,
    onInputChange,
    onDragEnd,
    onDragEnter,
    onDragLeave,
    onDragOver,
    onDragStart,
    onDrop,
    ...props
  }, ref) => {
    const { id, disabled, required, name } = React10.useContext(FileUploaderContext);
    const [fileInputKey, setFileInputKey] = React10.useState(0);
    const [dragActive, setDragActive] = React10.useState(false);
    let stateStyles = baseStyles;
    if (disabled)
      stateStyles = disabledStyles;
    if (dragActive)
      stateStyles = { ...stateStyles, ...hoverDragStyles };
    const handleInputChange = (event) => {
      setFileInputKey((prev) => prev + 1);
      if (onInputChange) {
        onInputChange(event);
      }
    };
    const handleDragOver = (event) => {
      event.preventDefault();
      event.stopPropagation();
      event.dataTransfer.dropEffect = "copy";
      if (disabled)
        return;
      if (onDragOver) {
        onDragOver(event);
      }
    };
    const handleDragEnter = (event) => {
      event.preventDefault();
      event.stopPropagation();
      event.dataTransfer.dropEffect = "copy";
      if (disabled)
        return;
      setDragActive(true);
      if (onDragEnter) {
        onDragEnter(event);
      }
    };
    const handleDragLeave = (event) => {
      event.preventDefault();
      event.stopPropagation();
      if (disabled)
        return;
      setDragActive(false);
      if (onDragLeave) {
        onDragLeave(event);
      }
    };
    const handleDrop = (event) => {
      event.preventDefault();
      event.stopPropagation();
      if (disabled)
        return;
      setFileInputKey((prev) => prev + 1);
      setDragActive(false);
      if (onDrop) {
        onDrop(event);
      }
    };
    return /* @__PURE__ */ React10.createElement(
      import_box5.Box,
      {
        as: "label",
        element,
        transition: "all 150ms ease-in",
        borderWidth: "borderWidth10",
        borderRadius: "borderRadius30",
        paddingY: "space160",
        paddingX: "space50",
        marginTop: "space40",
        textAlign: "center",
        display: "flex",
        flexDirection: "column",
        justifyContent: "center",
        alignItems: "center",
        height: "size20",
        rowGap: "space20",
        ...stateStyles,
        _focusWithin: {
          backgroundColor: "colorBackground",
          boxShadow: "shadowFocus"
        },
        onDragStart,
        onDragEnd,
        onDragOver: handleDragOver,
        onDragEnter: handleDragEnter,
        onDrop: handleDrop,
        onDragLeave: handleDragLeave
      },
      /* @__PURE__ */ React10.createElement(
        import_box5.Box,
        {
          backgroundColor: disabled ? "colorBackgroundStrong" : "colorBackgroundBody",
          borderRadius: "borderRadiusCircle",
          padding: "space30",
          pointerEvents: "none",
          display: "flex",
          alignItems: "center",
          justifyContent: "center"
        },
        /* @__PURE__ */ React10.createElement(import_UploadToCloudIcon.UploadToCloudIcon, { decorative: true, size: "sizeIcon60", color: disabled ? "colorTextWeaker" : "colorTextIcon" })
      ),
      /* @__PURE__ */ React10.createElement(React10.Fragment, null, children),
      /* @__PURE__ */ React10.createElement(
        import_box5.Box,
        {
          as: "input",
          type: "file",
          ref,
          ...(0, import_box5.safelySpreadBoxProps)({ ...props, id, disabled, required, name }),
          size: "size0",
          border: "none",
          overflow: "hidden",
          padding: "space0",
          margin: "space0",
          whiteSpace: "nowrap",
          textTransform: "none",
          position: "absolute",
          clip: "rect(0 0 0 0)",
          "aria-describedby": `${id}-error-text ${id}-help-text ${id}-dropzone-text`,
          key: fileInputKey,
          onChange: handleInputChange,
          accept: arrayToCsv(acceptedMimeTypes)
        }
      )
    );
  }
);
FileUploaderDropzone.displayName = "FileUploaderDropzone";

// src/FileUploaderDropzoneText.tsx
var import_box6 = require("@twilio-paste/box");
var React11 = __toESM(require("react"));
var FileUploaderDropzoneText = React11.forwardRef(
  ({ children, element = "FILE_UPLOADER_DROPZONE_TEXT", ...props }, ref) => {
    const { id } = React11.useContext(FileUploaderContext);
    return /* @__PURE__ */ React11.createElement(
      import_box6.Box,
      {
        ref,
        element,
        ...(0, import_box6.safelySpreadBoxProps)(props),
        lineHeight: "lineHeight20",
        id: `${id}-dropzone-text`,
        pointerEvents: "none"
      },
      children
    );
  }
);
FileUploaderDropzoneText.displayName = "FileUploaderDropzoneText";

// src/FileUploaderErrorText.tsx
var import_box7 = require("@twilio-paste/box");
var import_help_text2 = require("@twilio-paste/help-text");
var React12 = __toESM(require("react"));
var FileUploaderErrorText = React12.forwardRef(
  ({ children, element = "FILE_UPLOADER_ERROR_TEXT", ...props }, ref) => {
    const { id } = React12.useContext(FileUploaderContext);
    return /* @__PURE__ */ React12.createElement(import_box7.Box, { marginTop: "space50", ref, element, ...(0, import_box7.safelySpreadBoxProps)(props), id: `${id}-error-text` }, /* @__PURE__ */ React12.createElement(import_help_text2.HelpText, { variant: "error", marginTop: "space0" }, children));
  }
);
FileUploaderErrorText.displayName = "FileUploaderErrorText";
