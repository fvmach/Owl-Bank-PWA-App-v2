import type { BoxElementProps } from "@twilio-paste/box";
import type { FlexboxProps, LayoutProps, MarginProps, SpaceOptions } from "@twilio-paste/style-props";
import type { ResponsiveValue } from "@twilio-paste/styling-library";
import type { HTMLPasteProps } from "@twilio-paste/types";
import * as React from "react";
type StackChildMargins = Pick<MarginProps, "marginRight" | "marginBottom">;
type DisplayOptions = "block" | "flex";
type DisplayValue = ResponsiveValue<DisplayOptions>;
type StackOrientationOptions = "horizontal" | "vertical";
export type StackOrientation = ResponsiveValue<StackOrientationOptions>;
interface StackStyleProps extends Pick<LayoutProps, "display">, Pick<FlexboxProps, "alignItems" | "flexWrap"> {
}
export interface StackProps extends HTMLPasteProps<"div"> {
    as?: BoxElementProps["as"];
    /**
     * Overrides the default element name to apply unique styles with the Customization Provider
     *
     * @default 'STACK'
     * @type {BoxElementProps['element']}
     * @memberof StackProps
     */
    element?: BoxElementProps["element"];
    orientation: StackOrientation;
    spacing: SpaceOptions;
}
export declare const getStackDisplay: (orientation: StackOrientation) => DisplayValue;
export declare const getStackStyles: (orientation: StackOrientation) => StackStyleProps;
export declare const getStackChildMargins: (orientation: StackOrientation, spacing: SpaceOptions) => StackChildMargins;
declare const Stack: React.ForwardRefExoticComponent<StackProps & React.RefAttributes<HTMLDivElement>>;
export { Stack };
//# sourceMappingURL=Stack.d.ts.map