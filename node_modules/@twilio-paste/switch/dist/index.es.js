import{InlineControlGroup}from"@twilio-paste/inline-control-group";import*as React2 from"react";import*as React from"react";var SwitchContext=React.createContext({disabled:!1,name:void 0,hasError:void 0,onChange:()=>{}});var SwitchGroup=React2.forwardRef(({children,element="SWITCH_GROUP",disabled=!1,errorText,name,onChange,orientation="vertical",i18nRequiredLabel="(required)",...props},ref)=>{let onChangeHandler=React2.useCallback(event=>{onChange?.(event.target.checked)},[onChange]),contextValue=React2.useMemo(()=>({disabled,name,onChange:onChangeHandler,hasError:errorText?!0:void 0}),[disabled,name,onChangeHandler]);return React2.createElement(SwitchContext.Provider,{value:contextValue},React2.createElement(InlineControlGroup,{...props,element,disabled,errorText,name,orientation,ref,i18nRequiredLabel},children))});SwitchGroup.displayName="SwitchGroup";import{Box as Box2,safelySpreadBoxProps as safelySpreadBoxProps2}from"@twilio-paste/box";import{HelpText}from"@twilio-paste/help-text";import{Label,RequiredDot}from"@twilio-paste/label";import{MediaBody,MediaFigure,MediaObject}from"@twilio-paste/media-object";import{SiblingBox}from"@twilio-paste/sibling-box";import{Text}from"@twilio-paste/text";import{useUID}from"@twilio-paste/uid-library";import*as React4 from"react";import{Box,safelySpreadBoxProps}from"@twilio-paste/box";import{SelectedIcon}from"@twilio-paste/icons/esm/SelectedIcon";import{useTheme}from"@twilio-paste/theme";import*as React3 from"react";var getSwitchKnobTransformValue=(disabled,checked,isHovering)=>{if(disabled){if(disabled){if(!checked)return"translate(10%)";if(checked)return"translateX(105%)"}}else{if(!checked&&isHovering)return"translateX(15%)";if(checked&&!isHovering)return"translateX(105%)";if(checked&&isHovering)return"translateX(100%)"}return"translate(10%)"},getSwitchKnobIconColor=(hasError,disabled,checked)=>hasError&&!disabled?"colorTextIconError":checked&&disabled?"colorTextWeaker":"currentColor",SwitchKnob=React3.forwardRef(({element="SWITCH",disabled=!1,checked=!1,isHovering,height,hasError=!1,...props},ref)=>{let theme=useTheme(),SWITCH_PADDING=theme.space?theme.space.space20:"4px",transformValue=React3.useMemo(()=>getSwitchKnobTransformValue(disabled,checked,isHovering),[disabled,checked,isHovering]);return React3.createElement(Box,{width:`calc(100% - ${SWITCH_PADDING})`,height:"100%",position:"absolute",transform:transformValue,transition:"transform .2s ease-in-out"},React3.createElement(Box,{...safelySpreadBoxProps(props),"aria-disabled":disabled,element:`${element}_KNOB`,ref,height,width:height,marginTop:"space10",transform:checked?"translateX(-100%)":"translateX(0%)",transition:"transform .2s ease-in-out",borderColor:"colorBorder",borderWidth:"borderWidth10",borderRadius:"borderRadiusCircle",backgroundColor:"colorBackgroundBody"},React3.createElement(Box,{display:"flex",height:"100%",alignItems:"center",justifyContent:"center",opacity:checked?"1":"0",transition:"opacity .2s ease-in-out, color .2s ease-in-out"},React3.createElement(SelectedIcon,{decorative:!0,size:"sizeIcon05",element:`${element}_ICON`,color:getSwitchKnobIconColor(hasError,disabled,checked)}))))});SwitchKnob.displayName="SwitchKnob";var SWITCH_WIDTH="1.75rem",SWITCH_HEIGHT="1rem",SWITCH_KNOB_SIZE="0.75rem";var HiddenSwitch=React4.forwardRef((props,ref)=>React4.createElement(Box2,{...props,ref,as:"input",type:"checkbox",role:"switch",size:"size0",border:"none",overflow:"hidden",padding:"space0",margin:"space0",whiteSpace:"nowrap",textTransform:"none",position:"absolute",clip:"rect(0 0 0 0)"}));HiddenSwitch.displayName="HiddenSwitch";var Switch=React4.forwardRef(({checked,defaultChecked,element="SWITCH",children,helpText,id,required,onChange,...props},ref)=>{if(checked!=null&&defaultChecked!=null)throw new Error("[Paste Switch] Do not provide both 'defaultChecked' and 'checked' to Switch at the same time. Please consider if you want this component to be controlled or uncontrolled.");let[checkedState,setCheckedState]=React4.useState(defaultChecked),[isHovering,setIsHovering]=React4.useState(!1),SwitchGroupContext=React4.useContext(SwitchContext),helpTextId=useUID(),SwitchId=id||useUID(),isControlled=React4.useMemo(()=>checked!==void 0,[]),mergedChecked=isControlled?checked:checkedState,disabled=props.disabled!=null?props.disabled:SwitchGroupContext.disabled,name=props.name!=null?props.name:SwitchGroupContext.name,hasError=props.hasError!=null?props.hasError:SwitchGroupContext.hasError,handleChange=React4.useCallback(event=>{disabled||(isControlled?onChange?onChange(event):SwitchGroupContext.onChange(event):setCheckedState(event.currentTarget.checked))},[onChange,SwitchGroupContext.onChange,disabled]);return React4.createElement(Box2,{element,display:"inline-flex",position:"relative",flexDirection:"column"},React4.createElement(HiddenSwitch,{...safelySpreadBoxProps2(props),checked,defaultChecked,disabled,name,onChange:handleChange,"aria-describedby":helpTextId,"aria-checked":mergedChecked,"aria-invalid":hasError,id:SwitchId,required,ref}),React4.createElement(Label,{disabled,htmlFor:SwitchId,marginBottom:"space0"},React4.createElement(Box2,{as:"span",display:"flex"},React4.createElement(SiblingBox,{element:`${element}_CONTROL`,as:"span",outline:"none",position:"relative",display:"inline-block",boxSizing:"content-box",height:SWITCH_HEIGHT,width:SWITCH_WIDTH,marginTop:"space10",overflow:"hidden",borderColor:"colorBorder",borderWidth:"borderWidth10",borderRadius:"borderRadiusPill",transition:"background-color .2s ease-in-out, box-shadow .2s ease-in-out",backgroundColor:"colorBackgroundStronger",cursor:"pointer",onMouseEnter:()=>{setIsHovering(!0)},onMouseLeave:()=>{setIsHovering(!1)},_hoverSibling:{backgroundColor:"colorBackgroundStrongest"},_focusSibling:{boxShadow:"shadowFocus"},_checkedSibling:{backgroundColor:"colorBackgroundPrimary",color:"colorTextPrimary"},_disabledSibling:{backgroundColor:"colorBackgroundStrong",color:"currentColor",cursor:"not-allowed"},_checkedAndHoverSibling:{color:"colorTextIcon",backgroundColor:"colorBackgroundStrongest"},_invalidSibling:{backgroundColor:"colorBackgroundError"},_invalidAndHoverSibling:{backgroundColor:"colorBackgroundErrorStrongest"},_invalidAndDisabledSibling:{backgroundColor:"colorBackgroundStrong"}},React4.createElement(SwitchKnob,{element,disabled,checked:mergedChecked,isHovering,height:SWITCH_KNOB_SIZE,hasError})),React4.createElement(Text,{element:`${element}_LABEL_TEXT`,as:"span",color:"currentColor",marginLeft:"space30",fontWeight:"fontWeightMedium"},React4.createElement(MediaObject,{verticalAlign:"top"},required&&React4.createElement(MediaFigure,{spacing:"space20"},React4.createElement(RequiredDot,null)),React4.createElement(MediaBody,null,children))))),helpText&&React4.createElement(Box2,{as:"span",display:"flex",element:`${element}_HELP_TEXT_WRAPPER`},React4.createElement(Box2,{as:"span",boxSizing:"content-box",width:SWITCH_WIDTH,height:SWITCH_HEIGHT,padding:"space10","aria-hidden":!0,role:"presentation",marginRight:"space20",display:"inline-block",element:`${element}_HELP_TEXT_SPACER`}),React4.createElement(HelpText,{id:helpTextId,marginTop:"space0",element:`${element}_HELP_TEXT`},helpText)))});Switch.displayName="Switch";export{Switch,SwitchGroup};
