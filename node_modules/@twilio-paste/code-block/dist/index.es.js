import{Box as Box2,safelySpreadBoxProps}from"@twilio-paste/box";import{SyntaxHighlighter}from"@twilio-paste/syntax-highlighter-library";import*as React3 from"react";import{css}from"@twilio-paste/styling-library";import{useTheme}from"@twilio-paste/theme";var getPasteSyntaxTheme=maxLines=>{let theme=useTheme();return css({'code[class*="language-"]':{color:"#d6deeb",fontFamily:"fontFamilyCode",textAlign:"left",whiteSpace:"pre",wordSpacing:"normal",wordBreak:"normal",wordWrap:"normal",lineHeight:"1.5",fontSize:"1em",MozTabSize:"4",OTabSize:"4",tabSize:"4",WebkitHyphens:"none",MozHyphens:"none",msHyphens:"none",hyphens:"none"},'pre[class*="language-"]':{color:"white",fontFamily:"fontFamilyCode",textAlign:"left",whiteSpace:"pre",wordSpacing:"normal",wordBreak:"normal",wordWrap:"normal",lineHeight:"1.5",fontSize:"1em",MozTabSize:"4",OTabSize:"4",tabSize:"4",WebkitHyphens:"none",MozHyphens:"none",msHyphens:"none",hyphens:"none",margin:"0",overflow:"auto",background:"inherit",display:"-webkit-box",WebkitLineClamp:`${maxLines}`,WebkitBoxOrient:"vertical",width:"100%"},'pre[class*="language-"]::-moz-selection':{textShadow:"none",background:"inherit"},'pre[class*="language-"] ::-moz-selection':{textShadow:"none",background:"inherit"},'code[class*="language-"]::-moz-selection':{textShadow:"none",background:"inherit"},'code[class*="language-"] ::-moz-selection':{textShadow:"none",background:"inherit"},'pre[class*="language-"]::selection':{textShadow:"none",background:"inherit"},'pre[class*="language-"] ::selection':{textShadow:"none",background:"inherit"},'code[class*="language-"]::selection':{textShadow:"none",background:"inherit"},'code[class*="language-"] ::selection':{textShadow:"none",background:"inherit"},':not(pre) > code[class*="language-"]':{color:"white",background:"#011627",padding:"0.1em",borderRadius:"0.3em",whiteSpace:"normal"},comment:{color:"rgb(136, 145, 170)",fontStyle:"italic"},linenumber:{color:"colorTextInverseWeak",fontStyle:"none"},prolog:{color:"rgb(99, 119, 119)",fontStyle:"italic"},cdata:{color:"rgb(99, 119, 119)",fontStyle:"italic"},punctuation:{color:"rgb(199, 146, 234)"},".namespace":{color:"rgb(178, 204, 214)"},deleted:{color:"rgba(239, 83, 80, 0.56)",fontStyle:"italic"},symbol:{color:"rgb(128, 203, 196)"},property:{color:"rgb(128, 203, 196)"},tag:{color:"rgb(127, 219, 202)"},operator:{color:"rgb(127, 219, 202)"},keyword:{color:"rgb(127, 219, 202)"},boolean:{color:"rgb(255, 88, 116)"},number:{color:"rgb(247, 140, 108)"},constant:{color:"rgb(130, 170, 255)"},function:{color:"rgb(130, 170, 255)"},builtin:{color:"rgb(130, 170, 255)"},char:{color:"rgb(130, 170, 255)"},selector:{color:"rgb(199, 146, 234)",fontStyle:"italic"},doctype:{color:"rgb(199, 146, 234)",fontStyle:"italic"},"attr-name":{color:"rgb(173, 219, 103)",fontStyle:"italic"},inserted:{color:"rgb(173, 219, 103)",fontStyle:"italic"},string:{color:"rgb(173, 219, 103)"},url:{color:"rgb(173, 219, 103)"},entity:{color:"rgb(173, 219, 103)"},".language-css .token.string":{color:"rgb(173, 219, 103)"},".style .token.string":{color:"rgb(173, 219, 103)"},"class-name":{color:"rgb(255, 203, 139)"},atrule:{color:"rgb(255, 203, 139)"},"attr-value":{color:"rgb(255, 203, 139)"},regex:{color:"rgb(214, 222, 235)"},important:{color:"rgb(214, 222, 235)",fontWeight:"bold"},variable:{color:"rgb(214, 222, 235)"},bold:{fontWeight:"bold"},italic:{fontStyle:"italic"}})(theme)};import{Box}from"@twilio-paste/box";import{Button}from"@twilio-paste/button";import{useClipboard}from"@twilio-paste/clipboard-copy-library";import{CopyIcon}from"@twilio-paste/icons/esm/CopyIcon";import{ScreenReaderOnly}from"@twilio-paste/screen-reader-only";import{Tooltip,useTooltipState}from"@twilio-paste/tooltip";import*as React from"react";var getCopyButtonText=(labelBefore,labelAfter)=>copied=>copied?labelAfter:labelBefore,CopyButton=({text,i18nCopyLabelBefore="Copy code block",i18nCopyLabelAfter="Copied!",element="COPY_BUTTON",copyTextFormatter,...props})=>{let tooltipState=useTooltipState(),[tooltipText,setTooltipText]=React.useState(i18nCopyLabelBefore),isFirstRender=React.useRef(!0),getText=React.useMemo(()=>getCopyButtonText(i18nCopyLabelBefore,i18nCopyLabelAfter),[i18nCopyLabelBefore,i18nCopyLabelAfter]),clipboard=useClipboard({copiedTimeout:1500}),handleCopy=React.useCallback(()=>{let formattedText=copyTextFormatter?copyTextFormatter(text):text;clipboard.copy(formattedText)},[text,copyTextFormatter,clipboard]);return React.useEffect(()=>{setTooltipText(getText(clipboard.copied))},[clipboard.copied,getText]),React.useEffect(()=>{if(isFirstRender.current){isFirstRender.current=!1;return}setTimeout(()=>{tooltipState.unstable_update()},0)},[tooltipState]),React.createElement(Tooltip,{text:tooltipText,state:tooltipState,element:`${element}_TOOLTIP`},React.createElement(Button,{variant:"inverse",size:"icon_small",onClick:handleCopy,element,...props},React.createElement(Box,{as:"span"},React.createElement(CopyIcon,{decorative:!0}),React.createElement(Box,{as:"span","aria-live":"polite"},React.createElement(ScreenReaderOnly,null,tooltipText)))))};CopyButton.displayName="CopyButton";import{Button as Button2}from"@twilio-paste/button";import{LinkExternalIcon}from"@twilio-paste/icons/esm/LinkExternalIcon";import{ScreenReaderOnly as ScreenReaderOnly2}from"@twilio-paste/screen-reader-only";import{Tooltip as Tooltip2,useTooltipState as useTooltipState2}from"@twilio-paste/tooltip";import*as React2 from"react";var ExternalLinkButton=({i18nLinkLabel="Open code block in new page",href,element="EXTERNAL_LINK",...props})=>{let tooltipState=useTooltipState2(),tooltipText=i18nLinkLabel,isFirstRender=React2.useRef(!0);return React2.useEffect(()=>{if(isFirstRender.current){isFirstRender.current=!1;return}tooltipState.hide(),setTimeout(()=>tooltipState.show(),0)},[tooltipText]),React2.createElement(Tooltip2,{text:tooltipText,element:`${element}_TOOLTIP`},React2.createElement(Button2,{as:"a",variant:"inverse",size:"icon_small",href,element,target:"_blank",...props},React2.createElement(LinkExternalIcon,{decorative:!0}),React2.createElement(ScreenReaderOnly2,null,i18nLinkLabel)))};ExternalLinkButton.displayName="ExternalLinkButton";var CodeBlockVariantStyles={"single-line":{gridTemplateColumns:"1fr auto",gridTemplateAreas:'"code-block button-group"',columnGap:"space40",borderRadius:"borderRadius20",paddingY:"space60"},"multi-line":{gridTemplateRows:"auto 1fr",gridTemplateAreas:'"button-group" "code-block"',rowGap:"space20",paddingTop:"space50",paddingBottom:"space90"}},CodeBlock=React3.forwardRef(({element="CODE_BLOCK",language,code,variant="multi-line",showLineNumbers,wrapLines,maxLines,externalLink,i18nCopyLabelAfter,i18nCopyLabelBefore,i18nLinkLabel,copyTextFormatter,...props},ref)=>React3.createElement(Box2,{ref,element,variant,...safelySpreadBoxProps(props),backgroundColor:"colorBackgroundBodyInverse",paddingX:"space70",display:"grid",...CodeBlockVariantStyles[variant]},React3.createElement(Box2,{display:"flex",flexDirection:"row",alignItems:"center",columnGap:"space40",justifyContent:variant==="multi-line"?"flex-end":void 0,gridArea:"button-group"},React3.createElement(Box2,null,React3.createElement(CopyButton,{element:`${element}_COPY_BUTTON`,text:code,i18nCopyLabelAfter,i18nCopyLabelBefore,copyTextFormatter})),externalLink&&React3.createElement(Box2,null,React3.createElement(ExternalLinkButton,{href:externalLink,element:`${element}_EXTERNAL_LINK`,i18nLinkLabel}))),React3.createElement(Box2,{element:`${element}_CONTENT`,display:"flex",alignItems:"center",overflowX:"auto",gridArea:"code-block"},React3.createElement(SyntaxHighlighter,{language,style:getPasteSyntaxTheme(maxLines),showLineNumbers,wrapLongLines:wrapLines,wrapLines:!0},code))));CodeBlock.displayName="CodeBlock";import{Box as Box3,safelySpreadBoxProps as safelySpreadBoxProps2}from"@twilio-paste/box";import*as React4 from"react";var CodeBlockHeader=React4.forwardRef(({children,element="CODE_BLOCK_HEADER",as="h3",...props},ref)=>React4.createElement(Box3,{...safelySpreadBoxProps2(props),ref,element,as,backgroundColor:"colorBackgroundInverseStrong",color:"colorTextInverse",paddingY:"space50",paddingX:"space70",margin:"space0",borderTopLeftRadius:"borderRadius20",borderTopRightRadius:"borderRadius20",fontWeight:"fontWeightSemibold",fontSize:"fontSize30"},children));CodeBlockHeader.displayName="CodeBlockHeader";import{Tab}from"@twilio-paste/tabs";import*as React5 from"react";var CodeBlockTab=React5.forwardRef(({children,element="CODE_BLOCK_TAB",...props},ref)=>React5.createElement(Tab,{element,ref,...props},children));CodeBlockTab.displayName="CodeBlockTab";import{Box as Box5,safelySpreadBoxProps as safelySpreadBoxProps3}from"@twilio-paste/box";import{css as css2,styled}from"@twilio-paste/styling-library";import{TabsContext}from"@twilio-paste/tabs";import{TabPrimitiveList}from"@twilio-paste/tabs-primitive";import*as React8 from"react";import{Box as Box4}from"@twilio-paste/box";import{ChevronLeftIcon}from"@twilio-paste/icons/esm/ChevronLeftIcon";import{ChevronRightIcon}from"@twilio-paste/icons/esm/ChevronRightIcon";import{useTheme as useTheme2}from"@twilio-paste/theme";import React6 from"react";var Styles={color:"colorTextIconInverse",_hover:{color:"colorTextInverse",cursor:"pointer"}},OverflowButton=({onClick,position,visible,element="CODE_BLOCK_TAB_LIST",showShadow})=>{let theme=useTheme2(),Chevron=position==="left"?ChevronLeftIcon:ChevronRightIcon;return!visible&&position==="right"?null:React6.createElement(Box4,{onClick,"aria-hidden":!0,display:"flex",alignItems:"center",justifyContent:"center",width:"sizeBase60",padding:"space10",position:"relative",boxShadow:(()=>{if(visible&&showShadow)return position==="left"?theme.shadows.shadowLeftInverse:theme.shadows.shadowRightInverse})(),element:`${element}_OVERFLOW_BUTTON_${position.toUpperCase()}`,cursor:visible?"pointer":"none",zIndex:"zIndex10",...Styles},visible&&React6.createElement(Chevron,{decorative:!0}))};OverflowButton.displayName="OverflowButton";import React7 from"react";var useElementsOutOfBounds=()=>{let[elementOutOBoundsLeft,setElementOutOfBoundsLeft]=React7.useState(null),[elementOutOBoundsRight,setElementOutOfBoundsRight]=React7.useState(null);return{elementOutOBoundsLeft,elementOutOBoundsRight,determineElementsOutOfBounds:(scrollContainer,listContainer)=>{if(scrollContainer&&listContainer){let currentScrollContainerRightPosition=scrollContainer?.getBoundingClientRect().right,currentScrollContainerXOffset=scrollContainer?.getBoundingClientRect().x,leftOutOfBounds=null,rightOutOfBounds=null;listContainer.childNodes.forEach(tab=>{let{x,right}=tab.getBoundingClientRect();x<currentScrollContainerXOffset&&right>currentScrollContainerRightPosition||(Math.round(x)<Math.round(currentScrollContainerXOffset-28)&&(leftOutOfBounds=tab),Math.round(right)>Math.round(currentScrollContainerRightPosition+28)&&!rightOutOfBounds&&(rightOutOfBounds=tab)),setElementOutOfBoundsLeft(leftOutOfBounds),setElementOutOfBoundsRight(rightOutOfBounds)})}}}},useShowShadow=()=>{let[showShadow,setShowShadow]=React7.useState(!1),showShadowTimer;return{showShadow,handleShadow:()=>{showShadowTimer&&window.clearTimeout(showShadowTimer),setShowShadow(!0),showShadowTimer=window.setTimeout(()=>{setShowShadow(!1)},500)}}},handleScrollDirection=(direction,elementOutOBoundsLeft,elementOutOBoundsRight,scrollContainer)=>{let elementToScrollTo=direction==="left"?elementOutOBoundsLeft:elementOutOBoundsRight;if(scrollContainer&&elementToScrollTo){let elementRect=elementToScrollTo.getBoundingClientRect(),containerRect=scrollContainer.getBoundingClientRect(),newScrollLeft=scrollContainer.scrollLeft+(elementRect.left-containerRect.left)-containerRect.width/2+elementRect.width/2;scrollContainer.scrollTo({left:newScrollLeft,behavior:"smooth"})}};var StyledTabList=styled.div(()=>css2({overflowX:"auto",overflowY:"hidden",overflowScrolling:"touch","@supports (-moz-appearance:none)":{paddingBottom:"0px",scrollbarWidth:"none"},"::-webkit-scrollbar":{height:0},"::-webkit-scrollbar-track":{background:"transparent"}})),CodeBlockTabList=React8.forwardRef(({children,element="CODE_BLOCK_TAB_LIST",...props},ref)=>{let tabContext=React8.useContext(TabsContext),scrollableRef=React8.useRef(null),listRef=React8.useRef(null),{determineElementsOutOfBounds,elementOutOBoundsLeft,elementOutOBoundsRight}=useElementsOutOfBounds(),{handleShadow,showShadow}=useShowShadow(),handleScrollEvent=()=>{handleShadow(),determineElementsOutOfBounds(scrollableRef.current,listRef.current)};return React8.useEffect(()=>{scrollableRef.current&&listRef.current&&(scrollableRef.current.addEventListener("scroll",handleScrollEvent),window.addEventListener("resize",handleScrollEvent),determineElementsOutOfBounds(scrollableRef.current,listRef.current))},[scrollableRef.current,listRef.current]),React8.useEffect(()=>()=>{scrollableRef.current&&(scrollableRef.current.removeEventListener("scroll",handleScrollEvent),window.removeEventListener("resize",handleScrollEvent))},[]),React8.createElement(TabPrimitiveList,{...tabContext,as:Box5,...props,element,ref},React8.createElement(Box5,{element:`${element}_CHILD_WRAPPER`,display:"flex"},React8.createElement(OverflowButton,{position:"left",onClick:()=>handleScrollDirection("left",elementOutOBoundsLeft,elementOutOBoundsRight,scrollableRef.current),visible:Boolean(elementOutOBoundsLeft),element,showShadow}),React8.createElement(Box5,{...safelySpreadBoxProps3(props),as:StyledTabList,ref:scrollableRef,display:"flex",flexWrap:"nowrap",element:`${element}_CHILD_SCROLL_WRAPPER`,overflowX:"auto",overflowY:"hidden",flexGrow:1,width:"calc(100% - 60px)"},React8.createElement(Box5,{whiteSpace:"nowrap",element:`${element}_CHILD`,display:"flex",borderBottomStyle:"solid",borderBottomWidth:"borderWidth10",borderBottomColor:"colorBorderInverseWeaker",ref:listRef,flexGrow:1,columnGap:"space20"},children)),React8.createElement(OverflowButton,{position:"right",onClick:()=>handleScrollDirection("right",elementOutOBoundsLeft,elementOutOBoundsRight,scrollableRef.current),visible:Boolean(elementOutOBoundsRight),element,showShadow})))});CodeBlockTabList.displayName="CodeBlockTabList";import{TabPanel}from"@twilio-paste/tabs";import*as React9 from"react";var CodeBlockTabPanel=React9.forwardRef(({children,element="CODE_BLOCK_TAB_PANEL",...props},ref)=>React9.createElement(TabPanel,{...props,paddingTop:"space0",element,ref},children));CodeBlockTabPanel.displayName="CodeBlockTabPanel";import{Box as Box6}from"@twilio-paste/box";import{Tabs}from"@twilio-paste/tabs";import*as React10 from"react";var CodeBlockWrapper=React10.forwardRef(({children,state,element="CODE_BLOCK_WRAPPER"},ref)=>React10.createElement(Tabs,{variant:"inverse",state},React10.createElement(Box6,{backgroundColor:"colorBackgroundInverseStrong",borderRadius:"borderRadius20",overflow:"hidden",element,ref},children)));CodeBlockWrapper.displayName="CodeBlockWrapper";export{CodeBlock,CodeBlockHeader,CodeBlockTab,CodeBlockTabList,CodeBlockTabPanel,CodeBlockWrapper};
