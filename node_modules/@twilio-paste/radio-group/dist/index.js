"use strict";var __create=Object.create;var __defProp=Object.defineProperty;var __getOwnPropDesc=Object.getOwnPropertyDescriptor;var __getOwnPropNames=Object.getOwnPropertyNames;var __getProtoOf=Object.getPrototypeOf,__hasOwnProp=Object.prototype.hasOwnProperty;var __export=(target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:!0})},__copyProps=(to,from,except,desc)=>{if(from&&typeof from=="object"||typeof from=="function")for(let key of __getOwnPropNames(from))!__hasOwnProp.call(to,key)&&key!==except&&__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});return to};var __toESM=(mod,isNodeMode,target)=>(target=mod!=null?__create(__getProtoOf(mod)):{},__copyProps(isNodeMode||!mod||!mod.__esModule?__defProp(target,"default",{value:mod,enumerable:!0}):target,mod)),__toCommonJS=mod=>__copyProps(__defProp({},"__esModule",{value:!0}),mod);var src_exports={};__export(src_exports,{HiddenRadio:()=>HiddenRadio,Radio:()=>Radio,RadioGroup:()=>RadioGroup});module.exports=__toCommonJS(src_exports);var import_base_radio_checkbox=require("@twilio-paste/base-radio-checkbox"),import_box=require("@twilio-paste/box"),import_uid_library=require("@twilio-paste/uid-library"),React2=__toESM(require("react"));var React=__toESM(require("react")),RadioContext=React.createContext({name:"",value:"",disabled:!1,hasError:!1,onChange:()=>{}});var HiddenRadio=React2.forwardRef((props,ref)=>React2.createElement(import_box.Box,{as:"input",type:"radio",size:"size0",border:"none",overflow:"hidden",padding:"space0",margin:"space0",whiteSpace:"nowrap",textTransform:"none",position:"absolute",clip:"rect(0 0 0 0)",ref,...props}));HiddenRadio.displayName="HiddenRadio";var Radio=React2.forwardRef(({id,name,element="RADIO",value,checked,defaultChecked,disabled,hasError,onChange,children,helpText,...props},ref)=>{if(checked!=null&&defaultChecked!=null)throw new Error("[Paste Radio] Do not provide both 'defaultChecked' and 'checked' to Radio at the same time. Please consider if you want this component to be controlled or uncontrolled.");let[checkedState,setCheckedState]=React2.useState(defaultChecked),radioGroupContext=React2.useContext(RadioContext),helpTextId=(0,import_uid_library.useUID)(),radioId=id||(0,import_uid_library.useUID)(),isControlled=React2.useMemo(()=>checked!==void 0||radioGroupContext.value!=="",[]),handleChange=React2.useCallback(event=>{onChange?onChange(event):radioGroupContext.onChange(event),isControlled||setCheckedState(event.target.checked)},[onChange,radioGroupContext,isControlled]),state={name:name??radioGroupContext.name,disabled:disabled??radioGroupContext.disabled,hasError:hasError??radioGroupContext.hasError};isControlled?radioGroupContext.value!==""?state.checked=radioGroupContext.value===value:state.checked=checked:state.defaultChecked=defaultChecked;let mergedChecked=isControlled?state.checked||state.defaultChecked:checkedState;return React2.createElement(import_box.Box,{element,position:"relative",display:"inline-flex",alignItems:"flex-start",flexDirection:"column",verticalAlign:"top"},React2.createElement(HiddenRadio,{...props,...state,value,"aria-describedby":helpTextId,"aria-invalid":state.hasError,onChange:handleChange,id:radioId,ref}),React2.createElement(import_base_radio_checkbox.BaseRadioCheckboxLabel,{disabled:state.disabled,htmlFor:radioId},React2.createElement(import_base_radio_checkbox.BaseRadioCheckboxControl,{element:`${element}_CONTROL`,borderRadius:"borderRadiusCircle",disabled:state.disabled,type:"radio",_checkedAndDisabledSibling:{color:"colorTextWeaker"}},React2.createElement(import_box.Box,{as:"span",element:`${element}_CONTROL_CIRCLE`,lineHeight:"lineHeight0",display:mergedChecked?"block":"none",color:"inherit",size:"sizeIcon10"},React2.createElement("svg",{role:"img","aria-hidden":!0,width:"100%",height:"100%",viewBox:"0 0 16 16",fill:"none"},React2.createElement("circle",{fill:"currentColor",cx:8,cy:8,r:3})))),React2.createElement(import_base_radio_checkbox.BaseRadioCheckboxLabelText,{element:`${element}_LABEL_TEXT`,fontWeight:"fontWeightMedium"},children)),helpText&&React2.createElement(import_base_radio_checkbox.BaseRadioCheckboxHelpText,{element:`${element}_HELP_TEXT_WRAPPER`,helpTextId},helpText))});Radio.displayName="Radio";var import_inline_control_group=require("@twilio-paste/inline-control-group"),React3=__toESM(require("react"));var RadioGroup=React3.forwardRef(({name,element="RADIO_GROUP",value,onChange,disabled=!1,errorText,children,i18nRequiredLabel="(required)",...props},ref)=>{let onChangeHandler=React3.useCallback(event=>{onChange?.(event.target.value)},[onChange]),contextValue=React3.useMemo(()=>({name,value:value||"",disabled,hasError:errorText!=null,onChange:onChangeHandler}),[name,value,disabled,errorText,onChangeHandler]);return React3.createElement(RadioContext.Provider,{value:contextValue},React3.createElement(import_inline_control_group.InlineControlGroup,{element,...props,disabled,errorText,name,ref,i18nRequiredLabel},children))});RadioGroup.displayName="RadioGroup";
