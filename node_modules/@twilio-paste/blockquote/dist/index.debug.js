"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.tsx
var src_exports = {};
__export(src_exports, {
  Blockquote: () => Blockquote,
  BlockquoteCitation: () => BlockquoteCitation,
  BlockquoteContent: () => BlockquoteContent
});
module.exports = __toCommonJS(src_exports);

// src/Blockquote.tsx
var import_box = require("@twilio-paste/box");
var import_BlockquoteIcon = require("@twilio-paste/icons/cjs/BlockquoteIcon");
var import_react = __toESM(require("react"));

// src/BlockquoteContext.tsx
var React = __toESM(require("react"));
var BlockquoteContext = React.createContext({});

// src/Blockquote.tsx
var Blockquote = import_react.default.forwardRef(
  ({ children, element = "BLOCKQUOTE", url, marginBottom = "space70", ...props }, ref) => {
    return /* @__PURE__ */ import_react.default.createElement(
      import_box.Box,
      {
        ...(0, import_box.safelySpreadBoxProps)(props),
        ref,
        display: "flex",
        columnGap: "space50",
        alignItems: "flex-start",
        lineHeight: "lineHeight30",
        fontSize: "fontSize30",
        marginBottom,
        element
      },
      /* @__PURE__ */ import_react.default.createElement(import_BlockquoteIcon.BlockquoteIcon, { element: `${element}_ICON`, decorative: true, color: "colorTextIcon" }),
      /* @__PURE__ */ import_react.default.createElement(BlockquoteContext.Provider, { value: { url } }, /* @__PURE__ */ import_react.default.createElement(import_box.Box, { element: `INNER_${element}` }, children))
    );
  }
);
Blockquote.displayName = "Blockquote";

// src/BlockquoteContent.tsx
var import_box2 = require("@twilio-paste/box");
var import_react2 = __toESM(require("react"));
var BlockquoteContent = import_react2.default.forwardRef(
  ({ children, element = "BLOCKQUOTE_CONTENT", ...props }, ref) => {
    const { url } = import_react2.default.useContext(BlockquoteContext);
    return /* @__PURE__ */ import_react2.default.createElement(import_box2.Box, { ...(0, import_box2.safelySpreadBoxProps)(props), as: "blockquote", margin: "space0", ref, element, cite: url }, children);
  }
);
BlockquoteContent.displayName = "BlockquoteContent";

// src/BlockquoteCitation.tsx
var import_anchor = require("@twilio-paste/anchor");
var import_box3 = require("@twilio-paste/box");
var import_text = require("@twilio-paste/text");
var import_react3 = __toESM(require("react"));
var BlockquoteCitation = import_react3.default.forwardRef(
  ({ element = "BLOCKQUOTE_CITATION", author, source, ...props }, ref) => {
    const { url } = import_react3.default.useContext(BlockquoteContext);
    return /* @__PURE__ */ import_react3.default.createElement(
      import_box3.Box,
      {
        ...(0, import_box3.safelySpreadBoxProps)(props),
        marginTop: "space30",
        marginBottom: "space0",
        as: "p",
        element,
        ref
      },
      "\u2014",
      " ",
      /* @__PURE__ */ import_react3.default.createElement(import_text.Text, { as: "span", fontWeight: "fontWeightSemibold", element: `${element}_AUTHOR` }, author),
      source ? /* @__PURE__ */ import_react3.default.createElement(import_react3.default.Fragment, null, ",", " ", /* @__PURE__ */ import_react3.default.createElement(import_box3.Box, { as: "cite", fontStyle: "normal", element: `${element}_CITE` }, url ? /* @__PURE__ */ import_react3.default.createElement(import_anchor.Anchor, { href: url, showExternal: true, element: `${element}_ANCHOR` }, source) : /* @__PURE__ */ import_react3.default.createElement(import_text.Text, { as: "span", element: `${element}_TEXT` }, source))) : null
    );
  }
);
BlockquoteCitation.displayName = "BlockquoteCitation";
