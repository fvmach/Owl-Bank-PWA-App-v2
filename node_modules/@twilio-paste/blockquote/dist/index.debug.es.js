// src/Blockquote.tsx
import { Box, safelySpreadBoxProps } from "@twilio-paste/box";
import { BlockquoteIcon } from "@twilio-paste/icons/esm/BlockquoteIcon";
import React2 from "react";

// src/BlockquoteContext.tsx
import * as React from "react";
var BlockquoteContext = React.createContext({});

// src/Blockquote.tsx
var Blockquote = React2.forwardRef(
  ({ children, element = "BLOCKQUOTE", url, marginBottom = "space70", ...props }, ref) => {
    return /* @__PURE__ */ React2.createElement(
      Box,
      {
        ...safelySpreadBoxProps(props),
        ref,
        display: "flex",
        columnGap: "space50",
        alignItems: "flex-start",
        lineHeight: "lineHeight30",
        fontSize: "fontSize30",
        marginBottom,
        element
      },
      /* @__PURE__ */ React2.createElement(BlockquoteIcon, { element: `${element}_ICON`, decorative: true, color: "colorTextIcon" }),
      /* @__PURE__ */ React2.createElement(BlockquoteContext.Provider, { value: { url } }, /* @__PURE__ */ React2.createElement(Box, { element: `INNER_${element}` }, children))
    );
  }
);
Blockquote.displayName = "Blockquote";

// src/BlockquoteContent.tsx
import { Box as Box2, safelySpreadBoxProps as safelySpreadBoxProps2 } from "@twilio-paste/box";
import React3 from "react";
var BlockquoteContent = React3.forwardRef(
  ({ children, element = "BLOCKQUOTE_CONTENT", ...props }, ref) => {
    const { url } = React3.useContext(BlockquoteContext);
    return /* @__PURE__ */ React3.createElement(Box2, { ...safelySpreadBoxProps2(props), as: "blockquote", margin: "space0", ref, element, cite: url }, children);
  }
);
BlockquoteContent.displayName = "BlockquoteContent";

// src/BlockquoteCitation.tsx
import { Anchor } from "@twilio-paste/anchor";
import { Box as Box3, safelySpreadBoxProps as safelySpreadBoxProps3 } from "@twilio-paste/box";
import { Text } from "@twilio-paste/text";
import React4 from "react";
var BlockquoteCitation = React4.forwardRef(
  ({ element = "BLOCKQUOTE_CITATION", author, source, ...props }, ref) => {
    const { url } = React4.useContext(BlockquoteContext);
    return /* @__PURE__ */ React4.createElement(
      Box3,
      {
        ...safelySpreadBoxProps3(props),
        marginTop: "space30",
        marginBottom: "space0",
        as: "p",
        element,
        ref
      },
      "\u2014",
      " ",
      /* @__PURE__ */ React4.createElement(Text, { as: "span", fontWeight: "fontWeightSemibold", element: `${element}_AUTHOR` }, author),
      source ? /* @__PURE__ */ React4.createElement(React4.Fragment, null, ",", " ", /* @__PURE__ */ React4.createElement(Box3, { as: "cite", fontStyle: "normal", element: `${element}_CITE` }, url ? /* @__PURE__ */ React4.createElement(Anchor, { href: url, showExternal: true, element: `${element}_ANCHOR` }, source) : /* @__PURE__ */ React4.createElement(Text, { as: "span", element: `${element}_TEXT` }, source))) : null
    );
  }
);
BlockquoteCitation.displayName = "BlockquoteCitation";
export {
  Blockquote,
  BlockquoteCitation,
  BlockquoteContent
};
