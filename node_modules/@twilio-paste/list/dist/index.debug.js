"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.tsx
var src_exports = {};
__export(src_exports, {
  List: () => List,
  ListItem: () => ListItem,
  OrderedDisplayList: () => OrderedDisplayList,
  OrderedDisplayListHeading: () => OrderedDisplayListHeading,
  OrderedDisplayListItem: () => OrderedDisplayListItem,
  OrderedList: () => OrderedList,
  UnorderedList: () => UnorderedList
});
module.exports = __toCommonJS(src_exports);

// src/List.tsx
var import_text = require("@twilio-paste/text");
var React = __toESM(require("react"));
var List = React.forwardRef(
  ({ as, children, element = "LIST", listStyleType = "disc", ...props }, ref) => {
    return /* @__PURE__ */ React.createElement(
      import_text.Text,
      {
        ...props,
        as,
        color: "colorText",
        element,
        fontSize: "fontSize30",
        fontWeight: "fontWeightNormal",
        lineHeight: "lineHeight40",
        marginLeft: "space70",
        listStyleType,
        ref
      },
      children
    );
  }
);
List.displayName = "List";

// src/ListItem.tsx
var import_text2 = require("@twilio-paste/text");
var React2 = __toESM(require("react"));
var ListItem = React2.forwardRef(
  ({ children, element = "LIST_ITEM", ...props }, ref) => {
    return /* @__PURE__ */ React2.createElement(
      import_text2.Text,
      {
        ...(0, import_text2.safelySpreadTextProps)(props),
        as: "li",
        color: "colorText",
        element,
        fontSize: "fontSize30",
        fontWeight: "fontWeightNormal",
        lineHeight: "lineHeight40",
        marginBottom: "space30",
        marginTop: "space30",
        ref
      },
      children
    );
  }
);
ListItem.displayName = "ListItem";

// src/OrderedList.tsx
var import_text3 = require("@twilio-paste/text");
var React3 = __toESM(require("react"));
var OrderedList = React3.forwardRef(
  ({ children, element = "ORDERED_LIST", marginTop, marginBottom = "space70", ...props }, ref) => {
    return /* @__PURE__ */ React3.createElement(
      List,
      {
        ...(0, import_text3.safelySpreadTextProps)(props),
        as: "ol",
        element,
        marginTop,
        marginBottom,
        listStyleType: "decimal",
        ref
      },
      children
    );
  }
);
OrderedList.displayName = "OrderedList";

// src/display/OrderedDisplayList.tsx
var import_box = require("@twilio-paste/box");
var import_styling_library = require("@twilio-paste/styling-library");
var import_text4 = require("@twilio-paste/text");
var React5 = __toESM(require("react"));

// src/display/OrderedDisplayListContext.tsx
var React4 = __toESM(require("react"));
var OrderedDisplayListContext = React4.createContext({ variant: "heading30" });

// src/display/OrderedDisplayList.tsx
var GapStyles = {
  heading20: "space100",
  heading30: "space90",
  heading40: "space80",
  heading50: "space70",
  heading60: "space60"
};
var StyledOrderedList = (0, import_styling_library.styled)(import_box.Box)(({ variant }) => {
  return (0, import_styling_library.css)({
    counterReset: "list-counter",
    margin: "space0",
    padding: "space0",
    listStyle: "none",
    display: "grid",
    gap: GapStyles[variant]
  });
});
var OrderedDisplayList = React5.forwardRef(
  ({
    children,
    element = "ORDERED_DISPLAY_LIST",
    marginTop,
    marginBottom = "space70",
    variant = "heading30",
    ...props
  }, ref) => {
    return /* @__PURE__ */ React5.createElement(OrderedDisplayListContext.Provider, { value: { variant } }, /* @__PURE__ */ React5.createElement(
      StyledOrderedList,
      {
        ...(0, import_text4.safelySpreadTextProps)(props),
        as: "ol",
        element,
        marginTop,
        marginBottom,
        ref,
        variant
      },
      children
    ));
  }
);
OrderedDisplayList.displayName = "OrderedDisplayList";

// src/display/OrderedDisplayListItem.tsx
var import_box2 = require("@twilio-paste/box");
var import_styling_library2 = require("@twilio-paste/styling-library");
var React6 = __toESM(require("react"));
var VariantStyles = {
  heading20: {
    before: {
      width: "sizeSquare100",
      fontSize: "fontSize70",
      lineHeight: "lineHeight70"
    },
    element: {
      fontSize: "fontSize40",
      lineHeight: "lineHeight40"
    }
  },
  heading30: {
    before: {
      width: "sizeSquare80",
      fontSize: "fontSize60",
      lineHeight: "lineHeight60"
    },
    element: {
      fontSize: "fontSize40",
      lineHeight: "lineHeight40"
    }
  },
  heading40: {
    before: {
      width: "sizeSquare70",
      fontSize: "fontSize40",
      lineHeight: "lineHeight40"
    },
    element: {
      fontSize: "fontSize30",
      lineHeight: "lineHeight30"
    }
  },
  heading50: {
    before: {
      width: "sizeSquare60",
      fontSize: "fontSize30",
      lineHeight: "lineHeight30"
    },
    element: {
      fontSize: "fontSize30",
      lineHeight: "lineHeight30"
    }
  },
  heading60: {
    before: {
      width: "sizeSquare60",
      fontSize: "fontSize20",
      lineHeight: "lineHeight20"
    },
    element: {
      fontSize: "fontSize20",
      lineHeight: "lineHeight20"
    }
  }
};
var StyledOrderedListItem = (0, import_styling_library2.styled)(import_box2.Box)(({ variant }) => {
  const variantStyles = VariantStyles[variant];
  return (0, import_styling_library2.css)({
    display: "grid",
    gridTemplateColumns: "auto 1fr",
    alignItems: "start",
    gap: "space70",
    ...variantStyles.element,
    "&:before": {
      display: "inline-block",
      position: "relative",
      counterIncrement: "list-counter",
      content: "counter(list-counter)",
      color: "colorTextWeak",
      textAlign: "right",
      fontWeight: "fontWeightSemibold",
      ...variantStyles.before
    }
  });
});
var OrderedDisplayListItem = React6.forwardRef(
  ({ children, element = "ORDERED_DISPLAY_LIST_ITEM", ...props }, ref) => {
    const { variant } = React6.useContext(OrderedDisplayListContext);
    return /* @__PURE__ */ React6.createElement(StyledOrderedListItem, { ...(0, import_box2.safelySpreadBoxProps)(props), as: "li", element, variant, ref }, /* @__PURE__ */ React6.createElement("div", null, children));
  }
);
OrderedDisplayListItem.displayName = "OrderedDisplayListItem";

// src/display/OrderedDisplayListHeading.tsx
var import_heading = require("@twilio-paste/heading");
var React7 = __toESM(require("react"));
var OrderedDisplayListHeading = React7.forwardRef(
  ({ children, element = "ORDERED_DISPLAY_LIST_HEADING", as = "div", ...props }, ref) => {
    const { variant } = React7.useContext(OrderedDisplayListContext);
    return /* @__PURE__ */ React7.createElement(import_heading.Heading, { ...props, ref, as, variant, element, marginBottom: "space0" }, children);
  }
);
OrderedDisplayListHeading.displayName = "OrderedDisplayListHeading";

// src/UnorderedList.tsx
var import_text5 = require("@twilio-paste/text");
var React8 = __toESM(require("react"));
var UnorderedList = React8.forwardRef(
  ({ children, element = "UNORDERED_LIST", marginTop, marginBottom = "space70", ...props }, ref) => {
    return /* @__PURE__ */ React8.createElement(
      List,
      {
        ...(0, import_text5.safelySpreadTextProps)(props),
        as: "ul",
        element,
        marginTop,
        marginBottom,
        ref,
        listStyleType: "disc"
      },
      children
    );
  }
);
UnorderedList.displayName = "UnorderedList";
