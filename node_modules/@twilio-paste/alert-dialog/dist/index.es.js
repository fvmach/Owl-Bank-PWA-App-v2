import{useTransition}from"@twilio-paste/animation-library";import{Box as Box4,safelySpreadBoxProps as safelySpreadBoxProps4}from"@twilio-paste/box";import{ModalDialogOverlay}from"@twilio-paste/modal";import{useUID}from"@twilio-paste/uid-library";import*as React4 from"react";import{Box,safelySpreadBoxProps}from"@twilio-paste/box";import*as React from"react";var AlertDialogBody=React.forwardRef(({bodyID,children,element="ALERT_DIALOG_BODY",...props},ref)=>React.createElement(Box,{...safelySpreadBoxProps(props),as:"div",overflowY:"auto",padding:"space90",paddingTop:"space0",element,id:bodyID,ref},children));AlertDialogBody.displayName="AlertDialogBody";import{ModalDialogContent}from"@twilio-paste/modal";import{css,styled}from"@twilio-paste/styling-library";var AlertDialogContent=styled(ModalDialogContent)(()=>css({maxWidth:"size40"}));AlertDialogContent.displayName="AlertDialogContent";import{Box as Box2,safelySpreadBoxProps as safelySpreadBoxProps2}from"@twilio-paste/box";import{Button}from"@twilio-paste/button";import{Stack}from"@twilio-paste/stack";import*as React2 from"react";var AlertDialogFooter=React2.forwardRef(({destructive,element="ALERT_DIALOG_FOOTER",onConfirm,onConfirmLabel,onDismiss,onDismissLabel,onConfirmDisabled,isConfirmDisabled=onConfirmDisabled||!1,...props},ref)=>{let primaryVariant=destructive?"destructive":"primary";return React2.createElement(Box2,{...safelySpreadBoxProps2(props),as:"div",flexShrink:0,display:"flex",padding:"space90",paddingTop:"space0",border:"none",element,justifyContent:"flex-end",ref},React2.createElement(Stack,{orientation:"horizontal",spacing:"space50"},React2.createElement(Button,{variant:"secondary",onClick:onDismiss},onDismissLabel),React2.createElement(Button,{variant:primaryVariant,onClick:onConfirm,disabled:destructive&&(isConfirmDisabled||onConfirmDisabled)},onConfirmLabel)))});AlertDialogFooter.displayName="AlertDialogFooter";import{Box as Box3,safelySpreadBoxProps as safelySpreadBoxProps3}from"@twilio-paste/box";import{Heading}from"@twilio-paste/heading";import*as React3 from"react";var AlertDialogHeader=React3.forwardRef(({children,element="ALERT_DIALOG_HEADER",headingID,...props},ref)=>React3.createElement(Box3,{...safelySpreadBoxProps3(props),as:"div",padding:"space90",flexShrink:0,border:"none",element:`${element}_WRAPPER`,ref},React3.createElement(Heading,{as:"h3",element,marginBottom:"space0",variant:"heading30",id:headingID},children)));AlertDialogHeader.displayName="AlertDialogHeader";var getAnimationStates=()=>({from:{opacity:0,transform:"scale(0.675)"},enter:{opacity:1,transform:"scale(1)"},leave:{opacity:0,transform:"scale(0.675)"},config:{mass:.5,tension:370,friction:26}}),AlertDialog=React4.forwardRef(({children,destructive,element="ALERT_DIALOG",heading,isOpen,onConfirm,onConfirmLabel,onDismiss,onDismissLabel,onConfirmDisabled,isConfirmDisabled,...props},ref)=>{let transitions=useTransition(isOpen,getAnimationStates()),headingID=useUID(),bodyID=useUID();return React4.createElement(React4.Fragment,null,transitions((styles,item)=>item&&React4.createElement(ModalDialogOverlay,{isOpen,style:{opacity:styles.opacity}},React4.createElement(Box4,{as:AlertDialogContent,...safelySpreadBoxProps4(props),"aria-labelledby":headingID,"aria-describedby":bodyID,element,ref,role:"alertdialog",style:styles},React4.createElement(AlertDialogHeader,{headingID,element:`${element}_HEADER`},heading),React4.createElement(AlertDialogBody,{bodyID,element:`${element}_BODY`},children),React4.createElement(AlertDialogFooter,{destructive,element:`${element}_FOOTER`,onDismiss,onDismissLabel,onConfirm,onConfirmLabel,isConfirmDisabled:isConfirmDisabled||onConfirmDisabled})))))});AlertDialog.displayName="AlertDialog";export{AlertDialog};
