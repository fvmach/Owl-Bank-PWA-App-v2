/// <reference types="react" />
import type { PopoverArrowHTMLProps, PopoverArrowOptions } from "../Popover/PopoverArrow";
export type TooltipArrowOptions = PopoverArrowOptions;
export type TooltipArrowHTMLProps = PopoverArrowHTMLProps;
export type TooltipArrowProps = TooltipArrowOptions & TooltipArrowHTMLProps;
export declare const useTooltipArrow: {
    (options?: PopoverArrowOptions | undefined, htmlProps?: import("@twilio-paste/paste-reakit-fork/ts").BoxHTMLProps | undefined, unstable_ignoreUseOptions?: boolean | undefined): import("@twilio-paste/paste-reakit-fork/ts").BoxHTMLProps;
    unstable_propsAreEqual: (prev: import("@twilio-paste/paste-reakit-fork/ts").BoxOptions & Pick<Partial<import("@twilio-paste/paste-reakit-fork/ts").PopoverStateReturn>, "unstable_arrowRef" | "unstable_arrowStyles"> & Pick<import("@twilio-paste/paste-reakit-fork/ts").PopoverStateReturn, "placement"> & {
        size?: string | number | undefined;
        fill?: string | undefined;
        stroke?: string | undefined;
    } & import("react").HTMLAttributes<any> & import("react").RefAttributes<any> & {
        wrapElement?: ((element: import("react").ReactNode) => import("react").ReactNode) | undefined;
    }, next: import("@twilio-paste/paste-reakit-fork/ts").BoxOptions & Pick<Partial<import("@twilio-paste/paste-reakit-fork/ts").PopoverStateReturn>, "unstable_arrowRef" | "unstable_arrowStyles"> & Pick<import("@twilio-paste/paste-reakit-fork/ts").PopoverStateReturn, "placement"> & {
        size?: string | number | undefined;
        fill?: string | undefined;
        stroke?: string | undefined;
    } & import("react").HTMLAttributes<any> & import("react").RefAttributes<any> & {
        wrapElement?: ((element: import("react").ReactNode) => import("react").ReactNode) | undefined;
    }) => boolean;
    __keys: readonly any[];
    __useOptions: (options: PopoverArrowOptions, htmlProps: import("@twilio-paste/paste-reakit-fork/ts").BoxHTMLProps) => PopoverArrowOptions;
};
export declare const TooltipArrow: import("reakit-system/createComponent").Component<"div", import("@twilio-paste/paste-reakit-fork/ts").BoxOptions & Pick<Partial<import("@twilio-paste/paste-reakit-fork/ts").PopoverStateReturn>, "unstable_arrowRef" | "unstable_arrowStyles"> & Pick<import("@twilio-paste/paste-reakit-fork/ts").PopoverStateReturn, "placement"> & {
    size?: string | number | undefined;
    fill?: string | undefined;
    stroke?: string | undefined;
} & import("react").HTMLAttributes<any> & import("react").RefAttributes<any> & {
    wrapElement?: ((element: import("react").ReactNode) => import("react").ReactNode) | undefined;
}>;
//# sourceMappingURL=TooltipArrow.d.ts.map