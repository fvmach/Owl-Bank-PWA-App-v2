// src/ProgressSteps.tsx
import { Box, safelySpreadBoxProps } from "@twilio-paste/box";
import { css, styled } from "@twilio-paste/styling-library";
import * as React2 from "react";

// src/ProgressStepsContext.tsx
import * as React from "react";
var ProgressStepsContext = React.createContext({});

// src/ProgressSteps.tsx
var ItemSeparatorStyles = {
  vertical: {
    flexDirection: "column",
    alignItems: "flex-start",
    "[role='listitem']>*>div:first-child::after": {
      content: "''",
      borderLeftWidth: "borderWidth20",
      borderLeftStyle: "solid",
      borderLeftColor: "colorBorderWeaker",
      borderRadius: "borderRadius0",
      minHeight: "sizeBase80",
      flexGrow: "1",
      marginY: "space30"
    },
    "[role='listitem']:last-child>*>div:first-child::after": {
      content: "none"
    }
  },
  horizontal: {
    flexWrap: "nowrap",
    "[role='listitem']": {
      display: "flex",
      alignItems: "flex-start",
      flexGrow: "1",
      "&::after": {
        content: "''",
        borderBottomWidth: "borderWidth20",
        borderBottomStyle: "solid",
        borderBottomColor: "colorBorderWeaker",
        borderRadius: "borderRadius20",
        minWidth: "sizeBase40",
        flexGrow: 1,
        marginTop: "10px"
      },
      "&>*:first-child": {
        marginX: "space30"
      }
    },
    "[role='listitem']:first-child": {
      "&>*:first-child": {
        marginLeft: "space0"
      }
    },
    "[role='listitem']:last-child": {
      flexGrow: "0",
      "&::after": {
        content: "none"
      },
      "&>*:last-child": {
        marginRight: "space0"
      }
    }
  }
};
var ProgressSteps = React2.forwardRef(
  ({ element = "PROGRESS_STEPS", orientation = "horizontal", ...props }, ref) => {
    const ContainerStyled = React2.useMemo(
      () => styled.div(
        css({
          display: "flex",
          ...ItemSeparatorStyles[orientation]
        })
      ),
      [orientation]
    );
    return /* @__PURE__ */ React2.createElement(ProgressStepsContext.Provider, { value: { orientation } }, /* @__PURE__ */ React2.createElement(Box, { ...safelySpreadBoxProps(props), as: ContainerStyled, ref, element, role: "list" }, props.children));
  }
);
ProgressSteps.displayName = "ProgressSteps";

// src/ProgressStepSeparator.tsx
import * as React3 from "react";
var ProgressStepSeparator = React3.forwardRef(() => {
  return null;
});
ProgressStepSeparator.displayName = "ProgressStepSeparator";

// src/ProgressStepContent.tsx
import { Box as Box2 } from "@twilio-paste/box";
import React4 from "react";
var ProgressStepContent = React4.forwardRef(
  ({ element = "PROGRESS_STEP_CONTENT", paddingY = "space40", ...props }, ref) => {
    return /* @__PURE__ */ React4.createElement(Box2, { element, color: "colorText", ref, paddingY }, props.children);
  }
);
ProgressStepContent.displayName = "ProgressStepContent";

// src/ProgressStepComplete.tsx
import { Box as Box3, safelySpreadBoxProps as safelySpreadBoxProps2 } from "@twilio-paste/box";
import { SuccessIcon as ProgressSuccessIcon } from "@twilio-paste/icons/esm/SuccessIcon";
import * as React5 from "react";
var ProgressStepComplete = React5.forwardRef(
  ({ element = "PROGRESS_STEP_COMPLETE", as = "div", children, i18nCompleteLabel = "Completed", ...props }, ref) => {
    return /* @__PURE__ */ React5.createElement("div", { role: "listitem" }, /* @__PURE__ */ React5.createElement(
      Box3,
      {
        ...safelySpreadBoxProps2(props),
        element,
        as,
        type: as === "button" ? "button" : void 0,
        ref,
        display: "flex",
        columnGap: "space30",
        border: "none",
        background: "none",
        padding: "space0",
        margin: "space0",
        fontFamily: "fontFamilyText",
        fontSize: "fontSize20",
        lineHeight: "lineHeight20",
        fontWeight: as === "button" ? "fontWeightSemibold" : "fontWeightMedium",
        outline: "none",
        borderRadius: "borderRadius20",
        cursor: as !== "div" ? "pointer" : "default",
        color: "colorTextWeak",
        _hover: as !== "div" ? { textDecoration: "none", color: "colorTextPrimary" } : void 0,
        _focus: as !== "div" ? { boxShadow: "shadowFocus" } : void 0
      },
      /* @__PURE__ */ React5.createElement(Box3, { display: "flex", flexDirection: "column", alignItems: "center" }, /* @__PURE__ */ React5.createElement(ProgressSuccessIcon, { decorative: false, title: i18nCompleteLabel })),
      /* @__PURE__ */ React5.createElement(Box3, { textAlign: "left" }, children)
    ));
  }
);
ProgressStepComplete.displayName = "ProgressStepComplete";

// src/ProgressStepIncomplete.tsx
import { Box as Box4, safelySpreadBoxProps as safelySpreadBoxProps3 } from "@twilio-paste/box";
import * as React7 from "react";

// src/icons/ProgressIncompleteIcon.tsx
import { IconWrapper } from "@twilio-paste/icons/esm/helpers/IconWrapper";
import { useUID } from "@twilio-paste/uid-library";
import * as React6 from "react";
var ProgressIncompleteIcon = React6.forwardRef(
  ({ as, display, element = "ICON", size, color, title, decorative }, ref) => {
    const titleId = `ProgressIncompleteIcon-${useUID()}`;
    if (!decorative && title == null) {
      throw new Error("[ProgressIncompleteIcon]: Missing a title for non-decorative icon.");
    }
    return /* @__PURE__ */ React6.createElement(IconWrapper, { as, display, element, size, color, ref }, /* @__PURE__ */ React6.createElement(
      "svg",
      {
        role: "img",
        "aria-hidden": decorative,
        fill: "none",
        height: "100%",
        viewBox: "0 0 20 20",
        width: "100%",
        xmlns: "http://www.w3.org/2000/svg",
        "aria-labelledby": titleId
      },
      title ? /* @__PURE__ */ React6.createElement("title", { id: titleId }, title) : null,
      /* @__PURE__ */ React6.createElement(
        "path",
        {
          fill: "currentColor",
          clipRule: "evenodd",
          d: "M9.993 2h.014a1.23 1.23 0 01-.002 2.462h-.01A1.23 1.23 0 019.993 2zm2.321 1.518a1.23 1.23 0 011.681-.45l.013.007a1.23 1.23 0 01-1.235 2.13l-.008-.005a1.23 1.23 0 01-.45-1.682zm-4.628 0a1.23 1.23 0 01-.45 1.682l-.009.004a1.23 1.23 0 01-1.235-2.13l.012-.006a1.23 1.23 0 011.682.45zm7.557 2.027a1.23 1.23 0 011.682.447l.007.012A1.23 1.23 0 1114.8 7.235l-.004-.008a1.23 1.23 0 01.447-1.682zm-10.486 0a1.23 1.23 0 01.447 1.682l-.004.008a1.23 1.23 0 01-2.132-1.23l.007-.013a1.23 1.23 0 011.682-.447zm12.011 3.218c.68 0 1.231.55 1.232 1.23v.014a1.23 1.23 0 01-2.461-.002v-.01c-.001-.68.55-1.231 1.23-1.232zm-13.536 0c.68 0 1.23.552 1.23 1.232v.01A1.23 1.23 0 012 10.007v-.014c0-.68.552-1.23 1.232-1.23zm13.25 3.551c.588.34.79 1.093.45 1.681l-.007.013a1.23 1.23 0 01-2.13-1.235l.005-.008a1.23 1.23 0 011.682-.45zm-12.964 0a1.23 1.23 0 011.682.45l.004.009a1.23 1.23 0 01-2.13 1.235l-.006-.012a1.23 1.23 0 01.45-1.682zm2.027 2.93a1.23 1.23 0 011.682-.448l.008.004a1.23 1.23 0 01-1.23 2.132l-.013-.007a1.23 1.23 0 01-.447-1.682zm8.91 0a1.23 1.23 0 01-.447 1.681l-.012.007a1.23 1.23 0 11-1.231-2.132l.008-.004a1.23 1.23 0 011.682.447zm-5.692 1.524c0-.68.552-1.23 1.232-1.23h.01A1.23 1.23 0 1110.007 18h-.014a1.23 1.23 0 01-1.23-1.232z",
          fillRule: "evenodd"
        }
      )
    ));
  }
);
ProgressIncompleteIcon.displayName = "ProgressIncompleteIcon";

// src/ProgressStepIncomplete.tsx
var ProgressStepIncomplete = React7.forwardRef(
  ({
    element = "PROGRESS_STEP_INCOMPLETE",
    as = "div",
    disabled = false,
    children,
    i18nIncompleteLabel = "Incomplete",
    ...props
  }, ref) => {
    return /* @__PURE__ */ React7.createElement("div", { role: "listitem" }, /* @__PURE__ */ React7.createElement(
      Box4,
      {
        ...safelySpreadBoxProps3(props),
        element,
        as,
        type: as === "button" ? "button" : void 0,
        disabled,
        ref,
        display: "flex",
        columnGap: "space30",
        border: "none",
        background: "none",
        padding: "space0",
        margin: "space0",
        fontFamily: "fontFamilyText",
        fontSize: "fontSize20",
        lineHeight: "lineHeight20",
        fontWeight: as === "button" ? "fontWeightSemibold" : "fontWeightMedium",
        outline: "none",
        borderRadius: "borderRadius20",
        cursor: as !== "div" ? "pointer" : "default",
        color: disabled ? "colorTextWeaker" : "colorTextWeak",
        _hover: as !== "div" ? { textDecoration: "none", color: "colorTextPrimary" } : void 0,
        _focus: as !== "div" ? { boxShadow: "shadowFocus" } : void 0,
        _disabled: { textDecoration: "none", color: "colorTextWeaker", cursor: "not-allowed" }
      },
      /* @__PURE__ */ React7.createElement(Box4, { display: "flex", flexDirection: "column", alignItems: "center" }, /* @__PURE__ */ React7.createElement(ProgressIncompleteIcon, { decorative: false, title: i18nIncompleteLabel })),
      /* @__PURE__ */ React7.createElement(Box4, { textAlign: "left" }, children)
    ));
  }
);
ProgressStepIncomplete.displayName = "ProgressStepIncomplete";

// src/ProgressStepCurrent.tsx
import { Box as Box5, safelySpreadBoxProps as safelySpreadBoxProps4 } from "@twilio-paste/box";
import * as React9 from "react";

// src/icons/ProgressCurrentIcon.tsx
import { IconWrapper as IconWrapper2 } from "@twilio-paste/icons/esm/helpers/IconWrapper";
import { useUID as useUID2 } from "@twilio-paste/uid-library";
import * as React8 from "react";
var ProgressCurrentIcon = React8.forwardRef(
  ({ as, display, element = "ICON", size, color, title, decorative }, ref) => {
    const titleId = `ProgressCurrentIcon-${useUID2()}`;
    if (!decorative && title == null) {
      throw new Error("[ProgressCurrentIcon]: Missing a title for non-decorative icon.");
    }
    return /* @__PURE__ */ React8.createElement(IconWrapper2, { as, display, element, size, color, ref }, /* @__PURE__ */ React8.createElement(
      "svg",
      {
        role: "img",
        "aria-hidden": decorative,
        fill: "none",
        height: "100%",
        viewBox: "0 0 20 20",
        width: "100%",
        xmlns: "http://www.w3.org/2000/svg",
        "aria-labelledby": titleId
      },
      title ? /* @__PURE__ */ React8.createElement("title", { id: titleId }, title) : null,
      /* @__PURE__ */ React8.createElement(
        "path",
        {
          fill: "currentColor",
          clipRule: "evenodd",
          d: "M10 16a6 6 0 100-12 6 6 0 000 12zm0 2a8 8 0 100-16 8 8 0 000 16z",
          fillRule: "evenodd"
        }
      )
    ));
  }
);
ProgressCurrentIcon.displayName = "ProgressCurrentIcon";

// src/ProgressStepCurrent.tsx
var ProgressStepCurrent = React9.forwardRef(
  ({ element = "PROGRESS_STEP_CURRENT", as = "div", children, i18nCurrentLabel = "Current", ...props }, ref) => {
    return /* @__PURE__ */ React9.createElement("div", { role: "listitem" }, /* @__PURE__ */ React9.createElement(
      Box5,
      {
        ...safelySpreadBoxProps4(props),
        element,
        as,
        type: as === "button" ? "button" : void 0,
        ref,
        "aria-current": "step",
        display: "flex",
        columnGap: "space30",
        border: "none",
        background: "none",
        padding: "space0",
        margin: "space0",
        fontFamily: "fontFamilyText",
        fontSize: "fontSize20",
        lineHeight: "lineHeight20",
        fontWeight: as === "button" ? "fontWeightSemibold" : "fontWeightMedium",
        outline: "none",
        borderRadius: "borderRadius20",
        cursor: as !== "div" ? "pointer" : "default",
        color: "colorTextPrimary",
        _hover: as !== "div" ? { textDecoration: "none", color: "colorTextPrimaryStrongest" } : void 0,
        _focus: as !== "div" ? { boxShadow: "shadowFocus" } : void 0
      },
      /* @__PURE__ */ React9.createElement(Box5, { display: "flex", flexDirection: "column", alignItems: "center" }, /* @__PURE__ */ React9.createElement(ProgressCurrentIcon, { decorative: false, title: i18nCurrentLabel })),
      /* @__PURE__ */ React9.createElement(Box5, { textAlign: "left" }, children)
    ));
  }
);
ProgressStepCurrent.displayName = "ProgressStepCurrent";

// src/ProgressStepError.tsx
import { Box as Box6, safelySpreadBoxProps as safelySpreadBoxProps5 } from "@twilio-paste/box";
import * as React11 from "react";

// src/icons/ProgressErrorIcon.tsx
import { IconWrapper as IconWrapper3 } from "@twilio-paste/icons/esm/helpers/IconWrapper";
import { useUID as useUID3 } from "@twilio-paste/uid-library";
import * as React10 from "react";
var ProgressErrorIcon = React10.forwardRef(
  ({ as, display, element = "ICON", size, color, title, decorative }, ref) => {
    const titleId = `ProgressErrorIcon-${useUID3()}`;
    if (!decorative && title == null) {
      throw new Error("[ProgressErrorIcon]: Missing a title for non-decorative icon.");
    }
    return /* @__PURE__ */ React10.createElement(IconWrapper3, { as, display, element, size, color, ref }, /* @__PURE__ */ React10.createElement(
      "svg",
      {
        role: "img",
        "aria-hidden": decorative,
        fill: "none",
        height: "100%",
        viewBox: "0 0 20 20",
        width: "100%",
        xmlns: "http://www.w3.org/2000/svg",
        "aria-labelledby": titleId
      },
      title ? /* @__PURE__ */ React10.createElement("title", { id: titleId }, title) : null,
      /* @__PURE__ */ React10.createElement(
        "path",
        {
          fill: "currentColor",
          clipRule: "evenodd",
          d: "M10 18a8 8 0 100-16 8 8 0 000 16zM9.985 5h.03c.916.011 1.609.889 1.466 1.866l-.641 3.357c-.061.444-.418.777-.835.777h-.01c-.418 0-.774-.333-.835-.777l-.642-3.357C8.376 5.889 9.078 5 9.985 5zM10 15.5a1.5 1.5 0 100-3 1.5 1.5 0 000 3z",
          fillRule: "evenodd"
        }
      )
    ));
  }
);
ProgressErrorIcon.displayName = "ProgressErrorIcon";

// src/ProgressStepError.tsx
var ProgressStepError = React11.forwardRef(
  ({ element = "PROGRESS_STEP_ERROR", as = "div", children, i18nErrorLabel = "Error", ...props }, ref) => {
    return /* @__PURE__ */ React11.createElement("div", { role: "listitem" }, /* @__PURE__ */ React11.createElement(
      Box6,
      {
        ...safelySpreadBoxProps5(props),
        element,
        as,
        type: as === "button" ? "button" : void 0,
        ref,
        display: "flex",
        columnGap: "space30",
        border: "none",
        background: "none",
        padding: "space0",
        margin: "space0",
        fontFamily: "fontFamilyText",
        fontSize: "fontSize20",
        lineHeight: "lineHeight20",
        fontWeight: as === "button" ? "fontWeightSemibold" : "fontWeightMedium",
        outline: "none",
        borderRadius: "borderRadius20",
        cursor: as !== "div" ? "pointer" : "default",
        color: "colorTextError",
        _hover: as !== "div" ? { textDecoration: "none", color: "colorTextErrorStrongest" } : void 0,
        _focus: as !== "div" ? { boxShadow: "shadowFocus" } : void 0
      },
      /* @__PURE__ */ React11.createElement(Box6, { display: "flex", flexDirection: "column", alignItems: "center" }, /* @__PURE__ */ React11.createElement(ProgressErrorIcon, { decorative: false, title: i18nErrorLabel })),
      /* @__PURE__ */ React11.createElement(Box6, { textAlign: "left" }, children)
    ));
  }
);
ProgressStepError.displayName = "ProgressStepError";
export {
  ProgressStepComplete,
  ProgressStepContent,
  ProgressStepCurrent,
  ProgressStepError,
  ProgressStepIncomplete,
  ProgressStepSeparator,
  ProgressSteps
};
