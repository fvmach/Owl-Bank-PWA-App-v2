var d=Object.defineProperty,B=Object.defineProperties;var z=Object.getOwnPropertyDescriptors;var s=Object.getOwnPropertySymbols;var a=Object.prototype.hasOwnProperty,l=Object.prototype.propertyIsEnumerable;var i=(o,e,r)=>e in o?d(o,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):o[e]=r,n=(o,e)=>{for(var r in e||(e={}))a.call(e,r)&&i(o,r,e[r]);if(s)for(var r of s(e))l.call(e,r)&&i(o,r,e[r]);return o},m=(o,e)=>B(o,z(e));var c=(o,e)=>{var r={};for(var p in o)a.call(o,p)&&e.indexOf(p)<0&&(r[p]=o[p]);if(o!=null&&s)for(var p of s(o))e.indexOf(p)<0&&l.call(o,p)&&(r[p]=o[p]);return r};import{Box as H,safelySpreadBoxProps as w}from"@twilio-paste/box";import*as x from"react";const P=x.forwardRef((S,I)=>{var t=S,{as:o="span",color:e="currentColor",display:r="block",element:p="ICON",size:f="sizeIcon30"}=t,y=c(t,["as","color","display","element","size"]);return x.createElement(H,m(n({},w(y)),{as:o,element:p,lineHeight:"lineHeight0",display:r,color:e,size:f,ref:I,flexShrink:0}))});P.displayName="IconWrapper";export{P as IconWrapper};
