"use strict";var __create=Object.create;var __defProp=Object.defineProperty;var __getOwnPropDesc=Object.getOwnPropertyDescriptor;var __getOwnPropNames=Object.getOwnPropertyNames;var __getProtoOf=Object.getPrototypeOf,__hasOwnProp=Object.prototype.hasOwnProperty;var __export=(target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:!0})},__copyProps=(to,from,except,desc)=>{if(from&&typeof from=="object"||typeof from=="function")for(let key of __getOwnPropNames(from))!__hasOwnProp.call(to,key)&&key!==except&&__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});return to};var __toESM=(mod,isNodeMode,target)=>(target=mod!=null?__create(__getProtoOf(mod)):{},__copyProps(isNodeMode||!mod||!mod.__esModule?__defProp(target,"default",{value:mod,enumerable:!0}):target,mod)),__toCommonJS=mod=>__copyProps(__defProp({},"__esModule",{value:!0}),mod);var src_exports={};__export(src_exports,{RadioButton:()=>RadioButton,RadioButtonGroup:()=>RadioButtonGroup});module.exports=__toCommonJS(src_exports);var import_box2=require("@twilio-paste/box"),import_button2=require("@twilio-paste/button"),import_uid_library=require("@twilio-paste/uid-library"),React3=__toESM(require("react"));var import_box=require("@twilio-paste/box"),React=__toESM(require("react")),HiddenRadio=React.forwardRef((props,ref)=>React.createElement(import_box.Box,{as:"input",type:"radio",size:"size0",border:"none",overflow:"hidden",padding:"space0",margin:"space0",whiteSpace:"nowrap",textTransform:"none",position:"absolute",clip:"rect(0 0 0 0)",ref,...props}));HiddenRadio.displayName="HiddenRadio";var React2=__toESM(require("react")),RadioButtonContext=React2.createContext({name:"",value:"",disabled:!1,hasError:!1,onChange:()=>{},attached:!1});var import_button=require("@twilio-paste/button"),import_styling_library=require("@twilio-paste/styling-library"),StyledRadioButtonLabel=import_styling_library.styled.label((0,import_styling_library.css)({"& > input[type=radio]:checked + span":{...import_button.ButtonToggleStyles._pressed,zIndex:1},"& > input[type=radio]:checked + span:hover":{...import_button.ButtonToggleStyles._pressed_hover,zIndex:2},"& > input[type=radio]:checked:focus + span":{...import_button.ButtonToggleStyles._pressed_focus,zIndex:3},"& > input[type=radio][aria-invalid=true]:checked + span":{...import_button.DestructiveSecondaryButtonToggleStyles._pressed,zIndex:1},"& > input[type=radio][aria-invalid=true]:checked + span:hover":{...import_button.DestructiveSecondaryButtonToggleStyles._pressed_hover,zIndex:2},"& > input[type=radio][aria-invalid=true]:checked:focus + span":{...import_button.DestructiveSecondaryButtonToggleStyles._pressed_focus,zIndex:3},"& > input[type=radio]:checked:disabled + span":{...import_button.ButtonToggleStyles._pressed_disabled,zIndex:0},"& > input[type=radio][aria-invalid=true]:checked:disabled + span:hover":{...import_button.DestructiveSecondaryButtonToggleStyles._pressed_disabled,zIndex:0},"& > input[type=radio]:disabled + span":{...import_button.ButtonToggleStyles._disabled,zIndex:0},"& > input[type=radio][aria-invalid=true]:disabled + span:hover":{...import_button.DestructiveSecondaryButtonToggleStyles._disabled,zIndex:0}}));var RadioButton=React3.forwardRef(({id,name,element="RADIO_BUTTON",value,checked,defaultChecked,disabled,hasError,onChange,children,...props},ref)=>{if(checked!=null&&defaultChecked!=null)throw new Error("[Paste RadioButton] Do not provide both 'defaultChecked' and 'checked' to RadioButton at the same time. Please consider if you want this component to be controlled or uncontrolled.");let radioGroupContext=React3.useContext(RadioButtonContext),radioId=id||(0,import_uid_library.useUID)(),isControlled=React3.useMemo(()=>checked!==void 0||radioGroupContext.value!=="",[]),handleChange=React3.useCallback(event=>{onChange?onChange(event):radioGroupContext.onChange(event)},[onChange,radioGroupContext.onChange]),state={name:name??radioGroupContext.name,disabled:disabled??radioGroupContext.disabled,hasError:hasError??radioGroupContext.hasError};return isControlled?radioGroupContext.value!==""?state.checked=radioGroupContext.value===value:state.checked=checked:state.defaultChecked=defaultChecked,React3.createElement(import_box2.Box,{element,as:StyledRadioButtonLabel},React3.createElement(HiddenRadio,{...(0,import_box2.safelySpreadBoxProps)(props),...state,value,"aria-invalid":state.hasError,onChange:handleChange,id:radioId,ref}),React3.createElement(import_button2.Button,{variant:state.hasError?"destructive_secondary":"secondary",as:"span",disabled:state.disabled},children))});RadioButton.displayName="RadioButton";var import_box3=require("@twilio-paste/box"),import_help_text=require("@twilio-paste/help-text"),import_label=require("@twilio-paste/label"),React4=__toESM(require("react"));var import_styling_library2=require("@twilio-paste/styling-library"),AttachedRadioButtonGroupWrapper=import_styling_library2.styled.span((0,import_styling_library2.css)({"& > label:focus-within":{zIndex:2,position:"relative"},"& > label:first-of-type":{"& > span":{borderTopRightRadius:0,borderBottomRightRadius:0}},"& > label:not(:first-of-type):not(:last-of-type)":{"& > span":{borderRadius:0,marginLeft:"1px"}},"& > label:last-of-type":{"& > span":{marginLeft:"1px",borderTopLeftRadius:0,borderBottomLeftRadius:0}}})),UnattachedRadioButtonGroupWrapper=import_styling_library2.styled.span((0,import_styling_library2.css)({"& > label:first-of-type":{marginLeft:"space0"},"& > label:not(:first-of-type)":{marginLeft:"space40"}}));var RadioButtonGroup=React4.forwardRef(({name,element="RADIO_BUTTON_GROUP",value,onChange,disabled=!1,errorText,children,i18nRequiredLabel="(required)",helpText,legend,required,attached=!1,...props},ref)=>{let onChangeHandler=React4.useCallback(event=>{onChange?.(event.target.value)},[onChange]),contextValue=React4.useMemo(()=>({name,value:value||"",disabled,hasError:errorText!=null,onChange:onChangeHandler}),[name,value,disabled,errorText,onChangeHandler]);return React4.createElement(RadioButtonContext.Provider,{value:contextValue},React4.createElement(import_box3.Box,{as:"fieldset",element,margin:"space0",padding:"space0",border:"none",display:"flex",flexDirection:"column",ref,...(0,import_box3.safelySpreadBoxProps)(props)},React4.createElement(import_label.Label,{as:"legend",element:"LEGEND",htmlFor:void 0,required,marginBottom:"space0",disabled,i18nRequiredLabel},legend),helpText&&React4.createElement(import_help_text.HelpText,{variant:"default",marginTop:"space0"},helpText),React4.createElement(import_box3.Box,{as:attached?AttachedRadioButtonGroupWrapper:UnattachedRadioButtonGroupWrapper,marginTop:"space20"},children),errorText&&React4.createElement(import_help_text.HelpText,{variant:"error"},errorText)))});RadioButtonGroup.displayName="RadioButtonGroup";
