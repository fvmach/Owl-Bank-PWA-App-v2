import type { InlineControlGroupProps } from "@twilio-paste/inline-control-group";
import * as React from "react";
export interface RadioButtonGroupProps extends Omit<InlineControlGroupProps, "fieldStyleProps"> {
    /**
     * Overrides the default element name to apply unique styles with the Customization Provider.
     *
     * @default "RADIO_BUTTON_GROUP"
     * @type {InlineControlGroupProps["element"]}
     * @memberof RadioButtonGroupProps
     */
    element?: InlineControlGroupProps["element"];
    /**
     * Name for the Radio Button Group
     *
     * @type {string}
     * @memberof RadioButtonGroupProps
     */
    name: string;
    /**
     * Pass a function for the onChange handler
     *
     * @memberof RadioButtonGroupProps
     */
    onChange?: (value: string) => void;
    /**
     * Value for the Radio Button Group
     *
     * @type {string}
     * @memberof RadioButtonGroupProps
     */
    value?: string;
    /**
     * Overrides the default string marking the group as required
     *
     * @default "(required)"
     * @type {string}
     * @memberof RadioButtonGroupProps
     */
    i18nRequiredLabel?: string;
    /**
     * If the group of buttons are visually attached
     *
     * @default false
     * @type {boolean}
     * @memberof RadioButtonGroupProps
     */
    attached?: boolean;
}
declare const RadioButtonGroup: React.ForwardRefExoticComponent<RadioButtonGroupProps & React.RefAttributes<HTMLFieldSetElement>>;
export { RadioButtonGroup };
//# sourceMappingURL=RadioButtonGroup.d.ts.map