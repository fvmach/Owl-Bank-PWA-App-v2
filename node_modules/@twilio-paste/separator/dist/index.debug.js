"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.tsx
var src_exports = {};
__export(src_exports, {
  Separator: () => Separator
});
module.exports = __toCommonJS(src_exports);

// src/Separator.tsx
var import_box = require("@twilio-paste/box");
var React = __toESM(require("react"));
var Separator = React.forwardRef(
  ({ element = "SEPARATOR", orientation, horizontalSpacing, verticalSpacing, ...props }, ref) => {
    return /* @__PURE__ */ React.createElement(
      import_box.Box,
      {
        ...(0, import_box.safelySpreadBoxProps)(props),
        "aria-orientation": orientation,
        element,
        margin: "space0",
        marginBottom: verticalSpacing,
        marginLeft: horizontalSpacing,
        marginRight: horizontalSpacing,
        marginTop: verticalSpacing,
        as: "hr",
        borderWidth: "borderWidth0",
        borderColor: "colorBorderWeaker",
        borderStyle: "solid",
        borderBottomWidth: orientation === "horizontal" ? "borderWidth10" : null,
        borderLeftWidth: orientation === "vertical" ? "borderWidth10" : null,
        width: orientation === "horizontal" ? "auto" : null,
        height: orientation === "vertical" ? "auto" : null,
        ref
      }
    );
  }
);
Separator.displayName = "Separator";
