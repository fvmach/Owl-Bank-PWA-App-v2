import{InlineControlGroup}from"@twilio-paste/inline-control-group";import*as React2 from"react";import*as React from"react";var VisualPickerRadioContext=React.createContext({groupIsDisabled:!1,name:"",groupHasError:!1,onChange:()=>{},value:"",orientation:"vertical"}),VisualPickerCheckboxContext=React.createContext({groupIsDisabled:!1,name:"",groupHasError:!1,orientation:"vertical"});var VisualPickerRadioGroup=React2.forwardRef(({orientation="vertical",children,disabled=!1,legend,onChange,name,errorText,value,element="VISUAL_PICKER_RADIO_GROUP",i18nRequiredLabel="(required)",...props},ref)=>{let onChangeHandler=React2.useCallback(event=>{onChange(event.target.value)},[onChange]),contextValue=React2.useMemo(()=>({name,value:value||"",groupIsDisabled:disabled,groupHasError:errorText!=null,onChange:onChangeHandler,orientation}),[name,value,disabled,errorText,onChangeHandler,orientation]);return React2.createElement(VisualPickerRadioContext.Provider,{value:contextValue},React2.createElement(InlineControlGroup,{...props,legend,ref,name,element,errorText,orientation,disabled,i18nRequiredLabel,fieldStyleProps:{marginTop:orientation==="horizontal"?"space40":"space30",marginRight:orientation==="horizontal"?"space30":void 0}},children))});VisualPickerRadioGroup.displayName="VisualPickerRadioGroup";import{BaseRadioCheckboxControl,BaseRadioCheckboxLabel}from"@twilio-paste/base-radio-checkbox";import{Box}from"@twilio-paste/box";import{HiddenRadio}from"@twilio-paste/radio-group";import{ScreenReaderOnly}from"@twilio-paste/screen-reader-only";import{useUID}from"@twilio-paste/uid-library";import{useMergeRefs}from"@twilio-paste/utils";import*as React3 from"react";var VisualPickerRadio=React3.forwardRef(({id,name,element="VISUAL_PICKER_RADIO",value,disabled,hasError,onChange,children,labelText,...props},ref)=>{let[isHovering,setIsHovering]=React3.useState(!1),visualPickerRadioGroupContext=React3.useContext(VisualPickerRadioContext),helpTextId=useUID(),radioId=id||useUID(),labelId=useUID(),handleChange=React3.useCallback(event=>{onChange!=null?onChange(event):visualPickerRadioGroupContext.onChange(event)},[onChange,visualPickerRadioGroupContext.onChange]),state={name:visualPickerRadioGroupContext.name||name||visualPickerRadioGroupContext.name,disabled:disabled??visualPickerRadioGroupContext.groupIsDisabled,hasError:hasError??visualPickerRadioGroupContext.groupHasError,checked:visualPickerRadioGroupContext.value===value},{groupHasError,groupIsDisabled}=visualPickerRadioGroupContext,internalRef=React3.useRef(),mergedRef=useMergeRefs(internalRef,ref),pickerBorderColor="colorBorderWeak";return disabled||groupIsDisabled?pickerBorderColor="colorBorderWeak":state.checked?state.checked&&(hasError||groupHasError?pickerBorderColor="colorBorderError":pickerBorderColor="colorBorderPrimary"):(hasError||groupHasError)&&!isHovering?pickerBorderColor="colorBorderError":(hasError||groupHasError)&&isHovering?pickerBorderColor="colorBorderErrorStrong":isHovering&&(pickerBorderColor="colorBorderPrimary"),React3.createElement(Box,{element,position:"relative",display:"inline-flex",alignItems:visualPickerRadioGroupContext.orientation==="vertical"?"center":"flex-start",flexDirection:"row",height:"100%",width:"100%",backgroundColor:disabled||groupIsDisabled?"colorBackgroundWeak":void 0,borderStyle:"solid",borderColor:pickerBorderColor,borderWidth:"borderWidth10",borderRadius:"borderRadius30",padding:"space50",onMouseEnter:()=>setIsHovering(!0),onMouseLeave:()=>setIsHovering(!1),onClick:e=>{internalRef.current?.click(),internalRef.current?.focus(),e.stopPropagation()},_hover:{cursor:disabled||groupIsDisabled?"not-allowed":"pointer"}},React3.createElement(HiddenRadio,{...props,...state,value,"aria-describedby":helpTextId,"aria-invalid":state.hasError,"aria-labelledby":labelId,onChange:e=>{handleChange(e)},id:radioId,ref:mergedRef}),React3.createElement(BaseRadioCheckboxLabel,{disabled:state.disabled,htmlFor:radioId,id:labelId},React3.createElement(ScreenReaderOnly,null,labelText),React3.createElement(BaseRadioCheckboxControl,{onClick:e=>e.stopPropagation(),element:`${element}_CONTROL`,borderRadius:"borderRadiusCircle",disabled:state.disabled,type:"radio",applyHoverStyles:isHovering,_checkedAndDisabledSibling:{color:"colorTextWeaker"}},React3.createElement(Box,{as:"span",element:`${element}_CONTROL_CIRCLE`,lineHeight:"lineHeight0",display:state.checked?"block":"none",color:"inherit",size:"sizeIcon10"},React3.createElement("svg",{role:"img","aria-hidden":!0,width:"100%",height:"100%",viewBox:"0 0 16 16",fill:"none"},React3.createElement("circle",{fill:"currentColor",cx:8,cy:8,r:3}))))),React3.createElement(Box,{element:`${element}_CONTENT`,id:helpTextId,paddingLeft:"space40",width:"100%"},children))});VisualPickerRadio.displayName="VisualPickerRadio";import{InlineControlGroup as InlineControlGroup2}from"@twilio-paste/inline-control-group";import*as React4 from"react";var VisualPickerCheckboxGroup=React4.forwardRef(({orientation="vertical",children,element="VISUAL_PICKER_CHECKBOX_GROUP",disabled=!1,errorText,name,i18nRequiredLabel="(required)",...props},ref)=>{let contextValue=React4.useMemo(()=>({name,groupIsDisabled:disabled,groupHasError:errorText!=null,orientation}),[name,disabled,errorText,orientation]);return React4.createElement(VisualPickerCheckboxContext.Provider,{value:contextValue},React4.createElement(InlineControlGroup2,{...props,ref,name,element,errorText,disabled,orientation,i18nRequiredLabel,fieldStyleProps:{marginTop:orientation==="horizontal"?"space40":"space30",marginRight:orientation==="horizontal"?"space30":void 0}},children))});VisualPickerCheckboxGroup.displayName="VisualPickerCheckboxGroup";import{BaseRadioCheckboxControl as BaseRadioCheckboxControl2,BaseRadioCheckboxLabel as BaseRadioCheckboxLabel2}from"@twilio-paste/base-radio-checkbox";import{Box as Box2,safelySpreadBoxProps}from"@twilio-paste/box";import{CheckboxIcon,HiddenCheckbox}from"@twilio-paste/checkbox";import{ScreenReaderOnly as ScreenReaderOnly2}from"@twilio-paste/screen-reader-only";import{useUID as useUID2}from"@twilio-paste/uid-library";import{useMergeRefs as useMergeRefs2}from"@twilio-paste/utils";import*as React5 from"react";var VisualPickerCheckbox=React5.forwardRef(({checked,element="VISUAL_PICKER_CHECKBOX",children,id,indeterminate,labelText,onChange,...props},ref)=>{let[isHovering,setIsHovering]=React5.useState(!1),visualPickerCheckboxGroupContext=React5.useContext(VisualPickerCheckboxContext),helpTextId=useUID2(),labelId=useUID2(),checkboxId=id||useUID2(),disabled=props.disabled!=null?props.disabled:visualPickerCheckboxGroupContext.groupIsDisabled,name=visualPickerCheckboxGroupContext.name||props.name||visualPickerCheckboxGroupContext.name,hasError=props.hasError!=null?props.hasError:visualPickerCheckboxGroupContext.groupHasError,{groupHasError,groupIsDisabled}=visualPickerCheckboxGroupContext,internalRef=React5.useRef(),mergedRef=useMergeRefs2(internalRef,ref),pickerBorderColor="colorBorderWeak";return disabled||groupIsDisabled?pickerBorderColor="colorBorderWeak":hasError||groupHasError?pickerBorderColor="colorBorderError":checked&&(pickerBorderColor="colorBorderPrimary"),React5.createElement(Box2,{element,position:"relative",display:"inline-flex",alignItems:visualPickerCheckboxGroupContext.orientation==="vertical"?"center":"flex-start",flexDirection:"row",height:"100%",width:"100%",backgroundColor:disabled||groupIsDisabled?"colorBackgroundWeak":void 0,borderStyle:"solid",borderColor:pickerBorderColor,borderWidth:"borderWidth10",borderRadius:"borderRadius30",padding:"space50",onMouseEnter:()=>setIsHovering(!0),onMouseLeave:()=>setIsHovering(!1),onClick:e=>{internalRef.current?.click(),internalRef.current?.focus(),e.stopPropagation()},_hover:disabled||groupIsDisabled?{cursor:"not-allowed"}:{cursor:"pointer",borderColor:hasError||groupHasError?"colorBorderErrorStronger":"colorBorderPrimaryStrong"}},React5.createElement(HiddenCheckbox,{...safelySpreadBoxProps(props),checked,disabled,name,onChange:e=>{onChange(e)},"aria-describedby":helpTextId,"aria-checked":indeterminate?"mixed":checked,"aria-labelledby":labelId,"aria-invalid":hasError,id:checkboxId,ref:mergedRef}),React5.createElement(BaseRadioCheckboxLabel2,{disabled,htmlFor:checkboxId,id:labelId},React5.createElement(ScreenReaderOnly2,null,labelText),React5.createElement(BaseRadioCheckboxControl2,{onClick:e=>e.preventDefault(),borderRadius:"borderRadius20",element:`${element}_CONTROL`,disabled,position:"relative",type:"checkbox",applyHoverStyles:isHovering},React5.createElement(CheckboxIcon,{element:`${element}_ICON`,checked,indeterminate}))),React5.createElement(Box2,{element:`${element}_CONTENT`,id:helpTextId,paddingLeft:"space40",width:"100%"},children))});VisualPickerCheckbox.displayName="VisualPickerCheckbox";export{VisualPickerCheckbox,VisualPickerCheckboxGroup,VisualPickerRadio,VisualPickerRadioGroup};
