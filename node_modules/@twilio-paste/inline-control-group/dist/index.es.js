import{Box,safelySpreadBoxProps}from"@twilio-paste/box";import{HelpText}from"@twilio-paste/help-text";import{Label}from"@twilio-paste/label";import*as React from"react";var InlineControlGroup=React.forwardRef(({children,disabled,element="INLINE_CONTROL_GROUP",errorText,helpText,legend,orientation="vertical",required,i18nRequiredLabel,fieldStyleProps,...props},ref)=>{let isVisualPicker=Boolean(fieldStyleProps);return React.createElement(Box,{...safelySpreadBoxProps(props),as:"fieldset",element,margin:"space0",padding:"space0",minWidth:"0px",borderWidth:"borderWidth0",ref},React.createElement(Label,{as:"legend",element:"LEGEND",htmlFor:void 0,required,marginBottom:"space0",disabled,i18nRequiredLabel},legend),helpText&&React.createElement(HelpText,{marginTop:"space0"},helpText),React.createElement(Box,{element:`${element}_SET`,marginRight:isVisualPicker?void 0:"space20"},React.createElement(Box,{display:isVisualPicker&&orientation==="horizontal"?"inline-flex":"block",width:isVisualPicker?"100%":void 0},React.Children.map(children,(child,index)=>React.createElement(Box,{element:`${element}_FIELD`,display:orientation==="horizontal"?"inline-block":"block",flexBasis:isVisualPicker?"50%":void 0,marginTop:fieldStyleProps?.marginTop?index===0&&orientation==="vertical"?"space40":fieldStyleProps?.marginTop:"space40",marginRight:orientation==="horizontal"&&!isVisualPicker?"space70":null,marginLeft:isVisualPicker&&orientation==="horizontal"?index===0?"space0":"space30":"space0"},child))),errorText&&React.createElement(Box,{element:`${element}_ERROR_TEXT_WRAPPER`,marginTop:"space40"},React.createElement(HelpText,{variant:"error"},errorText))))});InlineControlGroup.displayName="InlineControlGroup";export{InlineControlGroup};
