"use strict";var __create=Object.create;var __defProp=Object.defineProperty;var __getOwnPropDesc=Object.getOwnPropertyDescriptor;var __getOwnPropNames=Object.getOwnPropertyNames;var __getProtoOf=Object.getPrototypeOf,__hasOwnProp=Object.prototype.hasOwnProperty;var __export=(target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:!0})},__copyProps=(to,from,except,desc)=>{if(from&&typeof from=="object"||typeof from=="function")for(let key of __getOwnPropNames(from))!__hasOwnProp.call(to,key)&&key!==except&&__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});return to};var __toESM=(mod,isNodeMode,target)=>(target=mod!=null?__create(__getProtoOf(mod)):{},__copyProps(isNodeMode||!mod||!mod.__esModule?__defProp(target,"default",{value:mod,enumerable:!0}):target,mod)),__toCommonJS=mod=>__copyProps(__defProp({},"__esModule",{value:!0}),mod);var src_exports={};__export(src_exports,{ProgressBar:()=>ProgressBar,ProgressBarLabel:()=>ProgressBarLabel});module.exports=__toCommonJS(src_exports);var import_animation_library=require("@twilio-paste/animation-library"),import_box=require("@twilio-paste/box"),import_react_spectrum_library=require("@twilio-paste/react-spectrum-library"),import_skeleton_loader=require("@twilio-paste/skeleton-loader"),React=__toESM(require("react"));var LABEL_SUFFIX="PROGRESS_BAR_LABEL";var AnimatedBox=(0,import_animation_library.animated)(import_box.Box),ProgressBar=React.forwardRef((props,ref)=>{let{element="PROGRESS_BAR",id,value=0,maxValue=100,disabled=!1,hasError=!1,isIndeterminate=!1}=props,labelledBy=props["aria-labelledby"];labelledBy==null&&props["aria-label"]==null&&id!=null&&(labelledBy=`${id}${LABEL_SUFFIX}`);let{progressBarProps}=(0,import_react_spectrum_library.useProgressBar)({...props,"aria-labelledby":labelledBy}),springConfig=React.useMemo(()=>{if(isIndeterminate)return{};let clampedValue=Math.min(Math.max(value,0),maxValue);return{width:`${Math.round(clampedValue/maxValue*100)}%`,config:{tension:280,friction:60}}},[isIndeterminate,value,maxValue]),style=(0,import_animation_library.useSpring)(springConfig),barColor="colorBackgroundPrimary";return hasError?barColor="colorBackgroundError":disabled&&(barColor="colorBackgroundStronger"),React.createElement(import_box.Box,{...progressBarProps,ref,element,id,"aria-labelledby":labelledBy,height:"8px",width:"100%",backgroundColor:disabled?"colorBackground":"colorBackgroundStrong",borderRadius:"borderRadiusPill",position:"relative",overflow:"hidden"},isIndeterminate?React.createElement(import_skeleton_loader.SkeletonLoader,null):React.createElement(AnimatedBox,{style,element:`${element}_FILL`,position:"absolute",height:"100%",backgroundColor:barColor,borderRadius:"borderRadius30"}))});ProgressBar.displayName="ProgressBar";var import_box2=require("@twilio-paste/box"),import_label=require("@twilio-paste/label"),import_text=require("@twilio-paste/text"),React2=__toESM(require("react"));var ProgressBarLabel=React2.forwardRef(({element="PROGRESS_BAR_LABEL",children,htmlFor,valueLabel,disabled,...labelProps},ref)=>React2.createElement(import_box2.Box,{display:"flex",flexDirection:"row",justifyContent:"space-between",alignItems:"flex-end",element:`${element}_WRAPPER`},React2.createElement(import_label.Label,{...labelProps,as:"div",element,id:`${htmlFor}${LABEL_SUFFIX}`,ref,disabled},children),valueLabel&&React2.createElement(import_text.Text,{as:"span",fontWeight:"fontWeightSemibold",textAlign:"end",marginBottom:"space20",marginLeft:"space20","aria-hidden":"true",element:`${element}_VALUE_LABEL`,color:disabled?"colorTextWeak":void 0},valueLabel)));ProgressBarLabel.displayName="ProgressBarLabel";
