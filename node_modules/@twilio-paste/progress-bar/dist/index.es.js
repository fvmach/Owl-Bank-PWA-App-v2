import{animated,useSpring}from"@twilio-paste/animation-library";import{Box}from"@twilio-paste/box";import{useProgressBar}from"@twilio-paste/react-spectrum-library";import{SkeletonLoader}from"@twilio-paste/skeleton-loader";import*as React from"react";var LABEL_SUFFIX="PROGRESS_BAR_LABEL";var AnimatedBox=animated(Box),ProgressBar=React.forwardRef((props,ref)=>{let{element="PROGRESS_BAR",id,value=0,maxValue=100,disabled=!1,hasError=!1,isIndeterminate=!1}=props,labelledBy=props["aria-labelledby"];labelledBy==null&&props["aria-label"]==null&&id!=null&&(labelledBy=`${id}${LABEL_SUFFIX}`);let{progressBarProps}=useProgressBar({...props,"aria-labelledby":labelledBy}),springConfig=React.useMemo(()=>{if(isIndeterminate)return{};let clampedValue=Math.min(Math.max(value,0),maxValue);return{width:`${Math.round(clampedValue/maxValue*100)}%`,config:{tension:280,friction:60}}},[isIndeterminate,value,maxValue]),style=useSpring(springConfig),barColor="colorBackgroundPrimary";return hasError?barColor="colorBackgroundError":disabled&&(barColor="colorBackgroundStronger"),React.createElement(Box,{...progressBarProps,ref,element,id,"aria-labelledby":labelledBy,height:"8px",width:"100%",backgroundColor:disabled?"colorBackground":"colorBackgroundStrong",borderRadius:"borderRadiusPill",position:"relative",overflow:"hidden"},isIndeterminate?React.createElement(SkeletonLoader,null):React.createElement(AnimatedBox,{style,element:`${element}_FILL`,position:"absolute",height:"100%",backgroundColor:barColor,borderRadius:"borderRadius30"}))});ProgressBar.displayName="ProgressBar";import{Box as Box2}from"@twilio-paste/box";import{Label}from"@twilio-paste/label";import{Text}from"@twilio-paste/text";import*as React2 from"react";var ProgressBarLabel=React2.forwardRef(({element="PROGRESS_BAR_LABEL",children,htmlFor,valueLabel,disabled,...labelProps},ref)=>React2.createElement(Box2,{display:"flex",flexDirection:"row",justifyContent:"space-between",alignItems:"flex-end",element:`${element}_WRAPPER`},React2.createElement(Label,{...labelProps,as:"div",element,id:`${htmlFor}${LABEL_SUFFIX}`,ref,disabled},children),valueLabel&&React2.createElement(Text,{as:"span",fontWeight:"fontWeightSemibold",textAlign:"end",marginBottom:"space20",marginLeft:"space20","aria-hidden":"true",element:`${element}_VALUE_LABEL`,color:disabled?"colorTextWeak":void 0},valueLabel)));ProgressBarLabel.displayName="ProgressBarLabel";export{ProgressBar,ProgressBarLabel};
