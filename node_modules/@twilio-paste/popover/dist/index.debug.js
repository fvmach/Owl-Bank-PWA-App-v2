"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.tsx
var src_exports = {};
__export(src_exports, {
  Popover: () => Popover,
  PopoverBadgeButton: () => PopoverBadgeButton,
  PopoverButton: () => PopoverButton,
  PopoverContainer: () => PopoverContainer,
  PopoverFormPillButton: () => PopoverFormPillButton,
  usePopoverState: () => import_non_modal_dialog_primitive.useNonModalDialogPrimitiveState
});
module.exports = __toCommonJS(src_exports);

// src/PopoverContainer.tsx
var import_non_modal_dialog_primitive = require("@twilio-paste/non-modal-dialog-primitive");
var React2 = __toESM(require("react"));

// src/PopoverContext.tsx
var React = __toESM(require("react"));
var PopoverContext = React.createContext({});

// src/PopoverContainer.tsx
var BasePopoverContainer = ({
  children,
  gutter,
  placement,
  state,
  ...initialState
}) => {
  const popover = state || (0, import_non_modal_dialog_primitive.useNonModalDialogPrimitiveState)({ gutter, modal: true, placement, ...initialState });
  return /* @__PURE__ */ React2.createElement(PopoverContext.Provider, { value: popover }, children);
};
BasePopoverContainer.displayName = "BasePopoverContainer";
var PopoverContainer = React2.memo(BasePopoverContainer);
PopoverContainer.displayName = "PopoverContainer";

// src/Popover.tsx
var import_box = require("@twilio-paste/box");
var import_button = require("@twilio-paste/button");
var import_CloseIcon = require("@twilio-paste/icons/cjs/CloseIcon");
var import_non_modal_dialog_primitive3 = require("@twilio-paste/non-modal-dialog-primitive");
var import_screen_reader_only = require("@twilio-paste/screen-reader-only");
var import_theme2 = require("@twilio-paste/theme");
var React4 = __toESM(require("react"));

// src/PopoverArrow.tsx
var import_non_modal_dialog_primitive2 = require("@twilio-paste/non-modal-dialog-primitive");
var import_theme = require("@twilio-paste/theme");
var React3 = __toESM(require("react"));
var PopoverArrow = (props) => {
  const theme = (0, import_theme.useTheme)();
  return /* @__PURE__ */ React3.createElement(
    import_non_modal_dialog_primitive2.NonModalDialogArrowPrimitive,
    {
      ...props,
      size: theme.fontSizes.fontSize70,
      stroke: theme.borderColors.colorBorderWeaker,
      fill: theme.backgroundColors.colorBackgroundBody
    }
  );
};
PopoverArrow.displayName = "PopoverArrow";

// src/Popover.tsx
var StyledPopover = React4.forwardRef(({ style, width, ...props }, ref) => {
  return /* @__PURE__ */ React4.createElement(
    import_box.Box,
    {
      ...(0, import_box.safelySpreadBoxProps)(props),
      width,
      backgroundColor: "colorBackgroundBody",
      borderStyle: "solid",
      borderWidth: "borderWidth10",
      borderColor: "colorBorderWeaker",
      borderRadius: "borderRadius30",
      boxShadow: "shadowLow",
      maxWidth: "size50",
      zIndex: "zIndex80",
      _focus: { outline: "none" },
      style,
      ref
    }
  );
});
StyledPopover.displayName = "StyledPopover";
var Popover = React4.forwardRef(
  ({ children, element = "POPOVER", i18nDismissLabel = "Close popover", initialFocusRef, ...props }, ref) => {
    const popover = React4.useContext(PopoverContext);
    React4.useEffect(() => {
      if (popover.visible && initialFocusRef) {
        initialFocusRef.current?.focus();
      }
    }, [popover.visible, initialFocusRef]);
    return /* @__PURE__ */ React4.createElement(import_non_modal_dialog_primitive3.NonModalDialogPrimitive, { ...popover, ...props, as: StyledPopover, ref, preventBodyScroll: false }, /* @__PURE__ */ React4.createElement(import_theme2.StyledBase, null, /* @__PURE__ */ React4.createElement(PopoverArrow, { ...popover }), /* @__PURE__ */ React4.createElement(import_box.Box, { element, padding: "space90" }, /* @__PURE__ */ React4.createElement(import_box.Box, { position: "absolute", right: 16, top: 16 }, /* @__PURE__ */ React4.createElement(
      import_button.Button,
      {
        element: `${element}_CLOSE_BUTTON`,
        variant: "secondary_icon",
        size: "reset",
        onClick: popover.hide
      },
      /* @__PURE__ */ React4.createElement(import_CloseIcon.CloseIcon, { element: `${element}_CLOSE_ICON`, decorative: true, size: "sizeIcon10" }),
      /* @__PURE__ */ React4.createElement(import_screen_reader_only.ScreenReaderOnly, null, i18nDismissLabel)
    )), children)));
  }
);
Popover.displayName = "Popover";

// src/PopoverButton.tsx
var import_button2 = require("@twilio-paste/button");
var import_non_modal_dialog_primitive4 = require("@twilio-paste/non-modal-dialog-primitive");
var React5 = __toESM(require("react"));
var PopoverButton = React5.forwardRef(
  ({ children, element = "POPOVER_BUTTON", ...popoverButtonProps }, ref) => {
    const popover = React5.useContext(PopoverContext);
    return /* @__PURE__ */ React5.createElement(
      import_non_modal_dialog_primitive4.NonModalDialogDisclosurePrimitive,
      {
        element,
        ...popover,
        ...popoverButtonProps,
        as: import_button2.Button,
        ref
      },
      children
    );
  }
);
PopoverButton.displayName = "PopoverButton";

// src/PopoverBadgeButton.tsx
var import_badge = require("@twilio-paste/badge");
var import_non_modal_dialog_primitive5 = require("@twilio-paste/non-modal-dialog-primitive");
var React6 = __toESM(require("react"));
var ButtonBadge = React6.forwardRef(function ButtonBadge2({ children, ...props }, ref) {
  return /* @__PURE__ */ React6.createElement(import_badge.Badge, { ...props, as: "button", ref }, children);
});
ButtonBadge.displayName = "ButtonBadge";
var PopoverBadgeButton = React6.forwardRef(
  ({ children, element = "POPOVER_BADGE", ...popoverButtonProps }, ref) => {
    const popover = React6.useContext(PopoverContext);
    return /* @__PURE__ */ React6.createElement(
      import_non_modal_dialog_primitive5.NonModalDialogDisclosurePrimitive,
      {
        element,
        ...popover,
        ...popoverButtonProps,
        as: ButtonBadge,
        ref
      },
      children
    );
  }
);
PopoverBadgeButton.displayName = "PopoverBadgeButton";

// src/PopoverFormPillButton.tsx
var import_form_pill_group = require("@twilio-paste/form-pill-group");
var import_non_modal_dialog_primitive6 = require("@twilio-paste/non-modal-dialog-primitive");
var React7 = __toESM(require("react"));
var PopoverFormPillButton = React7.forwardRef(
  ({ children, element = "POPOVER_FORM_PILL", ...popoverButtonProps }, ref) => {
    const popover = React7.useContext(PopoverContext);
    return /* @__PURE__ */ React7.createElement(
      import_non_modal_dialog_primitive6.NonModalDialogDisclosurePrimitive,
      {
        element,
        ...popover,
        ...popoverButtonProps,
        as: import_form_pill_group.FormPill,
        ref,
        onSelect: (e) => {
          popover.toggle();
          if (popoverButtonProps.onSelect) {
            popoverButtonProps.onSelect(e);
          }
        },
        baseId: popover.baseId
      },
      children
    );
  }
);
PopoverFormPillButton.displayName = "PopoverFormPillButton";
