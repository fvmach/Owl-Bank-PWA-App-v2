import{useNonModalDialogPrimitiveState}from"@twilio-paste/non-modal-dialog-primitive";import*as React2 from"react";import*as React from"react";var PopoverContext=React.createContext({});var BasePopoverContainer=({children,gutter,placement,state,...initialState})=>{let popover=state||useNonModalDialogPrimitiveState({gutter,modal:!0,placement,...initialState});return React2.createElement(PopoverContext.Provider,{value:popover},children)};BasePopoverContainer.displayName="BasePopoverContainer";var PopoverContainer=React2.memo(BasePopoverContainer);PopoverContainer.displayName="PopoverContainer";import{Box,safelySpreadBoxProps}from"@twilio-paste/box";import{Button}from"@twilio-paste/button";import{CloseIcon}from"@twilio-paste/icons/esm/CloseIcon";import{NonModalDialogPrimitive}from"@twilio-paste/non-modal-dialog-primitive";import{ScreenReaderOnly}from"@twilio-paste/screen-reader-only";import{StyledBase}from"@twilio-paste/theme";import*as React4 from"react";import{NonModalDialogArrowPrimitive}from"@twilio-paste/non-modal-dialog-primitive";import{useTheme}from"@twilio-paste/theme";import*as React3 from"react";var PopoverArrow=props=>{let theme=useTheme();return React3.createElement(NonModalDialogArrowPrimitive,{...props,size:theme.fontSizes.fontSize70,stroke:theme.borderColors.colorBorderWeaker,fill:theme.backgroundColors.colorBackgroundBody})};PopoverArrow.displayName="PopoverArrow";var StyledPopover=React4.forwardRef(({style,width,...props},ref)=>React4.createElement(Box,{...safelySpreadBoxProps(props),width,backgroundColor:"colorBackgroundBody",borderStyle:"solid",borderWidth:"borderWidth10",borderColor:"colorBorderWeaker",borderRadius:"borderRadius30",boxShadow:"shadowLow",maxWidth:"size50",zIndex:"zIndex80",_focus:{outline:"none"},style,ref}));StyledPopover.displayName="StyledPopover";var Popover=React4.forwardRef(({children,element="POPOVER",i18nDismissLabel="Close popover",initialFocusRef,...props},ref)=>{let popover=React4.useContext(PopoverContext);return React4.useEffect(()=>{popover.visible&&initialFocusRef&&initialFocusRef.current?.focus()},[popover.visible,initialFocusRef]),React4.createElement(NonModalDialogPrimitive,{...popover,...props,as:StyledPopover,ref,preventBodyScroll:!1},React4.createElement(StyledBase,null,React4.createElement(PopoverArrow,{...popover}),React4.createElement(Box,{element,padding:"space90"},React4.createElement(Box,{position:"absolute",right:16,top:16},React4.createElement(Button,{element:`${element}_CLOSE_BUTTON`,variant:"secondary_icon",size:"reset",onClick:popover.hide},React4.createElement(CloseIcon,{element:`${element}_CLOSE_ICON`,decorative:!0,size:"sizeIcon10"}),React4.createElement(ScreenReaderOnly,null,i18nDismissLabel))),children)))});Popover.displayName="Popover";import{Button as Button2}from"@twilio-paste/button";import{NonModalDialogDisclosurePrimitive}from"@twilio-paste/non-modal-dialog-primitive";import*as React5 from"react";var PopoverButton=React5.forwardRef(({children,element="POPOVER_BUTTON",...popoverButtonProps},ref)=>{let popover=React5.useContext(PopoverContext);return React5.createElement(NonModalDialogDisclosurePrimitive,{element,...popover,...popoverButtonProps,as:Button2,ref},children)});PopoverButton.displayName="PopoverButton";import{Badge}from"@twilio-paste/badge";import{NonModalDialogDisclosurePrimitive as NonModalDialogDisclosurePrimitive2}from"@twilio-paste/non-modal-dialog-primitive";import*as React6 from"react";var ButtonBadge=React6.forwardRef(function({children,...props},ref){return React6.createElement(Badge,{...props,as:"button",ref},children)});ButtonBadge.displayName="ButtonBadge";var PopoverBadgeButton=React6.forwardRef(({children,element="POPOVER_BADGE",...popoverButtonProps},ref)=>{let popover=React6.useContext(PopoverContext);return React6.createElement(NonModalDialogDisclosurePrimitive2,{element,...popover,...popoverButtonProps,as:ButtonBadge,ref},children)});PopoverBadgeButton.displayName="PopoverBadgeButton";import{FormPill}from"@twilio-paste/form-pill-group";import{NonModalDialogDisclosurePrimitive as NonModalDialogDisclosurePrimitive3}from"@twilio-paste/non-modal-dialog-primitive";import*as React7 from"react";var PopoverFormPillButton=React7.forwardRef(({children,element="POPOVER_FORM_PILL",...popoverButtonProps},ref)=>{let popover=React7.useContext(PopoverContext);return React7.createElement(NonModalDialogDisclosurePrimitive3,{element,...popover,...popoverButtonProps,as:FormPill,ref,onSelect:e=>{popover.toggle(),popoverButtonProps.onSelect&&popoverButtonProps.onSelect(e)},baseId:popover.baseId},children)});PopoverFormPillButton.displayName="PopoverFormPillButton";export{Popover,PopoverBadgeButton,PopoverButton,PopoverContainer,PopoverFormPillButton,useNonModalDialogPrimitiveState as usePopoverState};
