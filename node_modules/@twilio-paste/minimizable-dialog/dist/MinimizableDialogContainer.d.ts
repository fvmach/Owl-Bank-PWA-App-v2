import type { NonModalDialogPrimitivePopoverInitialState, NonModalDialogPrimitiveStateReturn } from "@twilio-paste/non-modal-dialog-primitive";
import * as React from "react";
export interface MinimizableDialogStateReturn extends NonModalDialogPrimitiveStateReturn {
    [key: string]: any;
}
export interface UseMinimizableDialogStateArgs extends NonModalDialogPrimitivePopoverInitialState {
    /**
     * Determines whether or not the dialog is minimized.
     *
     * @type {boolean}
     * @memberof UseMinimizableDialogStateArgs
     */
    minimized?: boolean;
}
export declare const useMinimizableDialogState: ({ minimized: minimizedArg, ...initialState }: UseMinimizableDialogStateArgs) => MinimizableDialogStateReturn;
export interface MinimizableDialogContainerProps extends NonModalDialogPrimitivePopoverInitialState {
    children: NonNullable<React.ReactNode>;
    /**
     *
     * @type {MinimizableDialogStateReturn}
     * @memberof MinimizableDialogContainerProps
     */
    state?: MinimizableDialogStateReturn;
    /**
     * Determines whether or not the dialog is minimized.
     *
     * @type {boolean}
     * @memberof MinimizableDialogContainerProps
     */
    minimized?: boolean;
}
declare const MinimizableDialogContainer: React.NamedExoticComponent<React.PropsWithChildren<MinimizableDialogContainerProps>>;
export { MinimizableDialogContainer };
//# sourceMappingURL=MinimizableDialogContainer.d.ts.map