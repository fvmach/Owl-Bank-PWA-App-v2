"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.tsx
var src_exports = {};
__export(src_exports, {
  MinimizableDialog: () => MinimizableDialog,
  MinimizableDialogButton: () => MinimizableDialogButton,
  MinimizableDialogContainer: () => MinimizableDialogContainer,
  MinimizableDialogContent: () => MinimizableDialogContent,
  MinimizableDialogHeader: () => MinimizableDialogHeader,
  useMinimizableDialogState: () => useMinimizableDialogState
});
module.exports = __toCommonJS(src_exports);

// src/MinimizableDialog.tsx
var import_box2 = require("@twilio-paste/box");
var import_non_modal_dialog_primitive = require("@twilio-paste/non-modal-dialog-primitive");
var import_theme = require("@twilio-paste/theme");
var React3 = __toESM(require("react"));

// src/MinimizableDialogContext.tsx
var React = __toESM(require("react"));
var MinimizableDialogContext = React.createContext({});

// src/StyledMinimizableDialog.tsx
var import_box = require("@twilio-paste/box");
var React2 = __toESM(require("react"));
var StyledMinimizableDialog = ({
  element,
  children
}) => /* @__PURE__ */ React2.createElement(
  import_box.Box,
  {
    element,
    borderRadius: "borderRadius20",
    display: "flex",
    flexDirection: "column",
    backgroundColor: "colorBackgroundBody",
    width: "size40",
    boxShadow: "shadow"
  },
  children
);
StyledMinimizableDialog.displayName = "StyledMinimizableDialog";

// src/MinimizableDialog.tsx
var StyledMinimizableDialogContainer = React3.forwardRef(
  ({ minimized, style, ...props }, ref) => /* @__PURE__ */ React3.createElement(
    import_box2.Box,
    {
      ...(0, import_box2.safelySpreadBoxProps)(props),
      ref,
      zIndex: "zIndex80",
      transform: "none!important",
      position: "absolute",
      inset: `auto 1.5rem ${minimized === true ? "0" : "1.5"}rem auto!important`,
      _focus: { outline: "none" },
      style
    }
  )
);
StyledMinimizableDialogContainer.displayName = "StyledMinimizableDialog";
var MinimizableDialog = React3.forwardRef(
  ({ children, element = "MINIMIZABLE_DIALOG", ...props }, ref) => {
    const dialog = React3.useContext(MinimizableDialogContext);
    return /* @__PURE__ */ React3.createElement(
      import_non_modal_dialog_primitive.NonModalDialogPrimitive,
      {
        ...dialog,
        ...props,
        as: StyledMinimizableDialogContainer,
        ref,
        preventBodyScroll: false,
        hideOnClickOutside: false
      },
      /* @__PURE__ */ React3.createElement(import_theme.StyledBase, null, /* @__PURE__ */ React3.createElement(StyledMinimizableDialog, { element }, children))
    );
  }
);
MinimizableDialog.displayName = "MinimizableDialog";

// src/MinimizableDialogButton.tsx
var import_button = require("@twilio-paste/button");
var import_non_modal_dialog_primitive2 = require("@twilio-paste/non-modal-dialog-primitive");
var React4 = __toESM(require("react"));
var MinimizableDialogButton = React4.forwardRef(
  ({ children, element = "MINIMIZABLE_DIALOG_BUTTON", ...props }, ref) => {
    const dialog = React4.useContext(MinimizableDialogContext);
    return /* @__PURE__ */ React4.createElement(import_non_modal_dialog_primitive2.NonModalDialogDisclosurePrimitive, { element, ...dialog, ...props, as: import_button.Button, ref }, children);
  }
);
MinimizableDialogButton.displayName = "MinimizableDialogButton";

// src/MinimizableDialogHeader.tsx
var import_box3 = require("@twilio-paste/box");
var import_button2 = require("@twilio-paste/button");
var import_ChevronUpIcon = require("@twilio-paste/icons/cjs/ChevronUpIcon");
var import_CloseIcon = require("@twilio-paste/icons/cjs/CloseIcon");
var import_MinusIcon = require("@twilio-paste/icons/cjs/MinusIcon");
var import_screen_reader_only = require("@twilio-paste/screen-reader-only");
var React5 = __toESM(require("react"));
var MinimizableDialogHeader = React5.forwardRef(
  ({
    children,
    element = "MINIMIZABLE_DIALOG_HEADER",
    i18nDismissLabel = "close",
    i18nMinimizeLabel = "minimize",
    ...props
  }, ref) => {
    const { hide, minimized, minimize, expand } = React5.useContext(MinimizableDialogContext);
    return /* @__PURE__ */ React5.createElement(
      import_box3.Box,
      {
        ...(0, import_box3.safelySpreadBoxProps)(props),
        ref,
        display: "grid",
        gridTemplateColumns: "1fr auto auto",
        columnGap: "space30",
        backgroundColor: "colorBackground",
        paddingX: "space70",
        paddingY: "space40",
        color: "colorTextWeak",
        overflow: "hidden",
        borderBottomWidth: "borderWidth10",
        borderBottomStyle: "solid",
        borderBottomColor: "colorBorderWeaker",
        borderTopRightRadius: "borderRadius20",
        borderTopLeftRadius: "borderRadius20",
        element
      },
      /* @__PURE__ */ React5.createElement(
        import_box3.Box,
        {
          as: "h2",
          element: `${element}_HEADING`,
          fontWeight: "fontWeightSemibold",
          fontSize: "fontSize30",
          lineHeight: "lineHeight30",
          margin: "space0"
        },
        children
      ),
      /* @__PURE__ */ React5.createElement(
        import_button2.Button,
        {
          element: `${element}_MINIMIZE_BUTTON`,
          variant: "secondary_icon",
          size: "reset",
          onClick: minimized ? expand : minimize,
          "aria-pressed": minimized === void 0 ? false : minimized
        },
        minimized ? /* @__PURE__ */ React5.createElement(import_ChevronUpIcon.ChevronUpIcon, { element: `${element}_MINIMIZE_ICON`, decorative: true, size: "sizeIcon20" }) : /* @__PURE__ */ React5.createElement(import_MinusIcon.MinusIcon, { element: `${element}_MINIMIZE_ICON`, decorative: true, size: "sizeIcon20" }),
        /* @__PURE__ */ React5.createElement(import_screen_reader_only.ScreenReaderOnly, null, i18nMinimizeLabel)
      ),
      /* @__PURE__ */ React5.createElement(import_button2.Button, { element: `${element}_CLOSE_BUTTON`, variant: "secondary_icon", size: "reset", onClick: hide }, /* @__PURE__ */ React5.createElement(import_CloseIcon.CloseIcon, { element: `${element}_CLOSE_ICON`, decorative: true, size: "sizeIcon20" }), /* @__PURE__ */ React5.createElement(import_screen_reader_only.ScreenReaderOnly, null, i18nDismissLabel))
    );
  }
);
MinimizableDialogHeader.displayName = "MinimizableDialogHeader";

// src/MinimizableDialogContainer.tsx
var import_non_modal_dialog_primitive3 = require("@twilio-paste/non-modal-dialog-primitive");
var React6 = __toESM(require("react"));
var useMinimizableDialogState = ({
  minimized: minimizedArg,
  ...initialState
}) => {
  const [minimized, setMinimized] = React6.useState(minimizedArg);
  const minimize = () => setMinimized(true);
  const expand = () => setMinimized(false);
  const toggleMinimized = () => setMinimized((prev) => !prev);
  const dialog = (0, import_non_modal_dialog_primitive3.useNonModalDialogPrimitiveState)({ ...initialState });
  return { ...dialog, minimized, minimize, expand, toggleMinimized };
};
var BaseMinimizableDialogContainer = ({
  gutter,
  children,
  placement,
  modal,
  state,
  minimized: minimizedProp,
  ...initialState
}) => {
  const dialog = state || useMinimizableDialogState({
    minimized: minimizedProp,
    modal: true,
    ...initialState
  });
  return /* @__PURE__ */ React6.createElement(MinimizableDialogContext.Provider, { value: { ...dialog } }, children);
};
BaseMinimizableDialogContainer.displayName = "BaseMinimizableDialogContainer";
var MinimizableDialogContainer = React6.memo(BaseMinimizableDialogContainer);
MinimizableDialogContainer.displayName = "MinimizableDialogContainer";

// src/MinimizableDialogContent.tsx
var import_box4 = require("@twilio-paste/box");
var React7 = __toESM(require("react"));
var MinimizableDialogContent = React7.forwardRef(
  ({ children, element = "MINIMIZABLE_DIALOG_CONTENT", ...props }, ref) => {
    const { minimized } = React7.useContext(MinimizableDialogContext);
    return /* @__PURE__ */ React7.createElement(
      import_box4.Box,
      {
        ...(0, import_box4.safelySpreadBoxProps)(props),
        element,
        ref,
        display: minimized ? "none" : "block",
        borderBottomLeftRadius: "borderRadius20",
        borderBottomRightRadius: "borderRadius20"
      },
      children
    );
  }
);
MinimizableDialogContent.displayName = "MinimizableDialogContent";
