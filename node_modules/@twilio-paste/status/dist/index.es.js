import{badgeBaseStyles,badgeVariantStyles}from"@twilio-paste/badge";import{Box,safelySpreadBoxProps}from"@twilio-paste/box";import*as React2 from"react";import{ConnectivityAvailableIcon}from"@twilio-paste/icons/esm/ConnectivityAvailableIcon";import{ConnectivityBusyIcon}from"@twilio-paste/icons/esm/ConnectivityBusyIcon";import{ConnectivityNeutralIcon}from"@twilio-paste/icons/esm/ConnectivityNeutralIcon";import{ConnectivityOfflineIcon}from"@twilio-paste/icons/esm/ConnectivityOfflineIcon";import{ConnectivityUnavailableIcon}from"@twilio-paste/icons/esm/ConnectivityUnavailableIcon";import{ProcessDisabledIcon}from"@twilio-paste/icons/esm/ProcessDisabledIcon";import{ProcessDraftIcon}from"@twilio-paste/icons/esm/ProcessDraftIcon";import{ProcessErrorIcon}from"@twilio-paste/icons/esm/ProcessErrorIcon";import{ProcessInProgressIcon}from"@twilio-paste/icons/esm/ProcessInProgressIcon";import{ProcessNeutralIcon}from"@twilio-paste/icons/esm/ProcessNeutralIcon";import{ProcessSuccessIcon}from"@twilio-paste/icons/esm/ProcessSuccessIcon";import{ProcessWarningIcon}from"@twilio-paste/icons/esm/ProcessWarningIcon";import*as React from"react";var StatusObject={ProcessError:{badgeVariant:"default",icon:React.createElement(ProcessErrorIcon,{color:"colorTextIconError",decorative:!0,size:"sizeIcon10"}),color:"colorTextError"},ProcessWarning:{badgeVariant:"default",icon:React.createElement(ProcessWarningIcon,{color:"colorTextIconWarning",decorative:!0,size:"sizeIcon10"}),color:"colorTextWarning"},ProcessSuccess:{badgeVariant:"default",icon:React.createElement(ProcessSuccessIcon,{color:"colorTextIconSuccess",decorative:!0,size:"sizeIcon10"}),color:"colorTextSuccess"},ProcessNeutral:{badgeVariant:"default",icon:React.createElement(ProcessNeutralIcon,{color:"colorTextIconNeutral",decorative:!0,size:"sizeIcon10"}),color:"colorTextNeutral"},ProcessInProgress:{badgeVariant:"default",icon:React.createElement(ProcessInProgressIcon,{color:"colorTextIconNeutral",decorative:!0,size:"sizeIcon10"}),color:"colorTextNeutral"},ProcessDisabled:{badgeVariant:"decorative10",icon:React.createElement(ProcessDisabledIcon,{color:"colorTextIcon",decorative:!0,size:"sizeIcon10"}),color:"colorTextWeak"},ProcessDraft:{badgeVariant:"decorative10",icon:React.createElement(ProcessDraftIcon,{color:"colorTextIcon",decorative:!0,size:"sizeIcon10"}),color:"colorTextWeak"},ConnectivityAvailable:{badgeVariant:"default",icon:React.createElement(ConnectivityAvailableIcon,{color:"colorTextIconAvailable",decorative:!0,size:"sizeIcon10"}),color:"colorTextSuccess"},ConnectivityBusy:{badgeVariant:"default",icon:React.createElement(ConnectivityBusyIcon,{color:"colorTextIconBusy",decorative:!0,size:"sizeIcon10"}),color:"colorTextWarning"},ConnectivityUnavailable:{badgeVariant:"default",icon:React.createElement(ConnectivityUnavailableIcon,{color:"colorTextIconUnavailable",decorative:!0,size:"sizeIcon10"}),color:"colorTextError"},ConnectivityNeutral:{badgeVariant:"default",icon:React.createElement(ConnectivityNeutralIcon,{color:"colorTextIconNeutral",decorative:!0,size:"sizeIcon10"}),color:"colorTextNeutral"},ConnectivityOffline:{badgeVariant:"decorative10",icon:React.createElement(ConnectivityOfflineIcon,{color:"colorTextIconOffline",decorative:!0,size:"sizeIcon10"}),color:"colorTextWeak"}};var paddingX=size=>{switch(size){case"small":return"space20";case"borderless":return"space0";default:return"space30"}},paddingY=size=>{switch(size){case"small":return"space10";case"borderless":return"space0";default:return"space20"}},badgeStyles={...badgeBaseStyles,...badgeVariantStyles.default},badgeBorderlessStyles={boxShadow:"none",backgroundColor:"transparent"},StatusBadge=React2.forwardRef(({children,element="STATUS_BADGE",size,variant,...props},ref)=>React2.createElement(Box,{...safelySpreadBoxProps(props),as:"span",element,variant,...badgeStyles,color:StatusObject[variant].color,paddingX:paddingX(size),paddingY:paddingY(size),display:"flex",flexDirection:"row",columnGap:"space20",alignItems:"center",...size==="borderless"&&badgeBorderlessStyles,ref},StatusObject[variant].icon,children));StatusBadge.displayName="StatusBadge";import{useMenuState}from"@twilio-paste/menu";import{MenuBadgeContent}from"@twilio-paste/menu";import*as React3 from"react";var StatusMenuBadge=React3.forwardRef(({children,variant,element="STATUS_MENU_BADGE",...props},ref)=>React3.createElement(StatusBadge,{as:"span",element,variant},React3.createElement(MenuBadgeContent,{...props,element,ref},children)));StatusMenuBadge.displayName="StatusMenuBadge";import{Menu}from"@twilio-paste/menu";import*as React4 from"react";var StatusMenu=React4.forwardRef((props,ref)=>React4.createElement(Menu,{element:"STATUS_MENU",...props,ref}));StatusMenu.displayName="StatusMenu";import{MenuItem}from"@twilio-paste/menu";import*as React5 from"react";var StatusMenuItem=React5.forwardRef((props,ref)=>React5.createElement(MenuItem,{element:"STATUS_MENU_ITEM",...props,ref}));StatusMenuItem.displayName="StatusMenuItem";import{MenuItemCheckbox}from"@twilio-paste/menu";import*as React6 from"react";var StatusMenuItemCheckbox=React6.forwardRef((props,ref)=>React6.createElement(MenuItemCheckbox,{element:"STATUS_MENU_ITEM_CHECKBOX",...props,ref}));StatusMenuItemCheckbox.displayName="StatusMenuItemCheckbox";import{MenuItemRadio}from"@twilio-paste/menu";import*as React7 from"react";var StatusMenuItemRadio=React7.forwardRef((props,ref)=>React7.createElement(MenuItemRadio,{element:"STATUS_MENU_ITEM_RADIO",...props,ref}));StatusMenuItemRadio.displayName="StatusMenuItemRadio";import{Box as Box2,safelySpreadBoxProps as safelySpreadBoxProps2}from"@twilio-paste/box";import*as React8 from"react";var StatusMenuItemChild=React8.forwardRef(({children,variant,element="MENU_ITEM_STATUS",...props},ref)=>React8.createElement(Box2,{...safelySpreadBoxProps2(props),element,display:"flex",flexDirection:"row",columnGap:"space20",alignItems:"center",variant,ref},StatusObject[variant].icon,children));StatusMenuItemChild.displayName="StatusMenuItemChild";export{StatusBadge,StatusMenu,StatusMenuBadge,StatusMenuItem,StatusMenuItemCheckbox,StatusMenuItemChild,StatusMenuItemRadio,StatusObject,useMenuState as useStatusMenuState};
