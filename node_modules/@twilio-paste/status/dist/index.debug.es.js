// src/StatusBadge.tsx
import { badgeBaseStyles, badgeVariantStyles } from "@twilio-paste/badge";
import { Box, safelySpreadBoxProps } from "@twilio-paste/box";
import * as React2 from "react";

// src/constants.tsx
import { ConnectivityAvailableIcon } from "@twilio-paste/icons/esm/ConnectivityAvailableIcon";
import { ConnectivityBusyIcon } from "@twilio-paste/icons/esm/ConnectivityBusyIcon";
import { ConnectivityNeutralIcon } from "@twilio-paste/icons/esm/ConnectivityNeutralIcon";
import { ConnectivityOfflineIcon } from "@twilio-paste/icons/esm/ConnectivityOfflineIcon";
import { ConnectivityUnavailableIcon } from "@twilio-paste/icons/esm/ConnectivityUnavailableIcon";
import { ProcessDisabledIcon } from "@twilio-paste/icons/esm/ProcessDisabledIcon";
import { ProcessDraftIcon } from "@twilio-paste/icons/esm/ProcessDraftIcon";
import { ProcessErrorIcon } from "@twilio-paste/icons/esm/ProcessErrorIcon";
import { ProcessInProgressIcon } from "@twilio-paste/icons/esm/ProcessInProgressIcon";
import { ProcessNeutralIcon } from "@twilio-paste/icons/esm/ProcessNeutralIcon";
import { ProcessSuccessIcon } from "@twilio-paste/icons/esm/ProcessSuccessIcon";
import { ProcessWarningIcon } from "@twilio-paste/icons/esm/ProcessWarningIcon";
import * as React from "react";
var StatusObject = {
  ProcessError: {
    badgeVariant: "default",
    icon: /* @__PURE__ */ React.createElement(ProcessErrorIcon, { color: "colorTextIconError", decorative: true, size: "sizeIcon10" }),
    color: "colorTextError"
  },
  ProcessWarning: {
    badgeVariant: "default",
    icon: /* @__PURE__ */ React.createElement(ProcessWarningIcon, { color: "colorTextIconWarning", decorative: true, size: "sizeIcon10" }),
    color: "colorTextWarning"
  },
  ProcessSuccess: {
    badgeVariant: "default",
    icon: /* @__PURE__ */ React.createElement(ProcessSuccessIcon, { color: "colorTextIconSuccess", decorative: true, size: "sizeIcon10" }),
    color: "colorTextSuccess"
  },
  ProcessNeutral: {
    badgeVariant: "default",
    icon: /* @__PURE__ */ React.createElement(ProcessNeutralIcon, { color: "colorTextIconNeutral", decorative: true, size: "sizeIcon10" }),
    color: "colorTextNeutral"
  },
  ProcessInProgress: {
    badgeVariant: "default",
    icon: /* @__PURE__ */ React.createElement(ProcessInProgressIcon, { color: "colorTextIconNeutral", decorative: true, size: "sizeIcon10" }),
    color: "colorTextNeutral"
  },
  ProcessDisabled: {
    badgeVariant: "decorative10",
    icon: /* @__PURE__ */ React.createElement(ProcessDisabledIcon, { color: "colorTextIcon", decorative: true, size: "sizeIcon10" }),
    color: "colorTextWeak"
  },
  ProcessDraft: {
    badgeVariant: "decorative10",
    icon: /* @__PURE__ */ React.createElement(ProcessDraftIcon, { color: "colorTextIcon", decorative: true, size: "sizeIcon10" }),
    color: "colorTextWeak"
  },
  ConnectivityAvailable: {
    badgeVariant: "default",
    icon: /* @__PURE__ */ React.createElement(ConnectivityAvailableIcon, { color: "colorTextIconAvailable", decorative: true, size: "sizeIcon10" }),
    color: "colorTextSuccess"
  },
  ConnectivityBusy: {
    badgeVariant: "default",
    icon: /* @__PURE__ */ React.createElement(ConnectivityBusyIcon, { color: "colorTextIconBusy", decorative: true, size: "sizeIcon10" }),
    color: "colorTextWarning"
  },
  ConnectivityUnavailable: {
    badgeVariant: "default",
    icon: /* @__PURE__ */ React.createElement(ConnectivityUnavailableIcon, { color: "colorTextIconUnavailable", decorative: true, size: "sizeIcon10" }),
    color: "colorTextError"
  },
  ConnectivityNeutral: {
    badgeVariant: "default",
    icon: /* @__PURE__ */ React.createElement(ConnectivityNeutralIcon, { color: "colorTextIconNeutral", decorative: true, size: "sizeIcon10" }),
    color: "colorTextNeutral"
  },
  ConnectivityOffline: {
    badgeVariant: "decorative10",
    icon: /* @__PURE__ */ React.createElement(ConnectivityOfflineIcon, { color: "colorTextIconOffline", decorative: true, size: "sizeIcon10" }),
    color: "colorTextWeak"
  }
};

// src/StatusBadge.tsx
var paddingX = (size) => {
  switch (size) {
    case "small":
      return "space20";
    case "borderless":
      return "space0";
    default:
      return "space30";
  }
};
var paddingY = (size) => {
  switch (size) {
    case "small":
      return "space10";
    case "borderless":
      return "space0";
    default:
      return "space20";
  }
};
var badgeStyles = { ...badgeBaseStyles, ...badgeVariantStyles.default };
var badgeBorderlessStyles = {
  boxShadow: "none",
  backgroundColor: "transparent"
};
var StatusBadge = React2.forwardRef(
  ({ children, element = "STATUS_BADGE", size, variant, ...props }, ref) => {
    return /* @__PURE__ */ React2.createElement(
      Box,
      {
        ...safelySpreadBoxProps(props),
        as: "span",
        element,
        variant,
        ...badgeStyles,
        color: StatusObject[variant].color,
        paddingX: paddingX(size),
        paddingY: paddingY(size),
        display: "flex",
        flexDirection: "row",
        columnGap: "space20",
        alignItems: "center",
        ...size === "borderless" && badgeBorderlessStyles,
        ref
      },
      StatusObject[variant].icon,
      children
    );
  }
);
StatusBadge.displayName = "StatusBadge";

// src/index.tsx
import { useMenuState } from "@twilio-paste/menu";

// src/StatusMenuBadge.tsx
import { MenuBadgeContent } from "@twilio-paste/menu";
import * as React3 from "react";
var StatusMenuBadge = React3.forwardRef(
  ({ children, variant, element = "STATUS_MENU_BADGE", ...props }, ref) => {
    return /* @__PURE__ */ React3.createElement(StatusBadge, { as: "span", element, variant }, /* @__PURE__ */ React3.createElement(MenuBadgeContent, { ...props, element, ref }, children));
  }
);
StatusMenuBadge.displayName = "StatusMenuBadge";

// src/StatusMenu.tsx
import { Menu } from "@twilio-paste/menu";
import * as React4 from "react";
var StatusMenu = React4.forwardRef((props, ref) => {
  return /* @__PURE__ */ React4.createElement(Menu, { element: "STATUS_MENU", ...props, ref });
});
StatusMenu.displayName = "StatusMenu";

// src/StatusMenuItem.tsx
import { MenuItem } from "@twilio-paste/menu";
import * as React5 from "react";
var StatusMenuItem = React5.forwardRef((props, ref) => {
  return /* @__PURE__ */ React5.createElement(MenuItem, { element: "STATUS_MENU_ITEM", ...props, ref });
});
StatusMenuItem.displayName = "StatusMenuItem";

// src/StatusMenuItemCheckbox.tsx
import { MenuItemCheckbox } from "@twilio-paste/menu";
import * as React6 from "react";
var StatusMenuItemCheckbox = React6.forwardRef((props, ref) => {
  return /* @__PURE__ */ React6.createElement(MenuItemCheckbox, { element: "STATUS_MENU_ITEM_CHECKBOX", ...props, ref });
});
StatusMenuItemCheckbox.displayName = "StatusMenuItemCheckbox";

// src/StatusMenuItemRadio.tsx
import { MenuItemRadio } from "@twilio-paste/menu";
import * as React7 from "react";
var StatusMenuItemRadio = React7.forwardRef((props, ref) => {
  return /* @__PURE__ */ React7.createElement(MenuItemRadio, { element: "STATUS_MENU_ITEM_RADIO", ...props, ref });
});
StatusMenuItemRadio.displayName = "StatusMenuItemRadio";

// src/StatusMenuItemChild.tsx
import { Box as Box2, safelySpreadBoxProps as safelySpreadBoxProps2 } from "@twilio-paste/box";
import * as React8 from "react";
var StatusMenuItemChild = React8.forwardRef(
  ({ children, variant, element = "MENU_ITEM_STATUS", ...props }, ref) => {
    return /* @__PURE__ */ React8.createElement(
      Box2,
      {
        ...safelySpreadBoxProps2(props),
        element,
        display: "flex",
        flexDirection: "row",
        columnGap: "space20",
        alignItems: "center",
        variant,
        ref
      },
      StatusObject[variant].icon,
      children
    );
  }
);
StatusMenuItemChild.displayName = "StatusMenuItemChild";
export {
  StatusBadge,
  StatusMenu,
  StatusMenuBadge,
  StatusMenuItem,
  StatusMenuItemCheckbox,
  StatusMenuItemChild,
  StatusMenuItemRadio,
  StatusObject,
  useMenuState as useStatusMenuState
};
