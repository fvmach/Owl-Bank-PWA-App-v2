import{Box,safelySpreadBoxProps}from"@twilio-paste/box";import{css,styled}from"@twilio-paste/styling-library";import*as React from"react";var StyledEditableCodeBlockWrapper=styled(Box)(css({backgroundColor:"rgb(1, 22, 39)",borderRadius:"borderRadius20",overflow:"hidden"})),EditableCodeBlockWrapper=React.forwardRef(({children,element="EDITABLE_CODE_BLOCK_WRAPPER",...props},ref)=>React.createElement(StyledEditableCodeBlockWrapper,{...safelySpreadBoxProps(props),element,ref},children));EditableCodeBlockWrapper.displayName="EditableCodeBlockWrapper";import{Box as Box2,safelySpreadBoxProps as safelySpreadBoxProps2}from"@twilio-paste/box";import*as React2 from"react";var EditableCodeBlockHeader=React2.forwardRef(({children,element="EDITABLE_CODE_BLOCK_HEADER",as="h3",...props},ref)=>React2.createElement(Box2,{...safelySpreadBoxProps2(props),ref,element,as,backgroundColor:"colorBackgroundInverseStrong",color:"colorTextInverse",paddingY:"space50",paddingX:"space70",margin:"space0",borderTopLeftRadius:"borderRadius20",borderTopRightRadius:"borderRadius20",fontWeight:"fontWeightSemibold",fontSize:"fontSize30",borderBottomWidth:"borderWidth30",borderBottomColor:"colorBorderInverseWeakest",borderBottomStyle:"solid"},children));EditableCodeBlockHeader.displayName="EditableCodeBlockHeader";import{Box as Box3}from"@twilio-paste/box";import{CodeEditor,CodeEditorPasteTheme}from"@twilio-paste/code-editor-library";import{ScreenReaderOnly}from"@twilio-paste/screen-reader-only";import{Spinner}from"@twilio-paste/spinner";import{StylingGlobals}from"@twilio-paste/styling-library";import{useTheme}from"@twilio-paste/theme";import*as React3 from"react";var EditableCodeblockLoadingMessage=({i18nLoadingLabel})=>React3.createElement(React3.Fragment,null,React3.createElement(Spinner,{color:"colorTextPrimaryWeak",decorative:!0}),React3.createElement(ScreenReaderOnly,null,i18nLoadingLabel));EditableCodeblockLoadingMessage.displayName="EditableCodeblockLoadingMessage";var InlineErrorStyles={".paste-editable-code-editor-margin-error":{":before":{content:'""',display:"inline-block",position:"relative",left:"2px",width:"16px",height:"16px",background:"url(https://assets.twilio.com/public_assets/paste-assets/1.0.0/icons/editable-codeblock-error.svg) no-repeat center center"}},".paste-editable-code-editor-row-error":{backgroundColor:"rgba(255, 0, 0, 0.3)"}},EditableCodeBlock=({onMount,element="EDITABLE_CODE_BLOCK",lineNumbers="on",readOnly=!1,folding=!0,indentationGuide=!0,showMinimap=!1,scrollBeyondLastLine=!1,inlineErrorRange,inlineErrorHoverMessage,inlineErrorIsWholeLine=!0,i18nLoadingLabel="Loading code...",...props})=>{let theme=useTheme(),controlledOptions=React3.useMemo(()=>({lineHeight:20,fontFamily:theme.fonts.fontFamilyCode,lineNumbers,folding,readOnly,scrollBeyondLastLine,glyphMargin:inlineErrorRange!=null,minimap:{enabled:showMinimap},guides:{indentation:indentationGuide}}),[readOnly,showMinimap,folding,inlineErrorRange,scrollBeyondLastLine,indentationGuide,lineNumbers,theme]),globalStyles=React3.useMemo(()=>({".monaco-hover-content":{fontFamily:theme.fonts.fontFamilyText},...inlineErrorRange?InlineErrorStyles:{}}),[theme,inlineErrorRange]),handleEditorDidMount=React3.useCallback((editor,monaco)=>{monaco.editor.defineTheme("paste",CodeEditorPasteTheme),monaco.editor.setTheme("paste"),inlineErrorRange&&editor.createDecorationsCollection([{range:new monaco.Range(inlineErrorRange.startLineNumber,inlineErrorRange.startColumn,inlineErrorRange.endLineNumber,inlineErrorRange.endColumn),options:{isWholeLine:inlineErrorIsWholeLine,className:".paste-editable-code-editor-row-error",hoverMessage:inlineErrorHoverMessage,glyphMarginClassName:".paste-editable-code-editor-margin-error",glyphMarginHoverMessage:inlineErrorHoverMessage,overviewRuler:{color:"#b82430",darkColor:"#b82430",position:monaco.editor.OverviewRulerLane.Right}}}]),onMount?.(editor,monaco)},[onMount,inlineErrorHoverMessage,inlineErrorRange,inlineErrorIsWholeLine]);return React3.createElement(Box3,{element,borderRadius:"borderRadius10",overflow:"hidden"},React3.createElement(StylingGlobals,{styles:globalStyles}),React3.createElement(CodeEditor,{...props,loading:React3.createElement(EditableCodeblockLoadingMessage,{i18nLoadingLabel}),options:controlledOptions,onMount:handleEditorDidMount}))};EditableCodeBlock.displayName="EditableCodeBlock";export{EditableCodeBlock,EditableCodeBlockHeader,EditableCodeBlockWrapper};
