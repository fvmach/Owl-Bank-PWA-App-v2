import{Box as Box3,safelySpreadBoxProps}from"@twilio-paste/box";import{LinkExternalIcon}from"@twilio-paste/icons/esm/LinkExternalIcon";import*as React3 from"react";import{Box}from"@twilio-paste/box";import*as React from"react";var DefaultAnchor=React.forwardRef((props,ref)=>React.createElement(Box,{...props,as:"a",color:"colorTextLink",fontSize:"inherit",fontWeight:"inherit",lineHeight:"inherit",outline:"none",ref,textDecoration:"underline",_active:{color:"colorTextLinkStrongest",textDecoration:"none"},_focus:{boxShadow:"shadowFocus",color:"colorTextLink",textDecoration:"underline",borderRadius:"borderRadius20"},_hover:{color:"colorTextLinkStronger",textDecoration:"none"}},props.children));DefaultAnchor.displayName="DefaultAnchor";import{Box as Box2}from"@twilio-paste/box";import*as React2 from"react";var InverseAnchor=React2.forwardRef((props,ref)=>React2.createElement(Box2,{...props,as:"a",color:"colorTextInverse",fontSize:"inherit",fontWeight:"inherit",lineHeight:"inherit",outline:"none",ref,textDecoration:"underline",_active:{color:"colorTextInverse",textDecoration:"none"},_focus:{boxShadow:"shadowFocusInverse",color:"colorTextInverse",textDecoration:"underline",borderRadius:"borderRadius20"},_hover:{color:"colorTextInverse",textDecoration:"none"}},props.children));InverseAnchor.displayName="InverseAnchor";var AnchorVariants={inverse:InverseAnchor,default:DefaultAnchor},EXTERNAL_URL_REGEX=/^(https?:)\S*$/,EXTERNAL_TARGET_DEFAULT="_blank",EXTERNAL_REL_DEFAULT="noreferrer noopener",isExternalUrl=url=>EXTERNAL_URL_REGEX.test(url),secureExternalLink=href=>{if(!!isExternalUrl(href))return{rel:EXTERNAL_REL_DEFAULT,target:EXTERNAL_TARGET_DEFAULT}},Anchor=React3.forwardRef(({element="ANCHOR",variant="default",showExternal,display,height,minHeight,maxHeight,width,minWidth,maxWidth,size,margin,marginBottom,marginLeft,marginRight,marginTop,marginX=null,marginY=null,padding,paddingBottom,paddingLeft,paddingRight,paddingTop,paddingX=null,paddingY=null,verticalAlign,i18nExternalLinkLabel="(link takes you to an external page)",...props},ref)=>{let AnchorComponent=AnchorVariants[variant];return React3.createElement(AnchorComponent,{href:props.href,ref,variant,...secureExternalLink(props.href),...safelySpreadBoxProps(props),element,display,height,minHeight,maxHeight,width,minWidth,maxWidth,size,margin,marginBottom,marginLeft,marginRight,marginTop,marginX,marginY,padding,paddingBottom,paddingLeft,paddingRight,paddingTop,paddingX,paddingY,verticalAlign},showExternal?React3.createElement(Box3,{as:"span"},props.children,React3.createElement(Box3,{as:"span",display:"inline-block",flexShrink:0,verticalAlign:"middle"},React3.createElement(LinkExternalIcon,{decorative:!1,title:i18nExternalLinkLabel}))):props.children)});Anchor.displayName="Anchor";export{Anchor,isExternalUrl,secureExternalLink};
