import { type BoxProps } from "@twilio-paste/box";
import * as React from "react";
import type { CheckboxProps } from "./Checkbox";
export interface CheckboxDisclaimerProps extends Omit<CheckboxProps, "isSelectAll" | "isSelectAllChild" | "indeterminate" | "hasError"> {
    children: NonNullable<React.ReactNode>;
    /**
     * Sets the Checkbox Group in error state
     *
     * @default null
     * @type {string | React.ReactNode}
     * @memberof CheckboxDisclaimerProps
     */
    errorText?: string | React.ReactNode;
    /**
     * Overrides the default element name to apply unique styles with the Customization Provider
     *
     * @default "CHECKBOX_DISCLAIMER"
     * @type {BoxElementProps["element"]}
     * @memberof CheckboxDisclaimerProps
     */
    element?: BoxProps["element"];
}
declare const CheckboxDisclaimer: React.ForwardRefExoticComponent<CheckboxDisclaimerProps & React.RefAttributes<HTMLInputElement>>;
export { CheckboxDisclaimer };
//# sourceMappingURL=CheckboxDisclaimer.d.ts.map