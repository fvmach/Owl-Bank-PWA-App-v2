import type { BoxProps } from "@twilio-paste/box";
import type { HTMLPasteProps } from "@twilio-paste/types";
import * as React from "react";
export interface CheckboxProps extends HTMLPasteProps<"input"> {
    children: NonNullable<React.ReactNode>;
    /**
     *
     * @default null
     * @type {boolean}
     * @memberof CheckboxProps
     */
    hasError?: boolean;
    /**
     *
     * @default null
     * @type {string | React.ReactNode}
     * @memberof CheckboxProps
     */
    helpText?: string | React.ReactNode;
    /**
     *
     * @default unique id
     * @type {string}
     * @memberof CheckboxProps
     */
    id?: string;
    /**
     *
     * @default null
     * @type {boolean}
     * @memberof CheckboxProps
     */
    indeterminate?: boolean;
    /**
     *
     * @default null
     * @type {boolean}
     * @memberof CheckboxProps
     */
    isSelectAll?: boolean;
    /**
     *
     * @default null
     * @type {boolean}
     * @memberof CheckboxProps
     */
    isSelectAllChild?: boolean;
    /**
     * Use on the currently selected checkbox
     *
     * @default null
     * @type {boolean}
     * @memberof CheckboxProps
     */
    checked?: boolean;
    /**
     * Only for use with uncontrolled checkboxes
     *
     * @default null
     * @type {boolean}
     * @memberof CheckboxProps
     */
    defaultChecked?: boolean;
    /**
     * Overrides the default element name to apply unique styles with the Customization Provider
     *
     * @default "CHECKBOX"
     * @type {BoxElementProps["element"]}
     * @memberof CheckboxProps
     */
    element?: BoxProps["element"];
}
type HiddenCheckboxProps = Pick<CheckboxProps, "checked" | "defaultChecked" | "element" | "disabled" | "id" | "indeterminate" | "name" | "onChange" | "required" | "value">;
declare const HiddenCheckbox: React.ForwardRefExoticComponent<HiddenCheckboxProps & React.RefAttributes<HTMLInputElement>>;
declare const CheckboxIcon: React.FC<{
    indeterminate: boolean | undefined;
    checked: boolean | undefined;
    element: BoxProps["element"];
}>;
declare const Checkbox: React.ForwardRefExoticComponent<CheckboxProps & React.RefAttributes<HTMLInputElement>>;
export { Checkbox, HiddenCheckbox, CheckboxIcon };
//# sourceMappingURL=Checkbox.d.ts.map