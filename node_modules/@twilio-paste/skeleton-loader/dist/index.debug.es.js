// src/SkeletonLoader.tsx
import { Box, safelySpreadBoxProps } from "@twilio-paste/box";
import { styled, themeGet } from "@twilio-paste/styling-library";
import * as React from "react";

// src/keyframes.tsx
import { keyframes } from "@twilio-paste/styling-library";
var SkeletonLoaderKeyframes = keyframes`
  0% {
    transform: translateX(-100%) skew(155deg);
  }
  50%,
  100% {
    transform: translateX(100%) skew(155deg);
  }
`;

// src/SkeletonLoader.tsx
var SkeletonLoaderInner = styled.div`
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  background: linear-gradient(
    90deg,
    transparent,
    ${themeGet("backgroundColors.colorBackground")} 40%,
    ${themeGet("backgroundColors.colorBackground")} 60%,
    transparent
  );
  transform: translateX(-100%) skew(155deg);
  animation-timing-function: cubic-bezier(0.06, 0.42, 0.57, 0.89);
  animation-name: ${SkeletonLoaderKeyframes};
  animation-duration: 4.5s;
  animation-iteration-count: infinite;
`;
var SkeletonLoader = React.forwardRef(
  ({
    borderBottomLeftRadius,
    borderBottomRightRadius,
    borderRadius = "borderRadius20",
    borderTopLeftRadius,
    borderTopRightRadius,
    element = "SKELETON_LOADER",
    display,
    height = "sizeIcon20",
    maxHeight,
    maxWidth,
    minHeight,
    minWidth,
    size = null,
    width = null,
    ...props
  }, ref) => {
    return /* @__PURE__ */ React.createElement(
      Box,
      {
        ...safelySpreadBoxProps(props),
        "aria-busy": "true",
        backgroundColor: "colorBackgroundStrong",
        borderBottomLeftRadius,
        borderBottomRightRadius,
        borderRadius,
        borderTopLeftRadius,
        borderTopRightRadius,
        display,
        element,
        height,
        maxHeight,
        maxWidth,
        minHeight,
        minWidth,
        overflow: "hidden",
        pointerEvents: "none",
        position: "relative",
        userSelect: "none",
        size,
        width,
        ref
      },
      /* @__PURE__ */ React.createElement(SkeletonLoaderInner, null)
    );
  }
);
SkeletonLoader.displayName = "SkeletonLoader";
export {
  SkeletonLoader
};
