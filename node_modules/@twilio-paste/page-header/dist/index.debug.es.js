// src/PageHeader.tsx
import { Box, safelySpreadBoxProps } from "@twilio-paste/box";
import * as React from "react";
var PageHeaderContext = React.createContext({});
var PageHeader = React.forwardRef(
  ({ element = "PAGE_HEADER", size, children, ...props }, ref) => {
    return /* @__PURE__ */ React.createElement(PageHeaderContext.Provider, { value: { size } }, /* @__PURE__ */ React.createElement(
      Box,
      {
        ...safelySpreadBoxProps(props),
        ref,
        element,
        display: "grid",
        gridTemplateRows: "auto auto auto",
        gridTemplateAreas: '"setting" "details" "content_barrier"'
      },
      children
    ));
  }
);
PageHeader.displayName = "PageHeader";

// src/PageHeaderSetting.tsx
import { Box as Box2, safelySpreadBoxProps as safelySpreadBoxProps2 } from "@twilio-paste/box";
import * as React2 from "react";
var PageHeaderSetting = React2.forwardRef(
  ({ element = "PAGE_HEADER_SETTING", children, ...props }, ref) => {
    return /* @__PURE__ */ React2.createElement(
      Box2,
      {
        ...safelySpreadBoxProps2(props),
        ref,
        element,
        gridArea: "setting",
        marginBottom: "space50",
        display: "flex",
        flexDirection: "column",
        rowGap: "space130"
      },
      children
    );
  }
);
PageHeaderSetting.displayName = "PageHeaderSetting";

// src/PageHeaderDetails.tsx
import { Box as Box3, safelySpreadBoxProps as safelySpreadBoxProps3 } from "@twilio-paste/box";
import * as React3 from "react";
var defaultGridTemplateAreas = '"keyword keyword keyword" "prefix heading actions" "meta meta meta" "paragraph paragraph paragraph"';
var compactGridTemplateAreas = '"keyword keyword keyword" "prefix heading actions" "prefix meta ." "paragraph paragraph paragraph"';
var PageHeaderDetails = React3.forwardRef(
  ({ element = "PAGE_HEADER_DETAILS", children, ...props }, ref) => {
    const { size } = React3.useContext(PageHeaderContext);
    return /* @__PURE__ */ React3.createElement(
      Box3,
      {
        ...safelySpreadBoxProps3(props),
        ref,
        element,
        marginBottom: size === "compact" ? "space50" : "space130",
        display: "grid",
        gridTemplateColumns: "min-content auto 1fr",
        gridTemplateRows: "auto-fit",
        gridTemplateAreas: size === "compact" ? compactGridTemplateAreas : defaultGridTemplateAreas
      },
      children
    );
  }
);
PageHeaderDetails.displayName = "PageHeaderDetails";

// src/PageHeaderKeyword.tsx
import { Box as Box4, safelySpreadBoxProps as safelySpreadBoxProps4 } from "@twilio-paste/box";
import * as React4 from "react";
var PageHeaderKeyword = React4.forwardRef(
  ({ element = "PAGE_HEADER_KEYWORD", children, ...props }, ref) => {
    return /* @__PURE__ */ React4.createElement(
      Box4,
      {
        ...safelySpreadBoxProps4(props),
        ref,
        element,
        marginBottom: "space30",
        gridArea: "keyword",
        display: "flex",
        alignItems: "center",
        columnGap: "space30",
        flexWrap: "wrap",
        rowGap: "space30",
        color: "colorTextWeak",
        fontSize: "fontSize20",
        lineHeight: "lineHeight20",
        fontWeight: "fontWeightMedium"
      },
      children
    );
  }
);
PageHeaderKeyword.displayName = "PageHeaderKeyword";

// src/PageHeaderPrefix.tsx
import { Box as Box5, safelySpreadBoxProps as safelySpreadBoxProps5 } from "@twilio-paste/box";
import * as React5 from "react";
var PageHeaderPrefix = React5.forwardRef(
  ({ element = "PAGE_HEADER_PREFIX", children, ...props }, ref) => {
    const { size } = React5.useContext(PageHeaderContext);
    return /* @__PURE__ */ React5.createElement(
      Box5,
      {
        ...safelySpreadBoxProps5(props),
        ref,
        element,
        gridArea: "prefix",
        marginRight: size === "compact" ? "space30" : "space40",
        alignSelf: "start"
      },
      children
    );
  }
);
PageHeaderPrefix.displayName = "PageHeaderPrefix";

// src/PageHeaderHeading.tsx
import { Box as Box6, safelySpreadBoxProps as safelySpreadBoxProps6 } from "@twilio-paste/box";
import { Heading } from "@twilio-paste/heading";
import * as React6 from "react";
var PageHeaderHeading = React6.forwardRef(
  ({ element = "PAGE_HEADER_HEADING", children, as = "h1", variant, ...props }, ref) => {
    const { size } = React6.useContext(PageHeaderContext);
    const defaultVariant = size === "compact" ? "heading30" : "heading10";
    return /* @__PURE__ */ React6.createElement(
      Box6,
      {
        ...safelySpreadBoxProps6(props),
        element: `${element}_WRAPPER`,
        gridArea: "heading",
        alignSelf: "center",
        maxWidth: "size70"
      },
      /* @__PURE__ */ React6.createElement(Heading, { ref, element, as, variant: variant || defaultVariant, marginBottom: "space0" }, children)
    );
  }
);
PageHeaderHeading.displayName = "PageHeaderHeading";

// src/PageHeaderParagraph.tsx
import { Box as Box7, safelySpreadBoxProps as safelySpreadBoxProps7 } from "@twilio-paste/box";
import { Paragraph } from "@twilio-paste/paragraph";
import * as React7 from "react";
var PageHeaderParagraph = React7.forwardRef(
  ({ element = "PAGE_HEADER_PARAGRAPH", children, ...props }, ref) => {
    const { size } = React7.useContext(PageHeaderContext);
    return /* @__PURE__ */ React7.createElement(
      Box7,
      {
        ...safelySpreadBoxProps7(props),
        ref,
        element: `${element}_WRAPPER`,
        marginTop: size === "compact" ? "space40" : "space70",
        gridArea: "paragraph",
        maxWidth: "size70"
      },
      /* @__PURE__ */ React7.createElement(Paragraph, { element, ref, marginBottom: "space0" }, children)
    );
  }
);
PageHeaderParagraph.displayName = "PageHeaderParagraph";

// src/PageHeaderMeta.tsx
import { Box as Box8, safelySpreadBoxProps as safelySpreadBoxProps8 } from "@twilio-paste/box";
import * as React8 from "react";
var PageHeaderMeta = React8.forwardRef(
  ({ element = "PAGE_HEADER_META", children, ...props }, ref) => {
    const { size } = React8.useContext(PageHeaderContext);
    return /* @__PURE__ */ React8.createElement(
      Box8,
      {
        ...safelySpreadBoxProps8(props),
        ref,
        element,
        gridArea: "meta",
        marginTop: size === "compact" ? "space10" : "space40",
        display: "flex",
        flexWrap: "wrap",
        columnGap: size === "compact" ? "space40" : "space50",
        rowGap: "space30",
        alignItems: "center",
        maxWidth: "size70",
        color: "colorTextWeak",
        fontSize: "fontSize20",
        lineHeight: "lineHeight20",
        fontWeight: "fontWeightMedium"
      },
      children
    );
  }
);
PageHeaderMeta.displayName = "PageHeaderMeta";

// src/PageHeaderActions.tsx
import { Box as Box9, safelySpreadBoxProps as safelySpreadBoxProps9 } from "@twilio-paste/box";
import * as React9 from "react";
var PageHeaderActions = React9.forwardRef(
  ({ element = "PAGE_HEADER_ACTIONS", children, ...props }, ref) => {
    const { size } = React9.useContext(PageHeaderContext);
    return /* @__PURE__ */ React9.createElement(
      Box9,
      {
        ...safelySpreadBoxProps9(props),
        ref,
        element,
        gridArea: "actions",
        justifySelf: "end",
        alignSelf: "start",
        paddingLeft: "space70",
        lineHeight: size === "compact" ? "lineHeight60" : "lineHeight90",
        flexWrap: "wrap"
      },
      children
    );
  }
);
PageHeaderActions.displayName = "PageHeaderActions";

// src/PageHeaderInPageNavigation.tsx
import { Box as Box10, safelySpreadBoxProps as safelySpreadBoxProps10 } from "@twilio-paste/box";
import * as React10 from "react";
var PageHeaderInPageNavigation = React10.forwardRef(
  ({ element = "PAGE_HEADER_IN_PAGE_NAVIGATION", children, ...props }, ref) => {
    return /* @__PURE__ */ React10.createElement(Box10, { ...safelySpreadBoxProps10(props), ref, element, gridArea: "content_barrier" }, children);
  }
);
PageHeaderInPageNavigation.displayName = "PageHeaderInPageNavigation";

// src/PageHeaderSeparator.tsx
import { Box as Box11, safelySpreadBoxProps as safelySpreadBoxProps11 } from "@twilio-paste/box";
import * as React11 from "react";
var PageHeaderSeparator = React11.forwardRef(
  ({ element = "PAGE_HEADER_SEPARATOR", children, ...props }, ref) => {
    return /* @__PURE__ */ React11.createElement(
      Box11,
      {
        ...safelySpreadBoxProps11(props),
        ref,
        element,
        gridArea: "content_barrier",
        marginBottom: "space60"
      },
      children
    );
  }
);
PageHeaderSeparator.displayName = "PageHeaderSeparator";
export {
  PageHeader,
  PageHeaderActions,
  PageHeaderDetails,
  PageHeaderHeading,
  PageHeaderInPageNavigation,
  PageHeaderKeyword,
  PageHeaderMeta,
  PageHeaderParagraph,
  PageHeaderPrefix,
  PageHeaderSeparator,
  PageHeaderSetting
};
