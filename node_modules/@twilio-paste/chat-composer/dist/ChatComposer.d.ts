import type { BoxProps, BoxStyleProps } from "@twilio-paste/box";
import type { ContentEditableProps, LexicalComposerProps, LexicalEditor, OnChangeFunction } from "@twilio-paste/lexical-library";
import * as React from "react";
export interface ChatComposerProps extends Omit<ContentEditableProps, "style" | "className" | "onChange"> {
    children?: LexicalComposerProps["children"];
    /**
     * Utilize the Lexical API directly
     *
     * @default null
     * @type {LexicalComposerProps["initialConfig"]}
     * @memberof ChatComposerProps
     */
    config: LexicalComposerProps["initialConfig"];
    /**
     * Overrides the default element name to apply unique styles with the Customization Provider
     *
     * @default "CHAT_COMPOSER"
     * @type {BoxProps["element"]}
     * @memberof ChatComposerProps
     */
    element?: BoxProps["element"];
    /**
     *
     * @default null
     * @type {BoxStyleProps["maxHeight"]}
     * @memberof ChatComposerProps
     */
    maxHeight?: BoxStyleProps["maxHeight"];
    /**
     *
     * @default null
     * @type {BoxStyleProps["fontSize"]}
     * @memberof ChatComposerProps
     */
    fontSize?: BoxStyleProps["fontSize"];
    /**
     *
     * @default null
     * @type {BoxStyleProps["lineHeight"]}
     * @memberof ChatComposerProps
     */
    lineHeight?: BoxStyleProps["lineHeight"];
    /**
     *
     * @default null
     * @type {string}
     * @memberof ChatComposerProps
     */
    initialValue?: string;
    /**
     *
     * @default null
     * @type {boolean}
     * @memberof ChatComposerProps
     */
    disabled?: boolean;
    /**
     *
     * @default null
     * @type {OnChangeFunction}
     * @memberof ChatComposerProps
     */
    onChange?: OnChangeFunction;
    /**
     *
     * @default null
     * @type {React.MutableRefObject<LexicalEditor | null>}
     * @memberof ChatComposerProps
     */
    editorInstanceRef?: React.MutableRefObject<LexicalEditor | null>;
}
export declare const ChatComposer: React.ForwardRefExoticComponent<ChatComposerProps & React.RefAttributes<HTMLDivElement>>;
//# sourceMappingURL=ChatComposer.d.ts.map