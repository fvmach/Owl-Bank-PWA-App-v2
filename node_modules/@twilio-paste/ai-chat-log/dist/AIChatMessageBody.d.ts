import type { BoxElementProps } from "@twilio-paste/box";
import type { HTMLPasteProps } from "@twilio-paste/types";
import * as React from "react";
export interface AIChatMessageBodyProps extends HTMLPasteProps<"div"> {
    id?: never;
    children?: React.ReactNode;
    /**
     * Overrides the default element name to apply unique styles with the Customization Provider
     *
     * @default "AI_CHAT_MESSAGE_BODY"
     * @type {BoxProps["element"]}
     * @memberof AIChatMessageBodyProps
     */
    element?: BoxElementProps["element"];
    /**
     * Use a larger font size and line height for fullscreen experiences.
     *
     * @default "default"
     * @type {"default" | "fullScreen"}
     * @memberof AIChatMessageBodyProps
     */
    size?: "default" | "fullScreen";
    /**
     * Whether the text should be animated with type writer effect
     *
     * @default false
     * @type {boolean}
     * @memberof AIChatMessageBodyProps
     */
    animated?: boolean;
    /**
     * A callback when the animation is started
     *
     * @default false
     * @type {() => void}
     * @memberof AIChatMessageBodyProps
     */
    onAnimationStart?: () => void;
    /**
     * A callback when the animation is complete
     *
     * @default false
     * @type {() => void}
     * @memberof AIChatMessageBodyProps
     */
    onAnimationEnd?: () => void;
}
export declare const AIChatMessageBody: React.ForwardRefExoticComponent<AIChatMessageBodyProps & React.RefAttributes<HTMLDivElement>>;
//# sourceMappingURL=AIChatMessageBody.d.ts.map